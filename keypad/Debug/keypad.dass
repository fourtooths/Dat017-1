
./Debug/keypad.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:

void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8da 	bl	200001bc <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:

void app_init(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	"ldr r1,=0x00005555 \n"
	"ldr r0, =0x40020c00 \n"
	"str r1,[r0] \n"	
	)
*/ 
	*GPIO_MODER = 0x55005555;
20000014:	4b05      	ldr	r3, [pc, #20]	; (2000002c <app_init+0x1c>)
20000016:	4a06      	ldr	r2, [pc, #24]	; (20000030 <app_init+0x20>)
20000018:	601a      	str	r2, [r3, #0]
	*GPIO_OTYPER = 0x0000;
2000001a:	4b06      	ldr	r3, [pc, #24]	; (20000034 <app_init+0x24>)
2000001c:	2200      	movs	r2, #0
2000001e:	801a      	strh	r2, [r3, #0]
	//int i = *GPIO_PUPDR;
	*GPIO_PUPDR = 0x55aa0000;
20000020:	4b05      	ldr	r3, [pc, #20]	; (20000038 <app_init+0x28>)
20000022:	4a06      	ldr	r2, [pc, #24]	; (2000003c <app_init+0x2c>)
20000024:	601a      	str	r2, [r3, #0]
}
20000026:	46c0      	nop			; (mov r8, r8)
20000028:	46bd      	mov	sp, r7
2000002a:	bd80      	pop	{r7, pc}
2000002c:	40020c00 	andmi	r0, r2, r0, lsl #24
20000030:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000034:	40020c04 	andmi	r0, r2, r4, lsl #24
20000038:	40020c0c 	andmi	r0, r2, ip, lsl #24
2000003c:	55aa0000 	strpl	r0, [sl, #0]!

20000040 <kbdActive>:

void kbdActive(unsigned char row)
{
20000040:	b580      	push	{r7, lr}
20000042:	b082      	sub	sp, #8
20000044:	af00      	add	r7, sp, #0
20000046:	0002      	movs	r2, r0
20000048:	1dfb      	adds	r3, r7, #7
2000004a:	701a      	strb	r2, [r3, #0]
	switch(row){
2000004c:	1dfb      	adds	r3, r7, #7
2000004e:	781b      	ldrb	r3, [r3, #0]
20000050:	2b02      	cmp	r3, #2
20000052:	d00c      	beq.n	2000006e <kbdActive+0x2e>
20000054:	dc02      	bgt.n	2000005c <kbdActive+0x1c>
20000056:	2b01      	cmp	r3, #1
20000058:	d005      	beq.n	20000066 <kbdActive+0x26>
2000005a:	e014      	b.n	20000086 <kbdActive+0x46>
2000005c:	2b03      	cmp	r3, #3
2000005e:	d00a      	beq.n	20000076 <kbdActive+0x36>
20000060:	2b04      	cmp	r3, #4
20000062:	d00c      	beq.n	2000007e <kbdActive+0x3e>
20000064:	e00f      	b.n	20000086 <kbdActive+0x46>
		case 1: *GPIO_ODR_HIGH = 0x10; break;
20000066:	4b0b      	ldr	r3, [pc, #44]	; (20000094 <kbdActive+0x54>)
20000068:	2210      	movs	r2, #16
2000006a:	701a      	strb	r2, [r3, #0]
2000006c:	e00e      	b.n	2000008c <kbdActive+0x4c>
		case 2: *GPIO_ODR_HIGH = 0x20; break;
2000006e:	4b09      	ldr	r3, [pc, #36]	; (20000094 <kbdActive+0x54>)
20000070:	2220      	movs	r2, #32
20000072:	701a      	strb	r2, [r3, #0]
20000074:	e00a      	b.n	2000008c <kbdActive+0x4c>
		case 3: *GPIO_ODR_HIGH = 0x40; break;
20000076:	4b07      	ldr	r3, [pc, #28]	; (20000094 <kbdActive+0x54>)
20000078:	2240      	movs	r2, #64	; 0x40
2000007a:	701a      	strb	r2, [r3, #0]
2000007c:	e006      	b.n	2000008c <kbdActive+0x4c>
		case 4: *GPIO_ODR_HIGH = 0x80; break;
2000007e:	4b05      	ldr	r3, [pc, #20]	; (20000094 <kbdActive+0x54>)
20000080:	2280      	movs	r2, #128	; 0x80
20000082:	701a      	strb	r2, [r3, #0]
20000084:	e002      	b.n	2000008c <kbdActive+0x4c>
		default: *GPIO_ODR_HIGH = 0;
20000086:	4b03      	ldr	r3, [pc, #12]	; (20000094 <kbdActive+0x54>)
20000088:	2200      	movs	r2, #0
2000008a:	701a      	strb	r2, [r3, #0]

	}
}
2000008c:	46c0      	nop			; (mov r8, r8)
2000008e:	46bd      	mov	sp, r7
20000090:	b002      	add	sp, #8
20000092:	bd80      	pop	{r7, pc}
20000094:	40020c15 	andmi	r0, r2, r5, lsl ip

20000098 <kbdGetCol>:

unsigned char kbdGetCol(void)
{
20000098:	b580      	push	{r7, lr}
2000009a:	b082      	sub	sp, #8
2000009c:	af00      	add	r7, sp, #0
	unsigned char c = *GPIO_IDR_HIGH;
2000009e:	4a12      	ldr	r2, [pc, #72]	; (200000e8 <kbdGetCol+0x50>)
200000a0:	1dfb      	adds	r3, r7, #7
200000a2:	7812      	ldrb	r2, [r2, #0]
200000a4:	701a      	strb	r2, [r3, #0]
	
	if(c&0x8) return 4;
200000a6:	1dfb      	adds	r3, r7, #7
200000a8:	781b      	ldrb	r3, [r3, #0]
200000aa:	2208      	movs	r2, #8
200000ac:	4013      	ands	r3, r2
200000ae:	d001      	beq.n	200000b4 <kbdGetCol+0x1c>
200000b0:	2304      	movs	r3, #4
200000b2:	e015      	b.n	200000e0 <kbdGetCol+0x48>
	if(c&0x4) return 3;
200000b4:	1dfb      	adds	r3, r7, #7
200000b6:	781b      	ldrb	r3, [r3, #0]
200000b8:	2204      	movs	r2, #4
200000ba:	4013      	ands	r3, r2
200000bc:	d001      	beq.n	200000c2 <kbdGetCol+0x2a>
200000be:	2303      	movs	r3, #3
200000c0:	e00e      	b.n	200000e0 <kbdGetCol+0x48>
	if(c&0x2) return 2;
200000c2:	1dfb      	adds	r3, r7, #7
200000c4:	781b      	ldrb	r3, [r3, #0]
200000c6:	2202      	movs	r2, #2
200000c8:	4013      	ands	r3, r2
200000ca:	d001      	beq.n	200000d0 <kbdGetCol+0x38>
200000cc:	2302      	movs	r3, #2
200000ce:	e007      	b.n	200000e0 <kbdGetCol+0x48>
	if(c&0x1) return 1;
200000d0:	1dfb      	adds	r3, r7, #7
200000d2:	781b      	ldrb	r3, [r3, #0]
200000d4:	2201      	movs	r2, #1
200000d6:	4013      	ands	r3, r2
200000d8:	d001      	beq.n	200000de <kbdGetCol+0x46>
200000da:	2301      	movs	r3, #1
200000dc:	e000      	b.n	200000e0 <kbdGetCol+0x48>
	return 0;
200000de:	2300      	movs	r3, #0
}
200000e0:	0018      	movs	r0, r3
200000e2:	46bd      	mov	sp, r7
200000e4:	b002      	add	sp, #8
200000e6:	bd80      	pop	{r7, pc}
200000e8:	40020c11 	andmi	r0, r2, r1, lsl ip

200000ec <keyb>:

unsigned char keyb(void)
{
200000ec:	b5b0      	push	{r4, r5, r7, lr}
200000ee:	b086      	sub	sp, #24
200000f0:	af00      	add	r7, sp, #0
	unsigned char row, col;
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE, 0, 0xF, 0xD};
200000f2:	1d3b      	adds	r3, r7, #4
200000f4:	4a1e      	ldr	r2, [pc, #120]	; (20000170 <keyb+0x84>)
200000f6:	ca13      	ldmia	r2!, {r0, r1, r4}
200000f8:	c313      	stmia	r3!, {r0, r1, r4}
200000fa:	6812      	ldr	r2, [r2, #0]
200000fc:	601a      	str	r2, [r3, #0]
	for(row=1; row<=4; row++){
200000fe:	2317      	movs	r3, #23
20000100:	18fb      	adds	r3, r7, r3
20000102:	2201      	movs	r2, #1
20000104:	701a      	strb	r2, [r3, #0]
20000106:	e025      	b.n	20000154 <keyb+0x68>
		kbdActive(row);
20000108:	2317      	movs	r3, #23
2000010a:	18fb      	adds	r3, r7, r3
2000010c:	781b      	ldrb	r3, [r3, #0]
2000010e:	0018      	movs	r0, r3
20000110:	f7ff ff96 	bl	20000040 <kbdActive>
		
		if(col=kbdGetCol()){
20000114:	2516      	movs	r5, #22
20000116:	197c      	adds	r4, r7, r5
20000118:	f7ff ffbe 	bl	20000098 <kbdGetCol>
2000011c:	0003      	movs	r3, r0
2000011e:	7023      	strb	r3, [r4, #0]
20000120:	197b      	adds	r3, r7, r5
20000122:	781b      	ldrb	r3, [r3, #0]
20000124:	2b00      	cmp	r3, #0
20000126:	d00f      	beq.n	20000148 <keyb+0x5c>
			kbdActive(0);
20000128:	2000      	movs	r0, #0
2000012a:	f7ff ff89 	bl	20000040 <kbdActive>
			
			return key[(row-1)*4+(col-1)];
2000012e:	2317      	movs	r3, #23
20000130:	18fb      	adds	r3, r7, r3
20000132:	781b      	ldrb	r3, [r3, #0]
20000134:	3b01      	subs	r3, #1
20000136:	009a      	lsls	r2, r3, #2
20000138:	2316      	movs	r3, #22
2000013a:	18fb      	adds	r3, r7, r3
2000013c:	781b      	ldrb	r3, [r3, #0]
2000013e:	3b01      	subs	r3, #1
20000140:	18d3      	adds	r3, r2, r3
20000142:	1d3a      	adds	r2, r7, #4
20000144:	5cd3      	ldrb	r3, [r2, r3]
20000146:	e00e      	b.n	20000166 <keyb+0x7a>
	for(row=1; row<=4; row++){
20000148:	2117      	movs	r1, #23
2000014a:	187b      	adds	r3, r7, r1
2000014c:	781a      	ldrb	r2, [r3, #0]
2000014e:	187b      	adds	r3, r7, r1
20000150:	3201      	adds	r2, #1
20000152:	701a      	strb	r2, [r3, #0]
20000154:	2317      	movs	r3, #23
20000156:	18fb      	adds	r3, r7, r3
20000158:	781b      	ldrb	r3, [r3, #0]
2000015a:	2b04      	cmp	r3, #4
2000015c:	d9d4      	bls.n	20000108 <keyb+0x1c>
		}
	}
	kbdActive(0);
2000015e:	2000      	movs	r0, #0
20000160:	f7ff ff6e 	bl	20000040 <kbdActive>
	return 0xff;
20000164:	23ff      	movs	r3, #255	; 0xff
}
20000166:	0018      	movs	r0, r3
20000168:	46bd      	mov	sp, r7
2000016a:	b006      	add	sp, #24
2000016c:	bdb0      	pop	{r4, r5, r7, pc}
2000016e:	46c0      	nop			; (mov r8, r8)
20000170:	200001dc 	ldrdcs	r0, [r0], -ip

20000174 <out7seg>:

void out7seg(unsigned char c)
{
20000174:	b590      	push	{r4, r7, lr}
20000176:	b087      	sub	sp, #28
20000178:	af00      	add	r7, sp, #0
2000017a:	0002      	movs	r2, r0
2000017c:	1dfb      	adds	r3, r7, #7
2000017e:	701a      	strb	r2, [r3, #0]
	unsigned char segcode[]={0x3f, 0x06, 0x5B, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71};
20000180:	2308      	movs	r3, #8
20000182:	18fb      	adds	r3, r7, r3
20000184:	4a0b      	ldr	r2, [pc, #44]	; (200001b4 <out7seg+0x40>)
20000186:	ca13      	ldmia	r2!, {r0, r1, r4}
20000188:	c313      	stmia	r3!, {r0, r1, r4}
2000018a:	6812      	ldr	r2, [r2, #0]
2000018c:	601a      	str	r2, [r3, #0]
	if (c<16){
2000018e:	1dfb      	adds	r3, r7, #7
20000190:	781b      	ldrb	r3, [r3, #0]
20000192:	2b0f      	cmp	r3, #15
20000194:	d807      	bhi.n	200001a6 <out7seg+0x32>
		*GPIO_ODR_LOW=segcode[c];
20000196:	1dfb      	adds	r3, r7, #7
20000198:	781b      	ldrb	r3, [r3, #0]
2000019a:	4907      	ldr	r1, [pc, #28]	; (200001b8 <out7seg+0x44>)
2000019c:	2208      	movs	r2, #8
2000019e:	18ba      	adds	r2, r7, r2
200001a0:	5cd3      	ldrb	r3, [r2, r3]
200001a2:	700b      	strb	r3, [r1, #0]
	}
	else{
		*GPIO_ODR_LOW=0;
		}	
}
200001a4:	e002      	b.n	200001ac <out7seg+0x38>
		*GPIO_ODR_LOW=0;
200001a6:	4b04      	ldr	r3, [pc, #16]	; (200001b8 <out7seg+0x44>)
200001a8:	2200      	movs	r2, #0
200001aa:	701a      	strb	r2, [r3, #0]
}
200001ac:	46c0      	nop			; (mov r8, r8)
200001ae:	46bd      	mov	sp, r7
200001b0:	b007      	add	sp, #28
200001b2:	bd90      	pop	{r4, r7, pc}
200001b4:	200001ec 	andcs	r0, r0, ip, ror #3
200001b8:	40020c14 	andmi	r0, r2, r4, lsl ip

200001bc <main>:

void main(void)
{
200001bc:	b580      	push	{r7, lr}
200001be:	b082      	sub	sp, #8
200001c0:	af00      	add	r7, sp, #0
	unsigned char c = 0xa;
200001c2:	1dfb      	adds	r3, r7, #7
200001c4:	220a      	movs	r2, #10
200001c6:	701a      	strb	r2, [r3, #0]
	app_init();
200001c8:	f7ff ff22 	bl	20000010 <app_init>
	while(1){
		out7seg(keyb());
200001cc:	f7ff ff8e 	bl	200000ec <keyb>
200001d0:	0003      	movs	r3, r0
200001d2:	0018      	movs	r0, r3
200001d4:	f7ff ffce 	bl	20000174 <out7seg>
200001d8:	e7f8      	b.n	200001cc <main+0x10>
200001da:	46c0      	nop			; (mov r8, r8)
200001dc:	0a030201 	beq	200c09e8 <main+0xc082c>
200001e0:	0b060504 	bleq	201815f8 <main+0x18143c>
200001e4:	0c090807 	stceq	8, cr0, [r9], {7}
200001e8:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 200001b8 <out7seg+0x44>
200001ec:	4f5b063f 	svcmi	0x005b063f
200001f0:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
200001f4:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	; 0xfffffe04
200001f8:	71795e39 	cmnvc	r9, r9, lsr lr

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000142 	andeq	r0, r0, r2, asr #2
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000003f 	andeq	r0, r0, pc, lsr r0
  10:	0001190c 	andeq	r1, r1, ip, lsl #18
  14:	0000d700 	andeq	sp, r0, r0, lsl #14
	...
  24:	00240200 	eoreq	r0, r4, r0, lsl #4
  28:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
  2c:	200001bc 			; <UNDEFINED> instruction: 0x200001bc
  30:	0000001e 	andeq	r0, r0, lr, lsl r0
  34:	00479c01 	subeq	r9, r7, r1, lsl #24
  38:	63030000 	movwvs	r0, #12288	; 0x3000
  3c:	47600100 	strbmi	r0, [r0, -r0, lsl #2]!
  40:	02000000 	andeq	r0, r0, #0
  44:	04007791 	streq	r7, [r0], #-1937	; 0xfffff86f
  48:	00310801 	eorseq	r0, r1, r1, lsl #16
  4c:	11050000 	mrsne	r0, (UNDEF: 5)
  50:	01000001 	tsteq	r0, r1
  54:	00017453 	andeq	r7, r1, r3, asr r4
  58:	00004820 	andeq	r4, r0, r0, lsr #16
  5c:	7e9c0100 	fmlvce	f0, f4, f0
  60:	06000000 	streq	r0, [r0], -r0
  64:	53010063 	movwpl	r0, #4195	; 0x1063
  68:	00000047 	andeq	r0, r0, r7, asr #32
  6c:	075f9102 	ldrbeq	r9, [pc, -r2, lsl #2]
  70:	0000001c 	andeq	r0, r0, ip, lsl r0
  74:	007e5501 	rsbseq	r5, lr, r1, lsl #10
  78:	91020000 	mrsls	r0, (UNDEF: 2)
  7c:	47080060 	strmi	r0, [r8, -r0, rrx]
  80:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
  84:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
  88:	0000008e 	andeq	r0, r0, lr, lsl #1
  8c:	0404000f 	streq	r0, [r4], #-15
  90:	00000007 	andeq	r0, r0, r7
  94:	000d0a00 	andeq	r0, sp, r0, lsl #20
  98:	42010000 	andmi	r0, r1, #0
  9c:	00000047 	andeq	r0, r0, r7, asr #32
  a0:	200000ec 	andcs	r0, r0, ip, ror #1
  a4:	00000088 	andeq	r0, r0, r8, lsl #1
  a8:	00d99c01 	sbcseq	r9, r9, r1, lsl #24
  ac:	72030000 	andvc	r0, r3, #0
  b0:	0100776f 	tsteq	r0, pc, ror #14
  b4:	00004744 	andeq	r4, r0, r4, asr #14
  b8:	6f910200 	svcvs	0x00910200
  bc:	6c6f6303 	stclvs	3, cr6, [pc], #-12	; b8 <startup-0x1fffff48>
  c0:	47440100 	strbmi	r0, [r4, -r0, lsl #2]
  c4:	02000000 	andeq	r0, r0, #0
  c8:	6b036e91 	blvs	dbb14 <startup-0x1ff244ec>
  cc:	01007965 	tsteq	r0, r5, ror #18
  d0:	00007e45 	andeq	r7, r0, r5, asr #28
  d4:	5c910200 	lfmpl	f0, 4, [r1], {0}
  d8:	01070b00 	tsteq	r7, r0, lsl #22
  dc:	37010000 	strcc	r0, [r1, -r0]
  e0:	00000047 	andeq	r0, r0, r7, asr #32
  e4:	20000098 	mulcs	r0, r8, r0
  e8:	00000054 	andeq	r0, r0, r4, asr r0
  ec:	00ff9c01 	rscseq	r9, pc, r1, lsl #24
  f0:	63030000 	movwvs	r0, #12288	; 0x3000
  f4:	47390100 	ldrmi	r0, [r9, -r0, lsl #2]!
  f8:	02000000 	andeq	r0, r0, #0
  fc:	05007791 	streq	r7, [r0, #-1937]	; 0xfffff86f
 100:	00000012 	andeq	r0, r0, r2, lsl r0
 104:	00402b01 	subeq	r2, r0, r1, lsl #22
 108:	00582000 	subseq	r2, r8, r0
 10c:	9c010000 	stcls	0, cr0, [r1], {-0}
 110:	00000123 	andeq	r0, r0, r3, lsr #2
 114:	776f7206 	strbvc	r7, [pc, -r6, lsl #4]!
 118:	472b0100 	strmi	r0, [fp, -r0, lsl #2]!
 11c:	02000000 	andeq	r0, r0, #0
 120:	0c007791 	stceq	7, cr7, [r0], {145}	; 0x91
 124:	00000153 	andeq	r0, r0, r3, asr r1
 128:	00101c01 	andseq	r1, r0, r1, lsl #24
 12c:	00302000 	eorseq	r2, r0, r0
 130:	9c010000 	stcls	0, cr0, [r1], {-0}
 134:	0000290c 	andeq	r2, r0, ip, lsl #18
 138:	00120100 	andseq	r0, r2, r0, lsl #2
 13c:	0c200000 	stceq	0, cr0, [r0], #-0
 140:	01000000 	mrseq	r0, (UNDEF: 0)
 144:	Address 0x00000144 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  20:	06120111 			; <UNDEFINED> instruction: 0x06120111
  24:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  28:	00130119 	andseq	r0, r3, r9, lsl r1
  2c:	00340300 	eorseq	r0, r4, r0, lsl #6
  30:	0b3a0803 	bleq	e82044 <startup-0x1f17dfbc>
  34:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  38:	00001802 	andeq	r1, r0, r2, lsl #16
  3c:	0b002404 	bleq	9054 <startup-0x1fff6fac>
  40:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  44:	0500000e 	streq	r0, [r0, #-14]
  48:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  4c:	0b3a0e03 	bleq	e83860 <startup-0x1f17c7a0>
  50:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  54:	06120111 			; <UNDEFINED> instruction: 0x06120111
  58:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  5c:	00130119 	andseq	r0, r3, r9, lsl r1
  60:	00050600 	andeq	r0, r5, r0, lsl #12
  64:	0b3a0803 	bleq	e82078 <startup-0x1f17df88>
  68:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  6c:	00001802 	andeq	r1, r0, r2, lsl #16
  70:	03003407 	movweq	r3, #1031	; 0x407
  74:	3b0b3a0e 	blcc	2ce8b4 <startup-0x1fd3174c>
  78:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  7c:	08000018 	stmdaeq	r0, {r3, r4}
  80:	13490101 	movtne	r0, #37121	; 0x9101
  84:	00001301 	andeq	r1, r0, r1, lsl #6
  88:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
  8c:	000b2f13 	andeq	r2, fp, r3, lsl pc
  90:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	13491927 	movtne	r1, #39207	; 0x9927
  a0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  a4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  a8:	00130119 	andseq	r0, r3, r9, lsl r1
  ac:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
  b0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  b4:	0b3b0b3a 	bleq	ec2da4 <startup-0x1f13d25c>
  b8:	13491927 	movtne	r1, #39207	; 0x9927
  bc:	06120111 			; <UNDEFINED> instruction: 0x06120111
  c0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  c4:	00130119 	andseq	r0, r3, r9, lsl r1
  c8:	002e0c00 	eoreq	r0, lr, r0, lsl #24
  cc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  d0:	0b3b0b3a 	bleq	ec2dc0 <startup-0x1f13d240>
  d4:	01111927 	tsteq	r1, r7, lsr #18
  d8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  dc:	00194297 	mulseq	r9, r7, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001ca 	andeq	r0, r0, sl, asr #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001da 	ldrdcs	r0, [r0], -sl
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000d3 	ldrdeq	r0, [r0], -r3
   4:	00500002 	subseq	r0, r0, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6e696568 	cdpvs	5, 6, cr6, cr9, cr8, {3}
  28:	6f442f6c 	svcvs	0x00442f6c
  2c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  30:	2f73746e 	svccs	0x0073746e
  34:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
  38:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  3c:	6f697461 	svcvs	0x00697461
  40:	2f72656e 	svccs	0x0072656e
  44:	7079656b 	rsbsvc	r6, r9, fp, ror #10
  48:	00006461 	andeq	r6, r0, r1, ror #8
  4c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  50:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  54:	00010063 	andeq	r0, r1, r3, rrx
  58:	05000000 	streq	r0, [r0, #-0]
  5c:	00000002 	andeq	r0, r0, r2
  60:	01120320 	tsteq	r2, r0, lsr #6
  64:	03025e13 	movweq	r5, #11795	; 0x2e13
  68:	00010100 	andeq	r0, r1, r0, lsl #2
  6c:	00100205 	andseq	r0, r0, r5, lsl #4
  70:	1c032000 	stcne	0, cr2, [r3], {-0}
  74:	3e3d3601 	cfmsuba32cc	mvax0, mvax3, mvfx13, mvfx1
  78:	c967cb3d 	stmdbgt	r7!, {r0, r2, r3, r4, r5, r8, r9, fp, lr, pc}^
  7c:	4b4b4b4b 	blmi	12d2db0 <startup-0x1ed2d250>
  80:	4c3d693f 			; <UNDEFINED> instruction: 0x4c3d693f
  84:	01040200 	mrseq	r0, R12_usr
  88:	2f065806 	svccs	0x00065806
  8c:	01040200 	mrseq	r0, R12_usr
  90:	2f065806 	svccs	0x00065806
  94:	01040200 	mrseq	r0, R12_usr
  98:	2f065806 	svccs	0x00065806
  9c:	01040200 	mrseq	r0, R12_usr
  a0:	2f065806 	svccs	0x00065806
  a4:	673e6921 	ldrvs	r6, [lr, -r1, lsr #18]!
  a8:	3e9f6859 	mrccc	8, 4, r6, cr15, cr9, {2}
  ac:	02040200 	andeq	r0, r4, #0, 4
  b0:	00c87a03 	sbceq	r7, r8, r3, lsl #20
  b4:	06010402 	streq	r0, [r1], -r2, lsl #8
  b8:	09030666 	stmdbeq	r3, {r1, r2, r5, r6, r9, sl}
  bc:	02003d58 	andeq	r3, r0, #88, 26	; 0x1600
  c0:	77210104 	strvc	r0, [r1, -r4, lsl #2]!
  c4:	794b7567 	stmdbvc	fp, {r0, r1, r2, r5, r6, r8, sl, ip, sp, lr}^
  c8:	3d853e1e 	stccc	14, cr3, [r5, #120]	; 0x78
  cc:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
  d0:	07023001 	streq	r3, [r2, -r1]
  d4:	Address 0x000000d4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  10:	626b0062 	rsbvs	r0, fp, #98	; 0x62
  14:	74634164 	strbtvc	r4, [r3], #-356	; 0xfffffe9c
  18:	00657669 	rsbeq	r7, r5, r9, ror #12
  1c:	63676573 	cmnvs	r7, #482344960	; 0x1cc00000
  20:	0065646f 	rsbeq	r6, r5, pc, ror #8
  24:	6e69616d 	powvsez	f6, f1, #5.0
  28:	61747300 	cmnvs	r4, r0, lsl #6
  2c:	70757472 	rsbsvc	r7, r5, r2, ror r4
  30:	736e7500 	cmnvc	lr, #0, 10
  34:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  38:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
  3c:	47007261 	strmi	r7, [r0, -r1, ror #4]
  40:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
  44:	37203939 			; <UNDEFINED> instruction: 0x37203939
  48:	312e322e 			; <UNDEFINED> instruction: 0x312e322e
  4c:	31303220 	teqcc	r0, r0, lsr #4
  50:	30393037 	eorscc	r3, r9, r7, lsr r0
  54:	72282034 	eorvc	r2, r8, #52	; 0x34
  58:	61656c65 	cmnvs	r5, r5, ror #24
  5c:	20296573 	eorcs	r6, r9, r3, ror r5
  60:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
  64:	626d652f 	rsbvs	r6, sp, #197132288	; 0xbc00000
  68:	65646465 	strbvs	r6, [r4, #-1125]!	; 0xfffffb9b
  6c:	2d372d64 	ldccs	13, cr2, [r7, #-400]!	; 0xfffffe70
  70:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  74:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  78:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  7c:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  80:	32353532 	eorscc	r3, r5, #209715200	; 0xc800000
  84:	205d3430 	subscs	r3, sp, r0, lsr r4
  88:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  8c:	20626d75 	rsbcs	r6, r2, r5, ror sp
  90:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
  94:	613d6863 	teqvs	sp, r3, ror #16
  98:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
  9c:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
  a0:	6f6c666d 	svcvs	0x006c666d
  a4:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
  a8:	733d6962 	teqvc	sp, #1605632	; 0x188000
  ac:	2074666f 	rsbscs	r6, r4, pc, ror #12
  b0:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  b4:	20626d75 	rsbcs	r6, r2, r5, ror sp
  b8:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
  bc:	613d6863 	teqvs	sp, r3, ror #16
  c0:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
  c4:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
  c8:	4f2d2067 	svcmi	0x002d2067
  cc:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
  d0:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
  d4:	43003939 	movwmi	r3, #2361	; 0x939
  d8:	73555c3a 	cmpvc	r5, #14848	; 0x3a00
  dc:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
  e0:	6e696568 	cdpvs	5, 6, cr6, cr9, cr8, {3}
  e4:	6f445c6c 	svcvs	0x00445c6c
  e8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  ec:	5c73746e 	cfldrdpl	mvd7, [r3], #-440	; 0xfffffe48
  f0:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
  f4:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  f8:	6f697461 	svcvs	0x00697461
  fc:	5c72656e 	cfldr64pl	mvdx6, [r2], #-440	; 0xfffffe48
 100:	7079656b 	rsbsvc	r6, r9, fp, ror #10
 104:	6b006461 	blvs	19290 <startup-0x1ffe6d70>
 108:	65476462 	strbvs	r6, [r7, #-1122]	; 0xfffffb9e
 10c:	6c6f4374 	stclvs	3, cr4, [pc], #-464	; ffffff44 <main+0xdffffd88>
 110:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 114:	67657337 			; <UNDEFINED> instruction: 0x67657337
 118:	2f3a4300 	svccs	0x003a4300
 11c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 120:	65682f73 	strbvs	r2, [r8, #-3955]!	; 0xfffff08d
 124:	2f6c6e69 	svccs	0x006c6e69
 128:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 12c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 130:	6f4d2f73 	svcvs	0x004d2f73
 134:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
 138:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 13c:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 140:	656b2f72 	strbvs	r2, [fp, #-3954]!	; 0xfffff08e
 144:	64617079 	strbtvs	r7, [r1], #-121	; 0xffffff87
 148:	6174732f 	cmnvs	r4, pc, lsr #6
 14c:	70757472 	rsbsvc	r7, r5, r2, ror r4
 150:	6100632e 	tstvs	r0, lr, lsr #6
 154:	695f7070 	ldmdbvs	pc, {r4, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 158:	0074696e 	rsbseq	r6, r4, lr, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <main+0xdffff152>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000030 	andeq	r0, r0, r0, lsr r0
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000040 	andcs	r0, r0, r0, asr #32
  48:	00000058 	andeq	r0, r0, r8, asr r0
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	100e4101 	andne	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000098 	mulcs	r0, r8, r0
  68:	00000054 	andeq	r0, r0, r4, asr r0
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	100e4101 	andne	r4, lr, r1, lsl #2
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	00000024 	andeq	r0, r0, r4, lsr #32
  80:	00000000 	andeq	r0, r0, r0
  84:	200000ec 	andcs	r0, r0, ip, ror #1
  88:	00000088 	andeq	r0, r0, r8, lsl #1
  8c:	40100e41 	andsmi	r0, r0, r1, asr #28
  90:	85400484 	strbhi	r0, [r0, #-1156]	; 0xfffffb7c
  94:	02874003 	addeq	r4, r7, #3
  98:	41018e40 	tstmi	r1, r0, asr #28
  9c:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
  a0:	00000007 	andeq	r0, r0, r7
  a4:	00000020 	andeq	r0, r0, r0, lsr #32
  a8:	00000000 	andeq	r0, r0, r0
  ac:	20000174 	andcs	r0, r0, r4, ror r1
  b0:	00000048 	andeq	r0, r0, r8, asr #32
  b4:	400c0e41 	andmi	r0, ip, r1, asr #28
  b8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  bc:	018e4002 	orreq	r4, lr, r2
  c0:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  c4:	0000070d 	andeq	r0, r0, sp, lsl #14
  c8:	0000001c 	andeq	r0, r0, ip, lsl r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	200001bc 			; <UNDEFINED> instruction: 0x200001bc
  d4:	0000001e 	andeq	r0, r0, lr, lsl r0
  d8:	40080e41 	andmi	r0, r8, r1, asr #28
  dc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  e0:	100e4101 	andne	r4, lr, r1, lsl #2
  e4:	00070d41 	andeq	r0, r7, r1, asr #26
