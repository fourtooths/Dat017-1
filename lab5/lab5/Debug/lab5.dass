
./Debug/lab5.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
//Startup
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 fdea 	bl	20000bdc <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <delay_250ns>:
#include "defines.h"
#include "globals.h"

void delay_250ns(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	
	*STK_CTRL = 0;
20000014:	4b0c      	ldr	r3, [pc, #48]	; (20000048 <delay_250ns+0x38>)
20000016:	2200      	movs	r2, #0
20000018:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1 );
2000001a:	4b0c      	ldr	r3, [pc, #48]	; (2000004c <delay_250ns+0x3c>)
2000001c:	2229      	movs	r2, #41	; 0x29
2000001e:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20000020:	4b0b      	ldr	r3, [pc, #44]	; (20000050 <delay_250ns+0x40>)
20000022:	2200      	movs	r2, #0
20000024:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
20000026:	4b08      	ldr	r3, [pc, #32]	; (20000048 <delay_250ns+0x38>)
20000028:	2205      	movs	r2, #5
2000002a:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000 )== 0 ) {}
2000002c:	46c0      	nop			; (mov r8, r8)
2000002e:	4b06      	ldr	r3, [pc, #24]	; (20000048 <delay_250ns+0x38>)
20000030:	681a      	ldr	r2, [r3, #0]
20000032:	2380      	movs	r3, #128	; 0x80
20000034:	025b      	lsls	r3, r3, #9
20000036:	4013      	ands	r3, r2
20000038:	d0f9      	beq.n	2000002e <delay_250ns+0x1e>
	*STK_CTRL = 0;
2000003a:	4b03      	ldr	r3, [pc, #12]	; (20000048 <delay_250ns+0x38>)
2000003c:	2200      	movs	r2, #0
2000003e:	601a      	str	r2, [r3, #0]
}
20000040:	46c0      	nop			; (mov r8, r8)
20000042:	46bd      	mov	sp, r7
20000044:	bd80      	pop	{r7, pc}
20000046:	46c0      	nop			; (mov r8, r8)
20000048:	e000e010 	and	lr, r0, r0, lsl r0
2000004c:	e000e014 	and	lr, r0, r4, lsl r0
20000050:	e000e018 	and	lr, r0, r8, lsl r0

20000054 <delay_500ns>:

void delay_500ns(void){
20000054:	b580      	push	{r7, lr}
20000056:	af00      	add	r7, sp, #0
	delay_250ns();
20000058:	f7ff ffda 	bl	20000010 <delay_250ns>
	delay_250ns();
2000005c:	f7ff ffd8 	bl	20000010 <delay_250ns>
}
20000060:	46c0      	nop			; (mov r8, r8)
20000062:	46bd      	mov	sp, r7
20000064:	bd80      	pop	{r7, pc}

20000066 <delay_mikro>:

void delay_mikro(unsigned int us){
20000066:	b580      	push	{r7, lr}
20000068:	b082      	sub	sp, #8
2000006a:	af00      	add	r7, sp, #0
2000006c:	6078      	str	r0, [r7, #4]
	
	while(us--) 
2000006e:	e007      	b.n	20000080 <delay_mikro+0x1a>
	{
		delay_250ns();
20000070:	f7ff ffce 	bl	20000010 <delay_250ns>
		delay_250ns();
20000074:	f7ff ffcc 	bl	20000010 <delay_250ns>
		delay_250ns();
20000078:	f7ff ffca 	bl	20000010 <delay_250ns>
		delay_250ns();
2000007c:	f7ff ffc8 	bl	20000010 <delay_250ns>
	while(us--) 
20000080:	687b      	ldr	r3, [r7, #4]
20000082:	1e5a      	subs	r2, r3, #1
20000084:	607a      	str	r2, [r7, #4]
20000086:	2b00      	cmp	r3, #0
20000088:	d1f2      	bne.n	20000070 <delay_mikro+0xa>
	}
}
2000008a:	46c0      	nop			; (mov r8, r8)
2000008c:	46bd      	mov	sp, r7
2000008e:	b002      	add	sp, #8
20000090:	bd80      	pop	{r7, pc}

20000092 <delay_milli>:

void delay_milli(unsigned int ms){
20000092:	b580      	push	{r7, lr}
20000094:	b082      	sub	sp, #8
20000096:	af00      	add	r7, sp, #0
20000098:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		ms=ms/1000;
		ms++;
	#endif
	while( ms-- )
2000009a:	e004      	b.n	200000a6 <delay_milli+0x14>
		delay_mikro(1000);
2000009c:	23fa      	movs	r3, #250	; 0xfa
2000009e:	009b      	lsls	r3, r3, #2
200000a0:	0018      	movs	r0, r3
200000a2:	f7ff ffe0 	bl	20000066 <delay_mikro>
	while( ms-- )
200000a6:	687b      	ldr	r3, [r7, #4]
200000a8:	1e5a      	subs	r2, r3, #1
200000aa:	607a      	str	r2, [r7, #4]
200000ac:	2b00      	cmp	r3, #0
200000ae:	d1f5      	bne.n	2000009c <delay_milli+0xa>
}
200000b0:	46c0      	nop			; (mov r8, r8)
200000b2:	46bd      	mov	sp, r7
200000b4:	b002      	add	sp, #8
200000b6:	bd80      	pop	{r7, pc}

200000b8 <delay_1s>:

void delay_1s(void){
200000b8:	b580      	push	{r7, lr}
200000ba:	af00      	add	r7, sp, #0
	systick_flag=0;
200000bc:	4b08      	ldr	r3, [pc, #32]	; (200000e0 <delay_1s+0x28>)
200000be:	2200      	movs	r2, #0
200000c0:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 0;
200000c2:	4b08      	ldr	r3, [pc, #32]	; (200000e4 <delay_1s+0x2c>)
200000c4:	2200      	movs	r2, #0
200000c6:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( 1680000000 -1 );
200000c8:	4b07      	ldr	r3, [pc, #28]	; (200000e8 <delay_1s+0x30>)
200000ca:	4a08      	ldr	r2, [pc, #32]	; (200000ec <delay_1s+0x34>)
200000cc:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
200000ce:	4b08      	ldr	r3, [pc, #32]	; (200000f0 <delay_1s+0x38>)
200000d0:	2200      	movs	r2, #0
200000d2:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 7;
200000d4:	4b03      	ldr	r3, [pc, #12]	; (200000e4 <delay_1s+0x2c>)
200000d6:	2207      	movs	r2, #7
200000d8:	601a      	str	r2, [r3, #0]

}
200000da:	46c0      	nop			; (mov r8, r8)
200000dc:	46bd      	mov	sp, r7
200000de:	bd80      	pop	{r7, pc}
200000e0:	20000edc 	ldrdcs	r0, [r0], -ip
200000e4:	e000e010 	and	lr, r0, r0, lsl r0
200000e8:	e000e014 	and	lr, r0, r4, lsl r0
200000ec:	6422c3ff 	strtvs	ip, [r2], #-1023	; 0xfffffc01
200000f0:	e000e018 	and	lr, r0, r8, lsl r0

200000f4 <delay>:

void delay(unsigned int count){
200000f4:	b580      	push	{r7, lr}
200000f6:	b082      	sub	sp, #8
200000f8:	af00      	add	r7, sp, #0
200000fa:	6078      	str	r0, [r7, #4]
	if( count == 0)
200000fc:	687b      	ldr	r3, [r7, #4]
200000fe:	2b00      	cmp	r3, #0
20000100:	d008      	beq.n	20000114 <delay+0x20>
	return;
	delay_count = count;
20000102:	687a      	ldr	r2, [r7, #4]
20000104:	4b05      	ldr	r3, [pc, #20]	; (2000011c <delay+0x28>)
20000106:	601a      	str	r2, [r3, #0]
	systick_flag = 0;	
20000108:	4b05      	ldr	r3, [pc, #20]	; (20000120 <delay+0x2c>)
2000010a:	2200      	movs	r2, #0
2000010c:	601a      	str	r2, [r3, #0]
	delay_1s();
2000010e:	f7ff ffd3 	bl	200000b8 <delay_1s>
20000112:	e000      	b.n	20000116 <delay+0x22>
	return;
20000114:	46c0      	nop			; (mov r8, r8)
20000116:	46bd      	mov	sp, r7
20000118:	b002      	add	sp, #8
2000011a:	bd80      	pop	{r7, pc}
2000011c:	20000ed8 	ldrdcs	r0, [r0], -r8
20000120:	20000edc 	ldrdcs	r0, [r0], -ip

20000124 <graphic_ctrl_bit_set>:
#include "defines.h"

void graphic_ctrl_bit_set(unsigned char x){
20000124:	b580      	push	{r7, lr}
20000126:	b082      	sub	sp, #8
20000128:	af00      	add	r7, sp, #0
2000012a:	0002      	movs	r2, r0
2000012c:	1dfb      	adds	r3, r7, #7
2000012e:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow |= x & ~B_SELECT;
20000130:	4b09      	ldr	r3, [pc, #36]	; (20000158 <graphic_ctrl_bit_set+0x34>)
20000132:	7d1b      	ldrb	r3, [r3, #20]
20000134:	b2db      	uxtb	r3, r3
20000136:	b25a      	sxtb	r2, r3
20000138:	1dfb      	adds	r3, r7, #7
2000013a:	781b      	ldrb	r3, [r3, #0]
2000013c:	b25b      	sxtb	r3, r3
2000013e:	2104      	movs	r1, #4
20000140:	438b      	bics	r3, r1
20000142:	b25b      	sxtb	r3, r3
20000144:	4313      	orrs	r3, r2
20000146:	b25a      	sxtb	r2, r3
20000148:	4b03      	ldr	r3, [pc, #12]	; (20000158 <graphic_ctrl_bit_set+0x34>)
2000014a:	b2d2      	uxtb	r2, r2
2000014c:	751a      	strb	r2, [r3, #20]
}
2000014e:	46c0      	nop			; (mov r8, r8)
20000150:	46bd      	mov	sp, r7
20000152:	b002      	add	sp, #8
20000154:	bd80      	pop	{r7, pc}
20000156:	46c0      	nop			; (mov r8, r8)
20000158:	40021000 	andmi	r1, r2, r0

2000015c <graphic_ctrl_bit_clear>:


//Välj grafisk display och nollställ de bitar som är 1 i x
void graphic_ctrl_bit_clear(unsigned char x){
2000015c:	b580      	push	{r7, lr}
2000015e:	b082      	sub	sp, #8
20000160:	af00      	add	r7, sp, #0
20000162:	0002      	movs	r2, r0
20000164:	1dfb      	adds	r3, r7, #7
20000166:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow &= (~x & ~B_SELECT);
20000168:	4b08      	ldr	r3, [pc, #32]	; (2000018c <graphic_ctrl_bit_clear+0x30>)
2000016a:	7d1b      	ldrb	r3, [r3, #20]
2000016c:	b2db      	uxtb	r3, r3
2000016e:	1dfa      	adds	r2, r7, #7
20000170:	7812      	ldrb	r2, [r2, #0]
20000172:	43d2      	mvns	r2, r2
20000174:	b2d2      	uxtb	r2, r2
20000176:	4013      	ands	r3, r2
20000178:	b2db      	uxtb	r3, r3
2000017a:	4a04      	ldr	r2, [pc, #16]	; (2000018c <graphic_ctrl_bit_clear+0x30>)
2000017c:	2104      	movs	r1, #4
2000017e:	438b      	bics	r3, r1
20000180:	b2db      	uxtb	r3, r3
20000182:	7513      	strb	r3, [r2, #20]
}
20000184:	46c0      	nop			; (mov r8, r8)
20000186:	46bd      	mov	sp, r7
20000188:	b002      	add	sp, #8
2000018a:	bd80      	pop	{r7, pc}
2000018c:	40021000 	andmi	r1, r2, r0

20000190 <select_controller>:


//Konfigurera CS-signalerna
void select_controller(unsigned char controller){
20000190:	b580      	push	{r7, lr}
20000192:	b082      	sub	sp, #8
20000194:	af00      	add	r7, sp, #0
20000196:	0002      	movs	r2, r0
20000198:	1dfb      	adds	r3, r7, #7
2000019a:	701a      	strb	r2, [r3, #0]
    switch(controller){
2000019c:	1dfb      	adds	r3, r7, #7
2000019e:	781b      	ldrb	r3, [r3, #0]
200001a0:	2b08      	cmp	r3, #8
200001a2:	d00c      	beq.n	200001be <select_controller+0x2e>
200001a4:	dc02      	bgt.n	200001ac <select_controller+0x1c>
200001a6:	2b00      	cmp	r3, #0
200001a8:	d005      	beq.n	200001b6 <select_controller+0x26>
200001aa:	e01a      	b.n	200001e2 <select_controller+0x52>
200001ac:	2b10      	cmp	r3, #16
200001ae:	d00d      	beq.n	200001cc <select_controller+0x3c>
200001b0:	2b18      	cmp	r3, #24
200001b2:	d012      	beq.n	200001da <select_controller+0x4a>
200001b4:	e015      	b.n	200001e2 <select_controller+0x52>
        case 0:
            graphic_ctrl_bit_clear(B_CS1 | B_CS2);
200001b6:	2018      	movs	r0, #24
200001b8:	f7ff ffd0 	bl	2000015c <graphic_ctrl_bit_clear>
            break;
200001bc:	e014      	b.n	200001e8 <select_controller+0x58>
        case B_CS1:
            graphic_ctrl_bit_set(B_CS1);
200001be:	2008      	movs	r0, #8
200001c0:	f7ff ffb0 	bl	20000124 <graphic_ctrl_bit_set>
            graphic_ctrl_bit_clear(B_CS2);
200001c4:	2010      	movs	r0, #16
200001c6:	f7ff ffc9 	bl	2000015c <graphic_ctrl_bit_clear>
            break;
200001ca:	e00d      	b.n	200001e8 <select_controller+0x58>
        case B_CS2:
            graphic_ctrl_bit_set(B_CS2);
200001cc:	2010      	movs	r0, #16
200001ce:	f7ff ffa9 	bl	20000124 <graphic_ctrl_bit_set>
            graphic_ctrl_bit_clear(B_CS1);
200001d2:	2008      	movs	r0, #8
200001d4:	f7ff ffc2 	bl	2000015c <graphic_ctrl_bit_clear>
            break;
200001d8:	e006      	b.n	200001e8 <select_controller+0x58>
        case (B_CS1 | B_CS2):
            graphic_ctrl_bit_set(B_CS1 | B_CS2);
200001da:	2018      	movs	r0, #24
200001dc:	f7ff ffa2 	bl	20000124 <graphic_ctrl_bit_set>
			break;
200001e0:	e002      	b.n	200001e8 <select_controller+0x58>
        default:
            graphic_ctrl_bit_clear(B_CS1 | B_CS2);
200001e2:	2018      	movs	r0, #24
200001e4:	f7ff ffba 	bl	2000015c <graphic_ctrl_bit_clear>
    }
}
200001e8:	46c0      	nop			; (mov r8, r8)
200001ea:	46bd      	mov	sp, r7
200001ec:	b002      	add	sp, #8
200001ee:	bd80      	pop	{r7, pc}

200001f0 <graphic_wait_ready>:




//Undersök ''busy'' flaggan, och returnera från funktion när den blir 0
void graphic_wait_ready(void){
200001f0:	b580      	push	{r7, lr}
200001f2:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_clear(B_E);
200001f4:	2040      	movs	r0, #64	; 0x40
200001f6:	f7ff ffb1 	bl	2000015c <graphic_ctrl_bit_clear>
	
	GPIO_E.moder = 0x00005555;  //15-8 utgång, 7-0 ingång
200001fa:	4b12      	ldr	r3, [pc, #72]	; (20000244 <graphic_wait_ready+0x54>)
200001fc:	4a12      	ldr	r2, [pc, #72]	; (20000248 <graphic_wait_ready+0x58>)
200001fe:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_RS);
20000200:	2001      	movs	r0, #1
20000202:	f7ff ffab 	bl	2000015c <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_set(B_RW); //Gör så vi kollar status
20000206:	2002      	movs	r0, #2
20000208:	f7ff ff8c 	bl	20000124 <graphic_ctrl_bit_set>
	delay_500ns();
2000020c:	f7ff ff22 	bl	20000054 <delay_500ns>
	
	while(GPIO_E.idrHigh & 1<<7){ //gör detta medan busy-flaggan inte är 0
20000210:	e009      	b.n	20000226 <graphic_wait_ready+0x36>
		graphic_ctrl_bit_set(B_E);
20000212:	2040      	movs	r0, #64	; 0x40
20000214:	f7ff ff86 	bl	20000124 <graphic_ctrl_bit_set>
		delay_500ns();
20000218:	f7ff ff1c 	bl	20000054 <delay_500ns>
		graphic_ctrl_bit_clear(B_E);
2000021c:	2040      	movs	r0, #64	; 0x40
2000021e:	f7ff ff9d 	bl	2000015c <graphic_ctrl_bit_clear>
		delay_500ns();
20000222:	f7ff ff17 	bl	20000054 <delay_500ns>
	while(GPIO_E.idrHigh & 1<<7){ //gör detta medan busy-flaggan inte är 0
20000226:	4b07      	ldr	r3, [pc, #28]	; (20000244 <graphic_wait_ready+0x54>)
20000228:	7c5b      	ldrb	r3, [r3, #17]
2000022a:	b2db      	uxtb	r3, r3
2000022c:	b25b      	sxtb	r3, r3
2000022e:	2b00      	cmp	r3, #0
20000230:	dbef      	blt.n	20000212 <graphic_wait_ready+0x22>
	}
	
	graphic_ctrl_bit_set(B_E);
20000232:	2040      	movs	r0, #64	; 0x40
20000234:	f7ff ff76 	bl	20000124 <graphic_ctrl_bit_set>
	GPIO_E.moder = 0x55555555; //15-0 utgång
20000238:	4b02      	ldr	r3, [pc, #8]	; (20000244 <graphic_wait_ready+0x54>)
2000023a:	4a04      	ldr	r2, [pc, #16]	; (2000024c <graphic_wait_ready+0x5c>)
2000023c:	601a      	str	r2, [r3, #0]
}
2000023e:	46c0      	nop			; (mov r8, r8)
20000240:	46bd      	mov	sp, r7
20000242:	bd80      	pop	{r7, pc}
20000244:	40021000 	andmi	r1, r2, r0
20000248:	00005555 	andeq	r5, r0, r5, asr r5
2000024c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000250 <graphic_read>:



unsigned char graphic_read(unsigned char controller){
20000250:	b580      	push	{r7, lr}
20000252:	b084      	sub	sp, #16
20000254:	af00      	add	r7, sp, #0
20000256:	0002      	movs	r2, r0
20000258:	1dfb      	adds	r3, r7, #7
2000025a:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
2000025c:	2040      	movs	r0, #64	; 0x40
2000025e:	f7ff ff7d 	bl	2000015c <graphic_ctrl_bit_clear>
	
	GPIO_E.moder = 0x00005555;  //15-8 utgång, 7-0 ingång
20000262:	4b1d      	ldr	r3, [pc, #116]	; (200002d8 <graphic_read+0x88>)
20000264:	4a1d      	ldr	r2, [pc, #116]	; (200002dc <graphic_read+0x8c>)
20000266:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_set(B_RS);
20000268:	2001      	movs	r0, #1
2000026a:	f7ff ff5b 	bl	20000124 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_set(B_RW); //Gör så vi kan läsa data
2000026e:	2002      	movs	r0, #2
20000270:	f7ff ff58 	bl	20000124 <graphic_ctrl_bit_set>
	select_controller(controller);
20000274:	1dfb      	adds	r3, r7, #7
20000276:	781b      	ldrb	r3, [r3, #0]
20000278:	0018      	movs	r0, r3
2000027a:	f7ff ff89 	bl	20000190 <select_controller>
	delay_500ns();
2000027e:	f7ff fee9 	bl	20000054 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
20000282:	2040      	movs	r0, #64	; 0x40
20000284:	f7ff ff4e 	bl	20000124 <graphic_ctrl_bit_set>
	delay_500ns();
20000288:	f7ff fee4 	bl	20000054 <delay_500ns>
	unsigned char RV = GPIO_E.idrHigh;
2000028c:	4a12      	ldr	r2, [pc, #72]	; (200002d8 <graphic_read+0x88>)
2000028e:	230f      	movs	r3, #15
20000290:	18fb      	adds	r3, r7, r3
20000292:	7c52      	ldrb	r2, [r2, #17]
20000294:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20000296:	2040      	movs	r0, #64	; 0x40
20000298:	f7ff ff60 	bl	2000015c <graphic_ctrl_bit_clear>
	GPIO_E.moder = 0x55555555; //15-0 utgång
2000029c:	4b0e      	ldr	r3, [pc, #56]	; (200002d8 <graphic_read+0x88>)
2000029e:	4a10      	ldr	r2, [pc, #64]	; (200002e0 <graphic_read+0x90>)
200002a0:	601a      	str	r2, [r3, #0]
	
	if (controller == B_CS1){
200002a2:	1dfb      	adds	r3, r7, #7
200002a4:	781b      	ldrb	r3, [r3, #0]
200002a6:	2b08      	cmp	r3, #8
200002a8:	d105      	bne.n	200002b6 <graphic_read+0x66>
		select_controller(B_CS1);
200002aa:	2008      	movs	r0, #8
200002ac:	f7ff ff70 	bl	20000190 <select_controller>
		graphic_wait_ready();
200002b0:	f7ff ff9e 	bl	200001f0 <graphic_wait_ready>
200002b4:	e008      	b.n	200002c8 <graphic_read+0x78>
	} else if (controller == B_CS2){
200002b6:	1dfb      	adds	r3, r7, #7
200002b8:	781b      	ldrb	r3, [r3, #0]
200002ba:	2b10      	cmp	r3, #16
200002bc:	d104      	bne.n	200002c8 <graphic_read+0x78>
		select_controller(B_CS2);
200002be:	2010      	movs	r0, #16
200002c0:	f7ff ff66 	bl	20000190 <select_controller>
		graphic_wait_ready();
200002c4:	f7ff ff94 	bl	200001f0 <graphic_wait_ready>
	}
	return RV;
200002c8:	230f      	movs	r3, #15
200002ca:	18fb      	adds	r3, r7, r3
200002cc:	781b      	ldrb	r3, [r3, #0]
}
200002ce:	0018      	movs	r0, r3
200002d0:	46bd      	mov	sp, r7
200002d2:	b004      	add	sp, #16
200002d4:	bd80      	pop	{r7, pc}
200002d6:	46c0      	nop			; (mov r8, r8)
200002d8:	40021000 	andmi	r1, r2, r0
200002dc:	00005555 	andeq	r5, r0, r5, asr r5
200002e0:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200002e4 <graphic_write>:


void graphic_write(unsigned char value, unsigned char controller){
200002e4:	b580      	push	{r7, lr}
200002e6:	b082      	sub	sp, #8
200002e8:	af00      	add	r7, sp, #0
200002ea:	0002      	movs	r2, r0
200002ec:	1dfb      	adds	r3, r7, #7
200002ee:	701a      	strb	r2, [r3, #0]
200002f0:	1dbb      	adds	r3, r7, #6
200002f2:	1c0a      	adds	r2, r1, #0
200002f4:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrHigh = value;
200002f6:	4a1a      	ldr	r2, [pc, #104]	; (20000360 <graphic_write+0x7c>)
200002f8:	1dfb      	adds	r3, r7, #7
200002fa:	781b      	ldrb	r3, [r3, #0]
200002fc:	7553      	strb	r3, [r2, #21]
	select_controller(controller);
200002fe:	1dbb      	adds	r3, r7, #6
20000300:	781b      	ldrb	r3, [r3, #0]
20000302:	0018      	movs	r0, r3
20000304:	f7ff ff44 	bl	20000190 <select_controller>
	delay_500ns();
20000308:	f7ff fea4 	bl	20000054 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
2000030c:	2040      	movs	r0, #64	; 0x40
2000030e:	f7ff ff09 	bl	20000124 <graphic_ctrl_bit_set>
	delay_500ns();
20000312:	f7ff fe9f 	bl	20000054 <delay_500ns>
	graphic_ctrl_bit_clear(B_E);
20000316:	2040      	movs	r0, #64	; 0x40
20000318:	f7ff ff20 	bl	2000015c <graphic_ctrl_bit_clear>
	
	if (controller & B_CS1){
2000031c:	1dbb      	adds	r3, r7, #6
2000031e:	781b      	ldrb	r3, [r3, #0]
20000320:	2208      	movs	r2, #8
20000322:	4013      	ands	r3, r2
20000324:	d005      	beq.n	20000332 <graphic_write+0x4e>
		select_controller(B_CS1);
20000326:	2008      	movs	r0, #8
20000328:	f7ff ff32 	bl	20000190 <select_controller>
		graphic_wait_ready();
2000032c:	f7ff ff60 	bl	200001f0 <graphic_wait_ready>
20000330:	e009      	b.n	20000346 <graphic_write+0x62>
	} else if (controller & B_CS2){
20000332:	1dbb      	adds	r3, r7, #6
20000334:	781b      	ldrb	r3, [r3, #0]
20000336:	2210      	movs	r2, #16
20000338:	4013      	ands	r3, r2
2000033a:	d004      	beq.n	20000346 <graphic_write+0x62>
		select_controller(B_CS2);
2000033c:	2010      	movs	r0, #16
2000033e:	f7ff ff27 	bl	20000190 <select_controller>
		graphic_wait_ready();
20000342:	f7ff ff55 	bl	200001f0 <graphic_wait_ready>
	}
	
	GPIO_E.odrHigh = 0;
20000346:	4b06      	ldr	r3, [pc, #24]	; (20000360 <graphic_write+0x7c>)
20000348:	2200      	movs	r2, #0
2000034a:	755a      	strb	r2, [r3, #21]
	graphic_ctrl_bit_set(B_E);
2000034c:	2040      	movs	r0, #64	; 0x40
2000034e:	f7ff fee9 	bl	20000124 <graphic_ctrl_bit_set>
	select_controller(0);
20000352:	2000      	movs	r0, #0
20000354:	f7ff ff1c 	bl	20000190 <select_controller>
}
20000358:	46c0      	nop			; (mov r8, r8)
2000035a:	46bd      	mov	sp, r7
2000035c:	b002      	add	sp, #8
2000035e:	bd80      	pop	{r7, pc}
20000360:	40021000 	andmi	r1, r2, r0

20000364 <graphic_write_command>:


void graphic_write_command(unsigned char command, unsigned char controller){
20000364:	b580      	push	{r7, lr}
20000366:	b082      	sub	sp, #8
20000368:	af00      	add	r7, sp, #0
2000036a:	0002      	movs	r2, r0
2000036c:	1dfb      	adds	r3, r7, #7
2000036e:	701a      	strb	r2, [r3, #0]
20000370:	1dbb      	adds	r3, r7, #6
20000372:	1c0a      	adds	r2, r1, #0
20000374:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20000376:	2040      	movs	r0, #64	; 0x40
20000378:	f7ff fef0 	bl	2000015c <graphic_ctrl_bit_clear>
	select_controller(controller);
2000037c:	1dbb      	adds	r3, r7, #6
2000037e:	781b      	ldrb	r3, [r3, #0]
20000380:	0018      	movs	r0, r3
20000382:	f7ff ff05 	bl	20000190 <select_controller>
	graphic_ctrl_bit_clear(B_RS);
20000386:	2001      	movs	r0, #1
20000388:	f7ff fee8 	bl	2000015c <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RW);
2000038c:	2002      	movs	r0, #2
2000038e:	f7ff fee5 	bl	2000015c <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20000392:	1dbb      	adds	r3, r7, #6
20000394:	781a      	ldrb	r2, [r3, #0]
20000396:	1dfb      	adds	r3, r7, #7
20000398:	781b      	ldrb	r3, [r3, #0]
2000039a:	0011      	movs	r1, r2
2000039c:	0018      	movs	r0, r3
2000039e:	f7ff ffa1 	bl	200002e4 <graphic_write>
}
200003a2:	46c0      	nop			; (mov r8, r8)
200003a4:	46bd      	mov	sp, r7
200003a6:	b002      	add	sp, #8
200003a8:	bd80      	pop	{r7, pc}

200003aa <graphic_write_data>:

void graphic_write_data(unsigned char data, unsigned char controller){
200003aa:	b580      	push	{r7, lr}
200003ac:	b082      	sub	sp, #8
200003ae:	af00      	add	r7, sp, #0
200003b0:	0002      	movs	r2, r0
200003b2:	1dfb      	adds	r3, r7, #7
200003b4:	701a      	strb	r2, [r3, #0]
200003b6:	1dbb      	adds	r3, r7, #6
200003b8:	1c0a      	adds	r2, r1, #0
200003ba:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
200003bc:	2040      	movs	r0, #64	; 0x40
200003be:	f7ff fecd 	bl	2000015c <graphic_ctrl_bit_clear>
	select_controller(controller);
200003c2:	1dbb      	adds	r3, r7, #6
200003c4:	781b      	ldrb	r3, [r3, #0]
200003c6:	0018      	movs	r0, r3
200003c8:	f7ff fee2 	bl	20000190 <select_controller>
	graphic_ctrl_bit_set(B_RS);
200003cc:	2001      	movs	r0, #1
200003ce:	f7ff fea9 	bl	20000124 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_clear(B_RW);
200003d2:	2002      	movs	r0, #2
200003d4:	f7ff fec2 	bl	2000015c <graphic_ctrl_bit_clear>
	graphic_write(data, controller);
200003d8:	1dbb      	adds	r3, r7, #6
200003da:	781a      	ldrb	r2, [r3, #0]
200003dc:	1dfb      	adds	r3, r7, #7
200003de:	781b      	ldrb	r3, [r3, #0]
200003e0:	0011      	movs	r1, r2
200003e2:	0018      	movs	r0, r3
200003e4:	f7ff ff7e 	bl	200002e4 <graphic_write>
}
200003e8:	46c0      	nop			; (mov r8, r8)
200003ea:	46bd      	mov	sp, r7
200003ec:	b002      	add	sp, #8
200003ee:	bd80      	pop	{r7, pc}

200003f0 <graphic_read_data>:

unsigned char graphic_read_data(unsigned char controller){
200003f0:	b580      	push	{r7, lr}
200003f2:	b082      	sub	sp, #8
200003f4:	af00      	add	r7, sp, #0
200003f6:	0002      	movs	r2, r0
200003f8:	1dfb      	adds	r3, r7, #7
200003fa:	701a      	strb	r2, [r3, #0]
	graphic_read(controller); //Nonsens
200003fc:	1dfb      	adds	r3, r7, #7
200003fe:	781b      	ldrb	r3, [r3, #0]
20000400:	0018      	movs	r0, r3
20000402:	f7ff ff25 	bl	20000250 <graphic_read>
	return graphic_read(controller); //korrekt data
20000406:	1dfb      	adds	r3, r7, #7
20000408:	781b      	ldrb	r3, [r3, #0]
2000040a:	0018      	movs	r0, r3
2000040c:	f7ff ff20 	bl	20000250 <graphic_read>
20000410:	0003      	movs	r3, r0
}
20000412:	0018      	movs	r0, r3
20000414:	46bd      	mov	sp, r7
20000416:	b002      	add	sp, #8
20000418:	bd80      	pop	{r7, pc}

2000041a <graphic_initialize>:

void graphic_initialize(void){
2000041a:	b580      	push	{r7, lr}
2000041c:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_set(B_E);
2000041e:	2040      	movs	r0, #64	; 0x40
20000420:	f7ff fe80 	bl	20000124 <graphic_ctrl_bit_set>
	delay_mikro(10);
20000424:	200a      	movs	r0, #10
20000426:	f7ff fe1e 	bl	20000066 <delay_mikro>
	graphic_ctrl_bit_clear(B_CS1 | B_CS2 | B_RST | B_E);
2000042a:	2078      	movs	r0, #120	; 0x78
2000042c:	f7ff fe96 	bl	2000015c <graphic_ctrl_bit_clear>
	delay_milli(30);
20000430:	201e      	movs	r0, #30
20000432:	f7ff fe2e 	bl	20000092 <delay_milli>
	graphic_ctrl_bit_set(B_RST);
20000436:	2020      	movs	r0, #32
20000438:	f7ff fe74 	bl	20000124 <graphic_ctrl_bit_set>
	graphic_write_command(LCD_OFF, B_CS1|B_CS2);
2000043c:	2118      	movs	r1, #24
2000043e:	203e      	movs	r0, #62	; 0x3e
20000440:	f7ff ff90 	bl	20000364 <graphic_write_command>
	graphic_write_command(LCD_ON, B_CS1|B_CS2);         //toggla display
20000444:	2118      	movs	r1, #24
20000446:	203f      	movs	r0, #63	; 0x3f
20000448:	f7ff ff8c 	bl	20000364 <graphic_write_command>
	graphic_write_command(LCD_DISP_START, B_CS1|B_CS2); //start=0
2000044c:	2118      	movs	r1, #24
2000044e:	20c0      	movs	r0, #192	; 0xc0
20000450:	f7ff ff88 	bl	20000364 <graphic_write_command>
	graphic_write_command(LCD_SET_ADD, B_CS1|B_CS2);    //add=0
20000454:	2118      	movs	r1, #24
20000456:	2040      	movs	r0, #64	; 0x40
20000458:	f7ff ff84 	bl	20000364 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE, B_CS1|B_CS2);   //page=0
2000045c:	2118      	movs	r1, #24
2000045e:	20b8      	movs	r0, #184	; 0xb8
20000460:	f7ff ff80 	bl	20000364 <graphic_write_command>
	select_controller(0);                               //deaktivera båda CS-signalerna
20000464:	2000      	movs	r0, #0
20000466:	f7ff fe93 	bl	20000190 <select_controller>
}
2000046a:	46c0      	nop			; (mov r8, r8)
2000046c:	46bd      	mov	sp, r7
2000046e:	bd80      	pop	{r7, pc}

20000470 <graphic_clear_screen>:

void graphic_clear_screen(void){
20000470:	b580      	push	{r7, lr}
20000472:	b082      	sub	sp, #8
20000474:	af00      	add	r7, sp, #0
	for (int i = 0; i<=7; i++){
20000476:	2300      	movs	r3, #0
20000478:	607b      	str	r3, [r7, #4]
2000047a:	e01e      	b.n	200004ba <graphic_clear_screen+0x4a>
		graphic_write_command(LCD_SET_PAGE | i, B_CS1|B_CS2);
2000047c:	687b      	ldr	r3, [r7, #4]
2000047e:	b25b      	sxtb	r3, r3
20000480:	2248      	movs	r2, #72	; 0x48
20000482:	4252      	negs	r2, r2
20000484:	4313      	orrs	r3, r2
20000486:	b25b      	sxtb	r3, r3
20000488:	b2db      	uxtb	r3, r3
2000048a:	2118      	movs	r1, #24
2000048c:	0018      	movs	r0, r3
2000048e:	f7ff ff69 	bl	20000364 <graphic_write_command>
		graphic_write_command(LCD_SET_ADD | 0, B_CS1|B_CS2);
20000492:	2118      	movs	r1, #24
20000494:	2040      	movs	r0, #64	; 0x40
20000496:	f7ff ff65 	bl	20000364 <graphic_write_command>
		for(int w = 0; w<=63; w++){
2000049a:	2300      	movs	r3, #0
2000049c:	603b      	str	r3, [r7, #0]
2000049e:	e006      	b.n	200004ae <graphic_clear_screen+0x3e>
			graphic_write_data(0, B_CS1|B_CS2);
200004a0:	2118      	movs	r1, #24
200004a2:	2000      	movs	r0, #0
200004a4:	f7ff ff81 	bl	200003aa <graphic_write_data>
		for(int w = 0; w<=63; w++){
200004a8:	683b      	ldr	r3, [r7, #0]
200004aa:	3301      	adds	r3, #1
200004ac:	603b      	str	r3, [r7, #0]
200004ae:	683b      	ldr	r3, [r7, #0]
200004b0:	2b3f      	cmp	r3, #63	; 0x3f
200004b2:	ddf5      	ble.n	200004a0 <graphic_clear_screen+0x30>
	for (int i = 0; i<=7; i++){
200004b4:	687b      	ldr	r3, [r7, #4]
200004b6:	3301      	adds	r3, #1
200004b8:	607b      	str	r3, [r7, #4]
200004ba:	687b      	ldr	r3, [r7, #4]
200004bc:	2b07      	cmp	r3, #7
200004be:	dddd      	ble.n	2000047c <graphic_clear_screen+0xc>
		}
	}
}
200004c0:	46c0      	nop			; (mov r8, r8)
200004c2:	46bd      	mov	sp, r7
200004c4:	b002      	add	sp, #8
200004c6:	bd80      	pop	{r7, pc}

200004c8 <pixel>:

void pixel(unsigned char x, unsigned char y, unsigned char set){
200004c8:	b5f0      	push	{r4, r5, r6, r7, lr}
200004ca:	b085      	sub	sp, #20
200004cc:	af00      	add	r7, sp, #0
200004ce:	0004      	movs	r4, r0
200004d0:	0008      	movs	r0, r1
200004d2:	0011      	movs	r1, r2
200004d4:	1dfb      	adds	r3, r7, #7
200004d6:	1c22      	adds	r2, r4, #0
200004d8:	701a      	strb	r2, [r3, #0]
200004da:	1dbb      	adds	r3, r7, #6
200004dc:	1c02      	adds	r2, r0, #0
200004de:	701a      	strb	r2, [r3, #0]
200004e0:	1d7b      	adds	r3, r7, #5
200004e2:	1c0a      	adds	r2, r1, #0
200004e4:	701a      	strb	r2, [r3, #0]
	if(x < 1 || x > 128 || y < 1 || y > 64 || set < 0 || set > 1){  //kolla så värdena är tillåtna
200004e6:	1dfb      	adds	r3, r7, #7
200004e8:	781b      	ldrb	r3, [r3, #0]
200004ea:	2b00      	cmp	r3, #0
200004ec:	d100      	bne.n	200004f0 <pixel+0x28>
200004ee:	e0cb      	b.n	20000688 <pixel+0x1c0>
200004f0:	1dfb      	adds	r3, r7, #7
200004f2:	781b      	ldrb	r3, [r3, #0]
200004f4:	2b80      	cmp	r3, #128	; 0x80
200004f6:	d900      	bls.n	200004fa <pixel+0x32>
200004f8:	e0c6      	b.n	20000688 <pixel+0x1c0>
200004fa:	1dbb      	adds	r3, r7, #6
200004fc:	781b      	ldrb	r3, [r3, #0]
200004fe:	2b00      	cmp	r3, #0
20000500:	d100      	bne.n	20000504 <pixel+0x3c>
20000502:	e0c1      	b.n	20000688 <pixel+0x1c0>
20000504:	1dbb      	adds	r3, r7, #6
20000506:	781b      	ldrb	r3, [r3, #0]
20000508:	2b40      	cmp	r3, #64	; 0x40
2000050a:	d900      	bls.n	2000050e <pixel+0x46>
2000050c:	e0bc      	b.n	20000688 <pixel+0x1c0>
2000050e:	1d7b      	adds	r3, r7, #5
20000510:	781b      	ldrb	r3, [r3, #0]
20000512:	2b01      	cmp	r3, #1
20000514:	d900      	bls.n	20000518 <pixel+0x50>
20000516:	e0b7      	b.n	20000688 <pixel+0x1c0>
		return;
	}
	
	unsigned char index = (y-1)/8;
20000518:	1dbb      	adds	r3, r7, #6
2000051a:	781b      	ldrb	r3, [r3, #0]
2000051c:	3b01      	subs	r3, #1
2000051e:	2b00      	cmp	r3, #0
20000520:	da00      	bge.n	20000524 <pixel+0x5c>
20000522:	3307      	adds	r3, #7
20000524:	10db      	asrs	r3, r3, #3
20000526:	001a      	movs	r2, r3
20000528:	230c      	movs	r3, #12
2000052a:	18fb      	adds	r3, r7, r3
2000052c:	701a      	strb	r2, [r3, #0]
	unsigned char bitmask;
	unsigned char controller;
	unsigned char x_fysisk;
	
	switch((y-1) % 8){
2000052e:	1dbb      	adds	r3, r7, #6
20000530:	781b      	ldrb	r3, [r3, #0]
20000532:	3b01      	subs	r3, #1
20000534:	4a56      	ldr	r2, [pc, #344]	; (20000690 <pixel+0x1c8>)
20000536:	4013      	ands	r3, r2
20000538:	d504      	bpl.n	20000544 <pixel+0x7c>
2000053a:	3b01      	subs	r3, #1
2000053c:	2208      	movs	r2, #8
2000053e:	4252      	negs	r2, r2
20000540:	4313      	orrs	r3, r2
20000542:	3301      	adds	r3, #1
20000544:	2b07      	cmp	r3, #7
20000546:	d82c      	bhi.n	200005a2 <pixel+0xda>
20000548:	009a      	lsls	r2, r3, #2
2000054a:	4b52      	ldr	r3, [pc, #328]	; (20000694 <pixel+0x1cc>)
2000054c:	18d3      	adds	r3, r2, r3
2000054e:	681b      	ldr	r3, [r3, #0]
20000550:	469f      	mov	pc, r3
		case 0:
			bitmask = 1;
20000552:	230f      	movs	r3, #15
20000554:	18fb      	adds	r3, r7, r3
20000556:	2201      	movs	r2, #1
20000558:	701a      	strb	r2, [r3, #0]
			break;
2000055a:	e022      	b.n	200005a2 <pixel+0xda>
		case 1:
			bitmask = 2;
2000055c:	230f      	movs	r3, #15
2000055e:	18fb      	adds	r3, r7, r3
20000560:	2202      	movs	r2, #2
20000562:	701a      	strb	r2, [r3, #0]
			break;
20000564:	e01d      	b.n	200005a2 <pixel+0xda>
		case 2:
			bitmask = 4;
20000566:	230f      	movs	r3, #15
20000568:	18fb      	adds	r3, r7, r3
2000056a:	2204      	movs	r2, #4
2000056c:	701a      	strb	r2, [r3, #0]
			break;
2000056e:	e018      	b.n	200005a2 <pixel+0xda>
		case 3:
			bitmask = 8;
20000570:	230f      	movs	r3, #15
20000572:	18fb      	adds	r3, r7, r3
20000574:	2208      	movs	r2, #8
20000576:	701a      	strb	r2, [r3, #0]
			break;
20000578:	e013      	b.n	200005a2 <pixel+0xda>
		case 4:
			bitmask = 0x10;
2000057a:	230f      	movs	r3, #15
2000057c:	18fb      	adds	r3, r7, r3
2000057e:	2210      	movs	r2, #16
20000580:	701a      	strb	r2, [r3, #0]
			break;
20000582:	e00e      	b.n	200005a2 <pixel+0xda>
		case 5:
			bitmask = 0x20;
20000584:	230f      	movs	r3, #15
20000586:	18fb      	adds	r3, r7, r3
20000588:	2220      	movs	r2, #32
2000058a:	701a      	strb	r2, [r3, #0]
			break;
2000058c:	e009      	b.n	200005a2 <pixel+0xda>
		case 6:
			bitmask = 0x40;
2000058e:	230f      	movs	r3, #15
20000590:	18fb      	adds	r3, r7, r3
20000592:	2240      	movs	r2, #64	; 0x40
20000594:	701a      	strb	r2, [r3, #0]
			break;
20000596:	e004      	b.n	200005a2 <pixel+0xda>
		case 7:
			bitmask = 0x80;
20000598:	230f      	movs	r3, #15
2000059a:	18fb      	adds	r3, r7, r3
2000059c:	2280      	movs	r2, #128	; 0x80
2000059e:	701a      	strb	r2, [r3, #0]
			break;
200005a0:	46c0      	nop			; (mov r8, r8)
	}
	
	if(set == 0){
200005a2:	1d7b      	adds	r3, r7, #5
200005a4:	781b      	ldrb	r3, [r3, #0]
200005a6:	2b00      	cmp	r3, #0
200005a8:	d105      	bne.n	200005b6 <pixel+0xee>
		bitmask = ~bitmask;
200005aa:	220f      	movs	r2, #15
200005ac:	18bb      	adds	r3, r7, r2
200005ae:	18ba      	adds	r2, r7, r2
200005b0:	7812      	ldrb	r2, [r2, #0]
200005b2:	43d2      	mvns	r2, r2
200005b4:	701a      	strb	r2, [r3, #0]
	}
	
	if(x > 64){
200005b6:	1dfb      	adds	r3, r7, #7
200005b8:	781b      	ldrb	r3, [r3, #0]
200005ba:	2b40      	cmp	r3, #64	; 0x40
200005bc:	d90a      	bls.n	200005d4 <pixel+0x10c>
		controller = B_CS2;
200005be:	230e      	movs	r3, #14
200005c0:	18fb      	adds	r3, r7, r3
200005c2:	2210      	movs	r2, #16
200005c4:	701a      	strb	r2, [r3, #0]
		x_fysisk = x - 65;
200005c6:	230d      	movs	r3, #13
200005c8:	18fb      	adds	r3, r7, r3
200005ca:	1dfa      	adds	r2, r7, #7
200005cc:	7812      	ldrb	r2, [r2, #0]
200005ce:	3a41      	subs	r2, #65	; 0x41
200005d0:	701a      	strb	r2, [r3, #0]
200005d2:	e009      	b.n	200005e8 <pixel+0x120>
	} else{
		controller = B_CS1;
200005d4:	230e      	movs	r3, #14
200005d6:	18fb      	adds	r3, r7, r3
200005d8:	2208      	movs	r2, #8
200005da:	701a      	strb	r2, [r3, #0]
		x_fysisk = x - 1;
200005dc:	230d      	movs	r3, #13
200005de:	18fb      	adds	r3, r7, r3
200005e0:	1dfa      	adds	r2, r7, #7
200005e2:	7812      	ldrb	r2, [r2, #0]
200005e4:	3a01      	subs	r2, #1
200005e6:	701a      	strb	r2, [r3, #0]
	}
	
	graphic_write_command(LCD_SET_ADD | x_fysisk, controller);
200005e8:	260d      	movs	r6, #13
200005ea:	19bb      	adds	r3, r7, r6
200005ec:	781b      	ldrb	r3, [r3, #0]
200005ee:	2240      	movs	r2, #64	; 0x40
200005f0:	4313      	orrs	r3, r2
200005f2:	b2da      	uxtb	r2, r3
200005f4:	250e      	movs	r5, #14
200005f6:	197b      	adds	r3, r7, r5
200005f8:	781b      	ldrb	r3, [r3, #0]
200005fa:	0019      	movs	r1, r3
200005fc:	0010      	movs	r0, r2
200005fe:	f7ff feb1 	bl	20000364 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE | index, controller);
20000602:	230c      	movs	r3, #12
20000604:	18fb      	adds	r3, r7, r3
20000606:	781b      	ldrb	r3, [r3, #0]
20000608:	2248      	movs	r2, #72	; 0x48
2000060a:	4252      	negs	r2, r2
2000060c:	4313      	orrs	r3, r2
2000060e:	b2da      	uxtb	r2, r3
20000610:	197b      	adds	r3, r7, r5
20000612:	781b      	ldrb	r3, [r3, #0]
20000614:	0019      	movs	r1, r3
20000616:	0010      	movs	r0, r2
20000618:	f7ff fea4 	bl	20000364 <graphic_write_command>
	unsigned char temp = graphic_read_data(controller);
2000061c:	230b      	movs	r3, #11
2000061e:	18fc      	adds	r4, r7, r3
20000620:	197b      	adds	r3, r7, r5
20000622:	781b      	ldrb	r3, [r3, #0]
20000624:	0018      	movs	r0, r3
20000626:	f7ff fee3 	bl	200003f0 <graphic_read_data>
2000062a:	0003      	movs	r3, r0
2000062c:	7023      	strb	r3, [r4, #0]
	graphic_write_command(LCD_SET_ADD | x_fysisk, controller);
2000062e:	19bb      	adds	r3, r7, r6
20000630:	781b      	ldrb	r3, [r3, #0]
20000632:	2240      	movs	r2, #64	; 0x40
20000634:	4313      	orrs	r3, r2
20000636:	b2da      	uxtb	r2, r3
20000638:	197b      	adds	r3, r7, r5
2000063a:	781b      	ldrb	r3, [r3, #0]
2000063c:	0019      	movs	r1, r3
2000063e:	0010      	movs	r0, r2
20000640:	f7ff fe90 	bl	20000364 <graphic_write_command>
	
	
	if(set == 1){
20000644:	1d7b      	adds	r3, r7, #5
20000646:	781b      	ldrb	r3, [r3, #0]
20000648:	2b01      	cmp	r3, #1
2000064a:	d109      	bne.n	20000660 <pixel+0x198>
		bitmask = (bitmask | temp);
2000064c:	220f      	movs	r2, #15
2000064e:	18bb      	adds	r3, r7, r2
20000650:	18b9      	adds	r1, r7, r2
20000652:	220b      	movs	r2, #11
20000654:	18ba      	adds	r2, r7, r2
20000656:	7809      	ldrb	r1, [r1, #0]
20000658:	7812      	ldrb	r2, [r2, #0]
2000065a:	430a      	orrs	r2, r1
2000065c:	701a      	strb	r2, [r3, #0]
2000065e:	e008      	b.n	20000672 <pixel+0x1aa>
	} else{
		bitmask = (bitmask & temp);
20000660:	220f      	movs	r2, #15
20000662:	18bb      	adds	r3, r7, r2
20000664:	18ba      	adds	r2, r7, r2
20000666:	210b      	movs	r1, #11
20000668:	1879      	adds	r1, r7, r1
2000066a:	7812      	ldrb	r2, [r2, #0]
2000066c:	7809      	ldrb	r1, [r1, #0]
2000066e:	400a      	ands	r2, r1
20000670:	701a      	strb	r2, [r3, #0]
	}
	
	graphic_write_data(bitmask, controller);
20000672:	230e      	movs	r3, #14
20000674:	18fb      	adds	r3, r7, r3
20000676:	781a      	ldrb	r2, [r3, #0]
20000678:	230f      	movs	r3, #15
2000067a:	18fb      	adds	r3, r7, r3
2000067c:	781b      	ldrb	r3, [r3, #0]
2000067e:	0011      	movs	r1, r2
20000680:	0018      	movs	r0, r3
20000682:	f7ff fe92 	bl	200003aa <graphic_write_data>
20000686:	e000      	b.n	2000068a <pixel+0x1c2>
		return;
20000688:	46c0      	nop			; (mov r8, r8)
}
2000068a:	46bd      	mov	sp, r7
2000068c:	b005      	add	sp, #20
2000068e:	bdf0      	pop	{r4, r5, r6, r7, pc}
20000690:	80000007 	andhi	r0, r0, r7
20000694:	20000f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>

20000698 <set_object_speed>:
#include "rendering.h"

void set_object_speed(POBJECT o, int speedX, int speedY){
20000698:	b580      	push	{r7, lr}
2000069a:	b084      	sub	sp, #16
2000069c:	af00      	add	r7, sp, #0
2000069e:	60f8      	str	r0, [r7, #12]
200006a0:	60b9      	str	r1, [r7, #8]
200006a2:	607a      	str	r2, [r7, #4]
	o->dirX = speedX;
200006a4:	68fb      	ldr	r3, [r7, #12]
200006a6:	68ba      	ldr	r2, [r7, #8]
200006a8:	605a      	str	r2, [r3, #4]
	o->dirY = speedY;
200006aa:	68fb      	ldr	r3, [r7, #12]
200006ac:	687a      	ldr	r2, [r7, #4]
200006ae:	609a      	str	r2, [r3, #8]
}
200006b0:	46c0      	nop			; (mov r8, r8)
200006b2:	46bd      	mov	sp, r7
200006b4:	b004      	add	sp, #16
200006b6:	bd80      	pop	{r7, pc}

200006b8 <draw_object>:

void draw_object(POBJECT o){
200006b8:	b580      	push	{r7, lr}
200006ba:	b084      	sub	sp, #16
200006bc:	af00      	add	r7, sp, #0
200006be:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < o->geo->numPoints; i++){
200006c0:	2300      	movs	r3, #0
200006c2:	60fb      	str	r3, [r7, #12]
200006c4:	e01c      	b.n	20000700 <draw_object+0x48>
		pixel(o->posX + o->geo->px[i].x, o->posY + o->geo->px[i].y, 1);
200006c6:	687b      	ldr	r3, [r7, #4]
200006c8:	68da      	ldr	r2, [r3, #12]
200006ca:	687b      	ldr	r3, [r7, #4]
200006cc:	6819      	ldr	r1, [r3, #0]
200006ce:	68fb      	ldr	r3, [r7, #12]
200006d0:	3304      	adds	r3, #4
200006d2:	005b      	lsls	r3, r3, #1
200006d4:	18cb      	adds	r3, r1, r3
200006d6:	3304      	adds	r3, #4
200006d8:	781b      	ldrb	r3, [r3, #0]
200006da:	18d0      	adds	r0, r2, r3
200006dc:	687b      	ldr	r3, [r7, #4]
200006de:	691a      	ldr	r2, [r3, #16]
200006e0:	687b      	ldr	r3, [r7, #4]
200006e2:	6819      	ldr	r1, [r3, #0]
200006e4:	68fb      	ldr	r3, [r7, #12]
200006e6:	3304      	adds	r3, #4
200006e8:	005b      	lsls	r3, r3, #1
200006ea:	18cb      	adds	r3, r1, r3
200006ec:	3305      	adds	r3, #5
200006ee:	781b      	ldrb	r3, [r3, #0]
200006f0:	18d3      	adds	r3, r2, r3
200006f2:	2201      	movs	r2, #1
200006f4:	0019      	movs	r1, r3
200006f6:	f7ff fee7 	bl	200004c8 <pixel>
	for(int i = 0; i < o->geo->numPoints; i++){
200006fa:	68fb      	ldr	r3, [r7, #12]
200006fc:	3301      	adds	r3, #1
200006fe:	60fb      	str	r3, [r7, #12]
20000700:	687b      	ldr	r3, [r7, #4]
20000702:	681b      	ldr	r3, [r3, #0]
20000704:	681b      	ldr	r3, [r3, #0]
20000706:	68fa      	ldr	r2, [r7, #12]
20000708:	429a      	cmp	r2, r3
2000070a:	dbdc      	blt.n	200006c6 <draw_object+0xe>
	}
}
2000070c:	46c0      	nop			; (mov r8, r8)
2000070e:	46bd      	mov	sp, r7
20000710:	b004      	add	sp, #16
20000712:	bd80      	pop	{r7, pc}

20000714 <clear_object>:

void clear_object(POBJECT o){
20000714:	b580      	push	{r7, lr}
20000716:	b084      	sub	sp, #16
20000718:	af00      	add	r7, sp, #0
2000071a:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < o->geo->numPoints; i++){
2000071c:	2300      	movs	r3, #0
2000071e:	60fb      	str	r3, [r7, #12]
20000720:	e01c      	b.n	2000075c <clear_object+0x48>
		pixel(o->posX + o->geo->px[i].x, o->posY + o->geo->px[i].y, 0);
20000722:	687b      	ldr	r3, [r7, #4]
20000724:	68da      	ldr	r2, [r3, #12]
20000726:	687b      	ldr	r3, [r7, #4]
20000728:	6819      	ldr	r1, [r3, #0]
2000072a:	68fb      	ldr	r3, [r7, #12]
2000072c:	3304      	adds	r3, #4
2000072e:	005b      	lsls	r3, r3, #1
20000730:	18cb      	adds	r3, r1, r3
20000732:	3304      	adds	r3, #4
20000734:	781b      	ldrb	r3, [r3, #0]
20000736:	18d0      	adds	r0, r2, r3
20000738:	687b      	ldr	r3, [r7, #4]
2000073a:	691a      	ldr	r2, [r3, #16]
2000073c:	687b      	ldr	r3, [r7, #4]
2000073e:	6819      	ldr	r1, [r3, #0]
20000740:	68fb      	ldr	r3, [r7, #12]
20000742:	3304      	adds	r3, #4
20000744:	005b      	lsls	r3, r3, #1
20000746:	18cb      	adds	r3, r1, r3
20000748:	3305      	adds	r3, #5
2000074a:	781b      	ldrb	r3, [r3, #0]
2000074c:	18d3      	adds	r3, r2, r3
2000074e:	2200      	movs	r2, #0
20000750:	0019      	movs	r1, r3
20000752:	f7ff feb9 	bl	200004c8 <pixel>
	for(int i = 0; i < o->geo->numPoints; i++){
20000756:	68fb      	ldr	r3, [r7, #12]
20000758:	3301      	adds	r3, #1
2000075a:	60fb      	str	r3, [r7, #12]
2000075c:	687b      	ldr	r3, [r7, #4]
2000075e:	681b      	ldr	r3, [r3, #0]
20000760:	681b      	ldr	r3, [r3, #0]
20000762:	68fa      	ldr	r2, [r7, #12]
20000764:	429a      	cmp	r2, r3
20000766:	dbdc      	blt.n	20000722 <clear_object+0xe>
	}
20000768:	46c0      	nop			; (mov r8, r8)
2000076a:	46bd      	mov	sp, r7
2000076c:	b004      	add	sp, #16
2000076e:	bd80      	pop	{r7, pc}

20000770 <systick_irq_handler>:
#include "defines.h"
#include "globals.h"

void systick_irq_handler (void)
{
20000770:	b580      	push	{r7, lr}
20000772:	af00      	add	r7, sp, #0
	
	//Öka second_count, 
	*STK_CTRL = 0;
20000774:	4b0a      	ldr	r3, [pc, #40]	; (200007a0 <systick_irq_handler+0x30>)
20000776:	2200      	movs	r2, #0
20000778:	601a      	str	r2, [r3, #0]
	delay_count -- ;
2000077a:	4b0a      	ldr	r3, [pc, #40]	; (200007a4 <systick_irq_handler+0x34>)
2000077c:	681b      	ldr	r3, [r3, #0]
2000077e:	1e5a      	subs	r2, r3, #1
20000780:	4b08      	ldr	r3, [pc, #32]	; (200007a4 <systick_irq_handler+0x34>)
20000782:	601a      	str	r2, [r3, #0]
	if( delay_count > 0 )
20000784:	4b07      	ldr	r3, [pc, #28]	; (200007a4 <systick_irq_handler+0x34>)
20000786:	681b      	ldr	r3, [r3, #0]
20000788:	2b00      	cmp	r3, #0
2000078a:	dd02      	ble.n	20000792 <systick_irq_handler+0x22>
	delay_1s();
2000078c:	f7ff fc94 	bl	200000b8 <delay_1s>
	else
	systick_flag = 1;
	
20000790:	e002      	b.n	20000798 <systick_irq_handler+0x28>
	systick_flag = 1;
20000792:	4b05      	ldr	r3, [pc, #20]	; (200007a8 <systick_irq_handler+0x38>)
20000794:	2201      	movs	r2, #1
20000796:	601a      	str	r2, [r3, #0]
20000798:	46c0      	nop			; (mov r8, r8)
2000079a:	46bd      	mov	sp, r7
2000079c:	bd80      	pop	{r7, pc}
2000079e:	46c0      	nop			; (mov r8, r8)
200007a0:	e000e010 	and	lr, r0, r0, lsl r0
200007a4:	20000ed8 	ldrdcs	r0, [r0], -r8
200007a8:	20000edc 	ldrdcs	r0, [r0], -ip

200007ac <ascii_ctrl_bit_set>:

#include "defines.h"
#include "globals.h"

void ascii_ctrl_bit_set(unsigned char x) {
200007ac:	b580      	push	{r7, lr}
200007ae:	b082      	sub	sp, #8
200007b0:	af00      	add	r7, sp, #0
200007b2:	0002      	movs	r2, r0
200007b4:	1dfb      	adds	r3, r7, #7
200007b6:	701a      	strb	r2, [r3, #0]
    GPIO_E.odrLow |= x | B_SELECT;
200007b8:	4b07      	ldr	r3, [pc, #28]	; (200007d8 <ascii_ctrl_bit_set+0x2c>)
200007ba:	7d1b      	ldrb	r3, [r3, #20]
200007bc:	b2da      	uxtb	r2, r3
200007be:	1dfb      	adds	r3, r7, #7
200007c0:	781b      	ldrb	r3, [r3, #0]
200007c2:	4313      	orrs	r3, r2
200007c4:	b2db      	uxtb	r3, r3
200007c6:	4a04      	ldr	r2, [pc, #16]	; (200007d8 <ascii_ctrl_bit_set+0x2c>)
200007c8:	2104      	movs	r1, #4
200007ca:	430b      	orrs	r3, r1
200007cc:	b2db      	uxtb	r3, r3
200007ce:	7513      	strb	r3, [r2, #20]
}
200007d0:	46c0      	nop			; (mov r8, r8)
200007d2:	46bd      	mov	sp, r7
200007d4:	b002      	add	sp, #8
200007d6:	bd80      	pop	{r7, pc}
200007d8:	40021000 	andmi	r1, r2, r0

200007dc <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char x) {
200007dc:	b580      	push	{r7, lr}
200007de:	b082      	sub	sp, #8
200007e0:	af00      	add	r7, sp, #0
200007e2:	0002      	movs	r2, r0
200007e4:	1dfb      	adds	r3, r7, #7
200007e6:	701a      	strb	r2, [r3, #0]
    GPIO_E.odrLow &= (~x | B_SELECT);
200007e8:	4b0a      	ldr	r3, [pc, #40]	; (20000814 <ascii_ctrl_bit_clear+0x38>)
200007ea:	7d1b      	ldrb	r3, [r3, #20]
200007ec:	b2db      	uxtb	r3, r3
200007ee:	b25b      	sxtb	r3, r3
200007f0:	1dfa      	adds	r2, r7, #7
200007f2:	7812      	ldrb	r2, [r2, #0]
200007f4:	b252      	sxtb	r2, r2
200007f6:	43d2      	mvns	r2, r2
200007f8:	b252      	sxtb	r2, r2
200007fa:	2104      	movs	r1, #4
200007fc:	430a      	orrs	r2, r1
200007fe:	b252      	sxtb	r2, r2
20000800:	4013      	ands	r3, r2
20000802:	b25a      	sxtb	r2, r3
20000804:	4b03      	ldr	r3, [pc, #12]	; (20000814 <ascii_ctrl_bit_clear+0x38>)
20000806:	b2d2      	uxtb	r2, r2
20000808:	751a      	strb	r2, [r3, #20]
}
2000080a:	46c0      	nop			; (mov r8, r8)
2000080c:	46bd      	mov	sp, r7
2000080e:	b002      	add	sp, #8
20000810:	bd80      	pop	{r7, pc}
20000812:	46c0      	nop			; (mov r8, r8)
20000814:	40021000 	andmi	r1, r2, r0

20000818 <ascii_write_controller>:

void ascii_write_controller(unsigned char command) {
20000818:	b580      	push	{r7, lr}
2000081a:	b082      	sub	sp, #8
2000081c:	af00      	add	r7, sp, #0
2000081e:	0002      	movs	r2, r0
20000820:	1dfb      	adds	r3, r7, #7
20000822:	701a      	strb	r2, [r3, #0]
    delay_250ns();
20000824:	f7ff fbf4 	bl	20000010 <delay_250ns>
    ascii_ctrl_bit_set(B_E);
20000828:	2040      	movs	r0, #64	; 0x40
2000082a:	f7ff ffbf 	bl	200007ac <ascii_ctrl_bit_set>
    GPIO_E.odrHigh = command;
2000082e:	4a07      	ldr	r2, [pc, #28]	; (2000084c <ascii_write_controller+0x34>)
20000830:	1dfb      	adds	r3, r7, #7
20000832:	781b      	ldrb	r3, [r3, #0]
20000834:	7553      	strb	r3, [r2, #21]
    delay_250ns();
20000836:	f7ff fbeb 	bl	20000010 <delay_250ns>
    ascii_ctrl_bit_clear(B_E);
2000083a:	2040      	movs	r0, #64	; 0x40
2000083c:	f7ff ffce 	bl	200007dc <ascii_ctrl_bit_clear>
    delay_250ns();
20000840:	f7ff fbe6 	bl	20000010 <delay_250ns>
}
20000844:	46c0      	nop			; (mov r8, r8)
20000846:	46bd      	mov	sp, r7
20000848:	b002      	add	sp, #8
2000084a:	bd80      	pop	{r7, pc}
2000084c:	40021000 	andmi	r1, r2, r0

20000850 <ascii_read_controller>:

unsigned char ascii_read_controller(void) {
20000850:	b580      	push	{r7, lr}
20000852:	b082      	sub	sp, #8
20000854:	af00      	add	r7, sp, #0
    ascii_ctrl_bit_set(B_E);
20000856:	2040      	movs	r0, #64	; 0x40
20000858:	f7ff ffa8 	bl	200007ac <ascii_ctrl_bit_set>
    delay_250ns();
2000085c:	f7ff fbd8 	bl	20000010 <delay_250ns>
    delay_250ns();
20000860:	f7ff fbd6 	bl	20000010 <delay_250ns>
    unsigned char rv = GPIO_E.idrHigh;
20000864:	4a06      	ldr	r2, [pc, #24]	; (20000880 <ascii_read_controller+0x30>)
20000866:	1dfb      	adds	r3, r7, #7
20000868:	7c52      	ldrb	r2, [r2, #17]
2000086a:	701a      	strb	r2, [r3, #0]
    ascii_ctrl_bit_clear(B_E);
2000086c:	2040      	movs	r0, #64	; 0x40
2000086e:	f7ff ffb5 	bl	200007dc <ascii_ctrl_bit_clear>
    return rv;
20000872:	1dfb      	adds	r3, r7, #7
20000874:	781b      	ldrb	r3, [r3, #0]
}
20000876:	0018      	movs	r0, r3
20000878:	46bd      	mov	sp, r7
2000087a:	b002      	add	sp, #8
2000087c:	bd80      	pop	{r7, pc}
2000087e:	46c0      	nop			; (mov r8, r8)
20000880:	40021000 	andmi	r1, r2, r0

20000884 <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command) {
20000884:	b580      	push	{r7, lr}
20000886:	b082      	sub	sp, #8
20000888:	af00      	add	r7, sp, #0
2000088a:	0002      	movs	r2, r0
2000088c:	1dfb      	adds	r3, r7, #7
2000088e:	701a      	strb	r2, [r3, #0]
    ascii_ctrl_bit_clear(B_RS | B_RW);
20000890:	2003      	movs	r0, #3
20000892:	f7ff ffa3 	bl	200007dc <ascii_ctrl_bit_clear>
    ascii_write_controller(command);
20000896:	1dfb      	adds	r3, r7, #7
20000898:	781b      	ldrb	r3, [r3, #0]
2000089a:	0018      	movs	r0, r3
2000089c:	f7ff ffbc 	bl	20000818 <ascii_write_controller>
}
200008a0:	46c0      	nop			; (mov r8, r8)
200008a2:	46bd      	mov	sp, r7
200008a4:	b002      	add	sp, #8
200008a6:	bd80      	pop	{r7, pc}

200008a8 <ascii_write_data>:

void ascii_write_data(unsigned char data) {
200008a8:	b580      	push	{r7, lr}
200008aa:	b082      	sub	sp, #8
200008ac:	af00      	add	r7, sp, #0
200008ae:	0002      	movs	r2, r0
200008b0:	1dfb      	adds	r3, r7, #7
200008b2:	701a      	strb	r2, [r3, #0]
    ascii_ctrl_bit_set(B_RS);
200008b4:	2001      	movs	r0, #1
200008b6:	f7ff ff79 	bl	200007ac <ascii_ctrl_bit_set>
    ascii_ctrl_bit_clear(B_RW);
200008ba:	2002      	movs	r0, #2
200008bc:	f7ff ff8e 	bl	200007dc <ascii_ctrl_bit_clear>
    ascii_write_controller(data);
200008c0:	1dfb      	adds	r3, r7, #7
200008c2:	781b      	ldrb	r3, [r3, #0]
200008c4:	0018      	movs	r0, r3
200008c6:	f7ff ffa7 	bl	20000818 <ascii_write_controller>
}
200008ca:	46c0      	nop			; (mov r8, r8)
200008cc:	46bd      	mov	sp, r7
200008ce:	b002      	add	sp, #8
200008d0:	bd80      	pop	{r7, pc}

200008d2 <ascii_read_status>:

unsigned char ascii_read_status(void) {
200008d2:	b590      	push	{r4, r7, lr}
200008d4:	b083      	sub	sp, #12
200008d6:	af00      	add	r7, sp, #0
    GPIO_E.moder = 0x00005555;
200008d8:	4b0a      	ldr	r3, [pc, #40]	; (20000904 <ascii_read_status+0x32>)
200008da:	4a0b      	ldr	r2, [pc, #44]	; (20000908 <ascii_read_status+0x36>)
200008dc:	601a      	str	r2, [r3, #0]
    ascii_ctrl_bit_clear(B_RS);
200008de:	2001      	movs	r0, #1
200008e0:	f7ff ff7c 	bl	200007dc <ascii_ctrl_bit_clear>
    ascii_ctrl_bit_set(B_RW);
200008e4:	2002      	movs	r0, #2
200008e6:	f7ff ff61 	bl	200007ac <ascii_ctrl_bit_set>
    unsigned char rv = ascii_read_controller();
200008ea:	1dfc      	adds	r4, r7, #7
200008ec:	f7ff ffb0 	bl	20000850 <ascii_read_controller>
200008f0:	0003      	movs	r3, r0
200008f2:	7023      	strb	r3, [r4, #0]
    GPIO_E.moder = 0x55555555;
200008f4:	4b03      	ldr	r3, [pc, #12]	; (20000904 <ascii_read_status+0x32>)
200008f6:	4a05      	ldr	r2, [pc, #20]	; (2000090c <ascii_read_status+0x3a>)
200008f8:	601a      	str	r2, [r3, #0]
}
200008fa:	46c0      	nop			; (mov r8, r8)
200008fc:	0018      	movs	r0, r3
200008fe:	46bd      	mov	sp, r7
20000900:	b003      	add	sp, #12
20000902:	bd90      	pop	{r4, r7, pc}
20000904:	40021000 	andmi	r1, r2, r0
20000908:	00005555 	andeq	r5, r0, r5, asr r5
2000090c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000910 <ascii_read_data>:

unsigned char ascii_read_data(void) {
20000910:	b590      	push	{r4, r7, lr}
20000912:	b083      	sub	sp, #12
20000914:	af00      	add	r7, sp, #0
    GPIO_E.moder = 0x00005555;
20000916:	4b09      	ldr	r3, [pc, #36]	; (2000093c <ascii_read_data+0x2c>)
20000918:	4a09      	ldr	r2, [pc, #36]	; (20000940 <ascii_read_data+0x30>)
2000091a:	601a      	str	r2, [r3, #0]
    ascii_ctrl_bit_set(B_RW | B_RS);
2000091c:	2003      	movs	r0, #3
2000091e:	f7ff ff45 	bl	200007ac <ascii_ctrl_bit_set>
    unsigned char rv = ascii_read_controller();
20000922:	1dfc      	adds	r4, r7, #7
20000924:	f7ff ff94 	bl	20000850 <ascii_read_controller>
20000928:	0003      	movs	r3, r0
2000092a:	7023      	strb	r3, [r4, #0]
    GPIO_E.moder = 0x55555555;
2000092c:	4b03      	ldr	r3, [pc, #12]	; (2000093c <ascii_read_data+0x2c>)
2000092e:	4a05      	ldr	r2, [pc, #20]	; (20000944 <ascii_read_data+0x34>)
20000930:	601a      	str	r2, [r3, #0]
}
20000932:	46c0      	nop			; (mov r8, r8)
20000934:	0018      	movs	r0, r3
20000936:	46bd      	mov	sp, r7
20000938:	b003      	add	sp, #12
2000093a:	bd90      	pop	{r4, r7, pc}
2000093c:	40021000 	andmi	r1, r2, r0
20000940:	00005555 	andeq	r5, r0, r5, asr r5
20000944:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000948 <ascii_command>:

void ascii_command(unsigned char command) {
20000948:	b580      	push	{r7, lr}
2000094a:	b082      	sub	sp, #8
2000094c:	af00      	add	r7, sp, #0
2000094e:	0002      	movs	r2, r0
20000950:	1dfb      	adds	r3, r7, #7
20000952:	701a      	strb	r2, [r3, #0]
    while ((ascii_read_status() & 0x80) == 0x80);
20000954:	46c0      	nop			; (mov r8, r8)
20000956:	f7ff ffbc 	bl	200008d2 <ascii_read_status>
2000095a:	0003      	movs	r3, r0
2000095c:	001a      	movs	r2, r3
2000095e:	2380      	movs	r3, #128	; 0x80
20000960:	4013      	ands	r3, r2
20000962:	2b80      	cmp	r3, #128	; 0x80
20000964:	d0f7      	beq.n	20000956 <ascii_command+0xe>
    delay_mikro(8);
20000966:	2008      	movs	r0, #8
20000968:	f7ff fb7d 	bl	20000066 <delay_mikro>
    ascii_write_cmd(command);
2000096c:	1dfb      	adds	r3, r7, #7
2000096e:	781b      	ldrb	r3, [r3, #0]
20000970:	0018      	movs	r0, r3
20000972:	f7ff ff87 	bl	20000884 <ascii_write_cmd>
}
20000976:	46c0      	nop			; (mov r8, r8)
20000978:	46bd      	mov	sp, r7
2000097a:	b002      	add	sp, #8
2000097c:	bd80      	pop	{r7, pc}

2000097e <function_set>:

void function_set() {
2000097e:	b580      	push	{r7, lr}
20000980:	af00      	add	r7, sp, #0
    ascii_command(0x38);
20000982:	2038      	movs	r0, #56	; 0x38
20000984:	f7ff ffe0 	bl	20000948 <ascii_command>
    delay_milli(2);
20000988:	2002      	movs	r0, #2
2000098a:	f7ff fb82 	bl	20000092 <delay_milli>
}
2000098e:	46c0      	nop			; (mov r8, r8)
20000990:	46bd      	mov	sp, r7
20000992:	bd80      	pop	{r7, pc}

20000994 <display_control>:

void display_control(void) {
20000994:	b580      	push	{r7, lr}
20000996:	af00      	add	r7, sp, #0
    ascii_command(0x0E);
20000998:	200e      	movs	r0, #14
2000099a:	f7ff ffd5 	bl	20000948 <ascii_command>
    delay_mikro(39);
2000099e:	2027      	movs	r0, #39	; 0x27
200009a0:	f7ff fb61 	bl	20000066 <delay_mikro>
}
200009a4:	46c0      	nop			; (mov r8, r8)
200009a6:	46bd      	mov	sp, r7
200009a8:	bd80      	pop	{r7, pc}

200009aa <clear_display>:

void clear_display(void) {
200009aa:	b580      	push	{r7, lr}
200009ac:	af00      	add	r7, sp, #0
    ascii_command(0x01);
200009ae:	2001      	movs	r0, #1
200009b0:	f7ff ffca 	bl	20000948 <ascii_command>
    delay_milli(2);
200009b4:	2002      	movs	r0, #2
200009b6:	f7ff fb6c 	bl	20000092 <delay_milli>
}
200009ba:	46c0      	nop			; (mov r8, r8)
200009bc:	46bd      	mov	sp, r7
200009be:	bd80      	pop	{r7, pc}

200009c0 <entry_mode_set>:

void entry_mode_set(void) {
200009c0:	b580      	push	{r7, lr}
200009c2:	af00      	add	r7, sp, #0
    ascii_command(0x06);
200009c4:	2006      	movs	r0, #6
200009c6:	f7ff ffbf 	bl	20000948 <ascii_command>
    delay_mikro(39);
200009ca:	2027      	movs	r0, #39	; 0x27
200009cc:	f7ff fb4b 	bl	20000066 <delay_mikro>
}
200009d0:	46c0      	nop			; (mov r8, r8)
200009d2:	46bd      	mov	sp, r7
200009d4:	bd80      	pop	{r7, pc}

200009d6 <ascii_init>:

void ascii_init(void) {
200009d6:	b580      	push	{r7, lr}
200009d8:	af00      	add	r7, sp, #0
    function_set();
200009da:	f7ff ffd0 	bl	2000097e <function_set>
    display_control();
200009de:	f7ff ffd9 	bl	20000994 <display_control>
    clear_display();
200009e2:	f7ff ffe2 	bl	200009aa <clear_display>
    entry_mode_set();
200009e6:	f7ff ffeb 	bl	200009c0 <entry_mode_set>
}
200009ea:	46c0      	nop			; (mov r8, r8)
200009ec:	46bd      	mov	sp, r7
200009ee:	bd80      	pop	{r7, pc}

200009f0 <ascii_gotoxy>:

void ascii_gotoxy(unsigned int x, unsigned int y) {
200009f0:	b580      	push	{r7, lr}
200009f2:	b084      	sub	sp, #16
200009f4:	af00      	add	r7, sp, #0
200009f6:	6078      	str	r0, [r7, #4]
200009f8:	6039      	str	r1, [r7, #0]
    unsigned int address = x - 1;
200009fa:	687b      	ldr	r3, [r7, #4]
200009fc:	3b01      	subs	r3, #1
200009fe:	60fb      	str	r3, [r7, #12]
    if (y == 2) {
20000a00:	683b      	ldr	r3, [r7, #0]
20000a02:	2b02      	cmp	r3, #2
20000a04:	d102      	bne.n	20000a0c <ascii_gotoxy+0x1c>
        address += 0x40;
20000a06:	68fb      	ldr	r3, [r7, #12]
20000a08:	3340      	adds	r3, #64	; 0x40
20000a0a:	60fb      	str	r3, [r7, #12]
    }
    ascii_command(address | 0x80);
20000a0c:	68fb      	ldr	r3, [r7, #12]
20000a0e:	b2db      	uxtb	r3, r3
20000a10:	2280      	movs	r2, #128	; 0x80
20000a12:	4252      	negs	r2, r2
20000a14:	4313      	orrs	r3, r2
20000a16:	b2db      	uxtb	r3, r3
20000a18:	0018      	movs	r0, r3
20000a1a:	f7ff ff95 	bl	20000948 <ascii_command>
    delay_mikro(39);
20000a1e:	2027      	movs	r0, #39	; 0x27
20000a20:	f7ff fb21 	bl	20000066 <delay_mikro>
}
20000a24:	46c0      	nop			; (mov r8, r8)
20000a26:	46bd      	mov	sp, r7
20000a28:	b004      	add	sp, #16
20000a2a:	bd80      	pop	{r7, pc}

20000a2c <ascii_write_char>:

void ascii_write_char(unsigned char c) {
20000a2c:	b580      	push	{r7, lr}
20000a2e:	b082      	sub	sp, #8
20000a30:	af00      	add	r7, sp, #0
20000a32:	0002      	movs	r2, r0
20000a34:	1dfb      	adds	r3, r7, #7
20000a36:	701a      	strb	r2, [r3, #0]
    ascii_write_data(c);
20000a38:	1dfb      	adds	r3, r7, #7
20000a3a:	781b      	ldrb	r3, [r3, #0]
20000a3c:	0018      	movs	r0, r3
20000a3e:	f7ff ff33 	bl	200008a8 <ascii_write_data>
    delay_mikro(43);
20000a42:	202b      	movs	r0, #43	; 0x2b
20000a44:	f7ff fb0f 	bl	20000066 <delay_mikro>
}
20000a48:	46c0      	nop			; (mov r8, r8)
20000a4a:	46bd      	mov	sp, r7
20000a4c:	b002      	add	sp, #8
20000a4e:	bd80      	pop	{r7, pc}

20000a50 <move_object>:
		{3, 2}
	}
};


void move_object(POBJECT object){
20000a50:	b590      	push	{r4, r7, lr}
20000a52:	b083      	sub	sp, #12
20000a54:	af00      	add	r7, sp, #0
20000a56:	6078      	str	r0, [r7, #4]
	if(object->posX >118){
20000a58:	687b      	ldr	r3, [r7, #4]
20000a5a:	68db      	ldr	r3, [r3, #12]
20000a5c:	2b76      	cmp	r3, #118	; 0x76
20000a5e:	dd09      	ble.n	20000a74 <move_object+0x24>
		object->set_speed(object, -2, object->dirY);
20000a60:	687b      	ldr	r3, [r7, #4]
20000a62:	6a1c      	ldr	r4, [r3, #32]
20000a64:	687b      	ldr	r3, [r7, #4]
20000a66:	689a      	ldr	r2, [r3, #8]
20000a68:	2302      	movs	r3, #2
20000a6a:	4259      	negs	r1, r3
20000a6c:	687b      	ldr	r3, [r7, #4]
20000a6e:	0018      	movs	r0, r3
20000a70:	47a0      	blx	r4
20000a72:	e00b      	b.n	20000a8c <move_object+0x3c>
	} else if (object->posX <10){
20000a74:	687b      	ldr	r3, [r7, #4]
20000a76:	68db      	ldr	r3, [r3, #12]
20000a78:	2b09      	cmp	r3, #9
20000a7a:	dc07      	bgt.n	20000a8c <move_object+0x3c>
		object->set_speed(object, 2, object->dirY);
20000a7c:	687b      	ldr	r3, [r7, #4]
20000a7e:	6a1c      	ldr	r4, [r3, #32]
20000a80:	687b      	ldr	r3, [r7, #4]
20000a82:	689a      	ldr	r2, [r3, #8]
20000a84:	687b      	ldr	r3, [r7, #4]
20000a86:	2102      	movs	r1, #2
20000a88:	0018      	movs	r0, r3
20000a8a:	47a0      	blx	r4
	}
	if (object->posY <10){
20000a8c:	687b      	ldr	r3, [r7, #4]
20000a8e:	691b      	ldr	r3, [r3, #16]
20000a90:	2b09      	cmp	r3, #9
20000a92:	dc08      	bgt.n	20000aa6 <move_object+0x56>
		object->set_speed(object, object->dirX, 2);
20000a94:	687b      	ldr	r3, [r7, #4]
20000a96:	6a1c      	ldr	r4, [r3, #32]
20000a98:	687b      	ldr	r3, [r7, #4]
20000a9a:	6859      	ldr	r1, [r3, #4]
20000a9c:	687b      	ldr	r3, [r7, #4]
20000a9e:	2202      	movs	r2, #2
20000aa0:	0018      	movs	r0, r3
20000aa2:	47a0      	blx	r4
20000aa4:	e00c      	b.n	20000ac0 <move_object+0x70>
	} else if (object->posY >54){
20000aa6:	687b      	ldr	r3, [r7, #4]
20000aa8:	691b      	ldr	r3, [r3, #16]
20000aaa:	2b36      	cmp	r3, #54	; 0x36
20000aac:	dd08      	ble.n	20000ac0 <move_object+0x70>
		object->set_speed(object, object->dirX, -2);
20000aae:	687b      	ldr	r3, [r7, #4]
20000ab0:	6a1c      	ldr	r4, [r3, #32]
20000ab2:	687b      	ldr	r3, [r7, #4]
20000ab4:	6859      	ldr	r1, [r3, #4]
20000ab6:	2302      	movs	r3, #2
20000ab8:	425a      	negs	r2, r3
20000aba:	687b      	ldr	r3, [r7, #4]
20000abc:	0018      	movs	r0, r3
20000abe:	47a0      	blx	r4
	}
	clear_object(object);
20000ac0:	687b      	ldr	r3, [r7, #4]
20000ac2:	0018      	movs	r0, r3
20000ac4:	f7ff fe26 	bl	20000714 <clear_object>
	object->posX += object->dirX;
20000ac8:	687b      	ldr	r3, [r7, #4]
20000aca:	68da      	ldr	r2, [r3, #12]
20000acc:	687b      	ldr	r3, [r7, #4]
20000ace:	685b      	ldr	r3, [r3, #4]
20000ad0:	18d2      	adds	r2, r2, r3
20000ad2:	687b      	ldr	r3, [r7, #4]
20000ad4:	60da      	str	r2, [r3, #12]
	object->posY += object->dirY;
20000ad6:	687b      	ldr	r3, [r7, #4]
20000ad8:	691a      	ldr	r2, [r3, #16]
20000ada:	687b      	ldr	r3, [r7, #4]
20000adc:	689b      	ldr	r3, [r3, #8]
20000ade:	18d2      	adds	r2, r2, r3
20000ae0:	687b      	ldr	r3, [r7, #4]
20000ae2:	611a      	str	r2, [r3, #16]
	
	if(object->posX < 1 || object->posX + object->geo->sizeX > 128){
20000ae4:	687b      	ldr	r3, [r7, #4]
20000ae6:	68db      	ldr	r3, [r3, #12]
20000ae8:	2b00      	cmp	r3, #0
20000aea:	dd07      	ble.n	20000afc <move_object+0xac>
20000aec:	687b      	ldr	r3, [r7, #4]
20000aee:	68da      	ldr	r2, [r3, #12]
20000af0:	687b      	ldr	r3, [r7, #4]
20000af2:	681b      	ldr	r3, [r3, #0]
20000af4:	685b      	ldr	r3, [r3, #4]
20000af6:	18d3      	adds	r3, r2, r3
20000af8:	2b80      	cmp	r3, #128	; 0x80
20000afa:	dd04      	ble.n	20000b06 <move_object+0xb6>
		object->dirX = -object->dirX;
20000afc:	687b      	ldr	r3, [r7, #4]
20000afe:	685b      	ldr	r3, [r3, #4]
20000b00:	425a      	negs	r2, r3
20000b02:	687b      	ldr	r3, [r7, #4]
20000b04:	605a      	str	r2, [r3, #4]
	}
	
	if(object->posY < 1 || object->posY + object->geo->sizeY > 64){
20000b06:	687b      	ldr	r3, [r7, #4]
20000b08:	691b      	ldr	r3, [r3, #16]
20000b0a:	2b00      	cmp	r3, #0
20000b0c:	dd07      	ble.n	20000b1e <move_object+0xce>
20000b0e:	687b      	ldr	r3, [r7, #4]
20000b10:	691a      	ldr	r2, [r3, #16]
20000b12:	687b      	ldr	r3, [r7, #4]
20000b14:	681b      	ldr	r3, [r3, #0]
20000b16:	689b      	ldr	r3, [r3, #8]
20000b18:	18d3      	adds	r3, r2, r3
20000b1a:	2b40      	cmp	r3, #64	; 0x40
20000b1c:	dd04      	ble.n	20000b28 <move_object+0xd8>
		object->dirY = -object->dirY;
20000b1e:	687b      	ldr	r3, [r7, #4]
20000b20:	689b      	ldr	r3, [r3, #8]
20000b22:	425a      	negs	r2, r3
20000b24:	687b      	ldr	r3, [r7, #4]
20000b26:	609a      	str	r2, [r3, #8]
	}
	draw_object(object);
20000b28:	687b      	ldr	r3, [r7, #4]
20000b2a:	0018      	movs	r0, r3
20000b2c:	f7ff fdc4 	bl	200006b8 <draw_object>
}
20000b30:	46c0      	nop			; (mov r8, r8)
20000b32:	46bd      	mov	sp, r7
20000b34:	b003      	add	sp, #12
20000b36:	bd90      	pop	{r4, r7, pc}

20000b38 <init_app>:


//inits
void init_app(void){
20000b38:	b580      	push	{r7, lr}
20000b3a:	af00      	add	r7, sp, #0
	//för avbrott
	*((unsigned long *) 0x40023830) =0x18;
20000b3c:	4b16      	ldr	r3, [pc, #88]	; (20000b98 <init_app+0x60>)
20000b3e:	2218      	movs	r2, #24
20000b40:	601a      	str	r2, [r3, #0]
	*((unsigned long *) 0x40023844) |=0x4000; 
20000b42:	4b16      	ldr	r3, [pc, #88]	; (20000b9c <init_app+0x64>)
20000b44:	681a      	ldr	r2, [r3, #0]
20000b46:	4b15      	ldr	r3, [pc, #84]	; (20000b9c <init_app+0x64>)
20000b48:	2180      	movs	r1, #128	; 0x80
20000b4a:	01c9      	lsls	r1, r1, #7
20000b4c:	430a      	orrs	r2, r1
20000b4e:	601a      	str	r2, [r3, #0]
	*((unsigned long *) 0xE000ED08) =0x2001C000; //flytta vektortabellen för undantag till adress 0x2001C000 
20000b50:	4b13      	ldr	r3, [pc, #76]	; (20000ba0 <init_app+0x68>)
20000b52:	4a14      	ldr	r2, [pc, #80]	; (20000ba4 <init_app+0x6c>)
20000b54:	601a      	str	r2, [r3, #0]
	*((void(**)(void))0x2001C03C) = systick_irq_handler; //init med adress till hanteringsrutin
20000b56:	4b14      	ldr	r3, [pc, #80]	; (20000ba8 <init_app+0x70>)
20000b58:	4a14      	ldr	r2, [pc, #80]	; (20000bac <init_app+0x74>)
20000b5a:	601a      	str	r2, [r3, #0]
	
	//port init
	GPIO_E.moder = 0x55555555; //15-0 utgång. För LCD
20000b5c:	4b14      	ldr	r3, [pc, #80]	; (20000bb0 <init_app+0x78>)
20000b5e:	4a15      	ldr	r2, [pc, #84]	; (20000bb4 <init_app+0x7c>)
20000b60:	601a      	str	r2, [r3, #0]
	GPIO_D.moder = 0x55005555; //15-12 och 7-0 utgång. För keypad
20000b62:	4b15      	ldr	r3, [pc, #84]	; (20000bb8 <init_app+0x80>)
20000b64:	4a15      	ldr	r2, [pc, #84]	; (20000bbc <init_app+0x84>)
20000b66:	601a      	str	r2, [r3, #0]
	GPIO_D.otyper = 0x0000; //onödig tilldelning?
20000b68:	4b13      	ldr	r3, [pc, #76]	; (20000bb8 <init_app+0x80>)
20000b6a:	2200      	movs	r2, #0
20000b6c:	809a      	strh	r2, [r3, #4]
	GPIO_D.pupdr = 0x55aa0000; 
20000b6e:	4b12      	ldr	r3, [pc, #72]	; (20000bb8 <init_app+0x80>)
20000b70:	4a13      	ldr	r2, [pc, #76]	; (20000bc0 <init_app+0x88>)
20000b72:	60da      	str	r2, [r3, #12]
	
	systick_flag = 0;
20000b74:	4b13      	ldr	r3, [pc, #76]	; (20000bc4 <init_app+0x8c>)
20000b76:	2200      	movs	r2, #0
20000b78:	601a      	str	r2, [r3, #0]
	second_count = 0;
20000b7a:	4b13      	ldr	r3, [pc, #76]	; (20000bc8 <init_app+0x90>)
20000b7c:	2200      	movs	r2, #0
20000b7e:	601a      	str	r2, [r3, #0]
	current_points = 0;
20000b80:	4b12      	ldr	r3, [pc, #72]	; (20000bcc <init_app+0x94>)
20000b82:	2200      	movs	r2, #0
20000b84:	601a      	str	r2, [r3, #0]
	DELAY_TIMER = 1000000; //tid för avbrott. vet inte vad jag ska sätta den till
20000b86:	4b12      	ldr	r3, [pc, #72]	; (20000bd0 <init_app+0x98>)
20000b88:	4a12      	ldr	r2, [pc, #72]	; (20000bd4 <init_app+0x9c>)
20000b8a:	601a      	str	r2, [r3, #0]
	running = 1; //spelet körs
20000b8c:	4b12      	ldr	r3, [pc, #72]	; (20000bd8 <init_app+0xa0>)
20000b8e:	2201      	movs	r2, #1
20000b90:	601a      	str	r2, [r3, #0]
}
20000b92:	46c0      	nop			; (mov r8, r8)
20000b94:	46bd      	mov	sp, r7
20000b96:	bd80      	pop	{r7, pc}
20000b98:	40023830 	andmi	r3, r2, r0, lsr r8
20000b9c:	40023844 	andmi	r3, r2, r4, asr #16
20000ba0:	e000ed08 	and	lr, r0, r8, lsl #26
20000ba4:	2001c000 	andcs	ip, r1, r0
20000ba8:	2001c03c 	andcs	ip, r1, ip, lsr r0
20000bac:	20000771 	andcs	r0, r0, r1, ror r7
20000bb0:	40021000 	andmi	r1, r2, r0
20000bb4:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000bb8:	40020c00 	andmi	r0, r2, r0, lsl #24
20000bbc:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000bc0:	55aa0000 	strpl	r0, [sl, #0]!
20000bc4:	20000edc 	ldrdcs	r0, [r0], -ip
20000bc8:	20000ed0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
20000bcc:	20000ed4 	ldrdcs	r0, [r0], -r4
20000bd0:	20000ec8 	andcs	r0, r0, r8, asr #29
20000bd4:	000f4240 	andeq	r4, pc, r0, asr #4
20000bd8:	20000ecc 	andcs	r0, r0, ip, asr #29

20000bdc <main>:



void main(void)
{
20000bdc:	b580      	push	{r7, lr}
20000bde:	b086      	sub	sp, #24
20000be0:	af00      	add	r7, sp, #0
	char c;
	POBJECT p = &ball;
20000be2:	4b43      	ldr	r3, [pc, #268]	; (20000cf0 <main+0x114>)
20000be4:	613b      	str	r3, [r7, #16]
	init_app();
20000be6:	f7ff ffa7 	bl	20000b38 <init_app>
	graphic_initialize();
20000bea:	f7ff fc16 	bl	2000041a <graphic_initialize>
	graphic_clear_screen();
20000bee:	f7ff fc3f 	bl	20000470 <graphic_clear_screen>
	delay(DELAY_TIMER);
20000bf2:	4b40      	ldr	r3, [pc, #256]	; (20000cf4 <main+0x118>)
20000bf4:	681b      	ldr	r3, [r3, #0]
20000bf6:	0018      	movs	r0, r3
20000bf8:	f7ff fa7c 	bl	200000f4 <delay>
	
	while(running){ //medan spelet körs
20000bfc:	e053      	b.n	20000ca6 <main+0xca>
		graphic_initialize(); //byt till spelskärmen
20000bfe:	f7ff fc0c 	bl	2000041a <graphic_initialize>
		while (!systick_flag){ //utförs under väntetid. 
20000c02:	e038      	b.n	20000c76 <main+0x9a>
			p->move(p);
20000c04:	693b      	ldr	r3, [r7, #16]
20000c06:	69db      	ldr	r3, [r3, #28]
20000c08:	693a      	ldr	r2, [r7, #16]
20000c0a:	0010      	movs	r0, r2
20000c0c:	4798      	blx	r3
			delay_milli(40);
20000c0e:	2028      	movs	r0, #40	; 0x28
20000c10:	f7ff fa3f 	bl	20000092 <delay_milli>
			c=keyb();
20000c14:	f000 f914 	bl	20000e40 <keyb>
20000c18:	0002      	movs	r2, r0
20000c1a:	210f      	movs	r1, #15
20000c1c:	187b      	adds	r3, r7, r1
20000c1e:	701a      	strb	r2, [r3, #0]
			switch(c){
20000c20:	187b      	adds	r3, r7, r1
20000c22:	781b      	ldrb	r3, [r3, #0]
20000c24:	2b04      	cmp	r3, #4
20000c26:	d00f      	beq.n	20000c48 <main+0x6c>
20000c28:	dc02      	bgt.n	20000c30 <main+0x54>
20000c2a:	2b02      	cmp	r3, #2
20000c2c:	d014      	beq.n	20000c58 <main+0x7c>
20000c2e:	e022      	b.n	20000c76 <main+0x9a>
20000c30:	2b06      	cmp	r3, #6
20000c32:	d002      	beq.n	20000c3a <main+0x5e>
20000c34:	2b08      	cmp	r3, #8
20000c36:	d017      	beq.n	20000c68 <main+0x8c>
20000c38:	e01d      	b.n	20000c76 <main+0x9a>
				case 6: p->set_speed(p,2,0); break;
20000c3a:	693b      	ldr	r3, [r7, #16]
20000c3c:	6a1b      	ldr	r3, [r3, #32]
20000c3e:	6938      	ldr	r0, [r7, #16]
20000c40:	2200      	movs	r2, #0
20000c42:	2102      	movs	r1, #2
20000c44:	4798      	blx	r3
20000c46:	e016      	b.n	20000c76 <main+0x9a>
				case 4: p->set_speed(p,-2,0); break;
20000c48:	693b      	ldr	r3, [r7, #16]
20000c4a:	6a1b      	ldr	r3, [r3, #32]
20000c4c:	2202      	movs	r2, #2
20000c4e:	4251      	negs	r1, r2
20000c50:	6938      	ldr	r0, [r7, #16]
20000c52:	2200      	movs	r2, #0
20000c54:	4798      	blx	r3
20000c56:	e00e      	b.n	20000c76 <main+0x9a>
				case 2: p->set_speed(p,0,-2); break;
20000c58:	693b      	ldr	r3, [r7, #16]
20000c5a:	6a1b      	ldr	r3, [r3, #32]
20000c5c:	2202      	movs	r2, #2
20000c5e:	4252      	negs	r2, r2
20000c60:	6938      	ldr	r0, [r7, #16]
20000c62:	2100      	movs	r1, #0
20000c64:	4798      	blx	r3
20000c66:	e006      	b.n	20000c76 <main+0x9a>
				case 8: p->set_speed(p,0,2); break;
20000c68:	693b      	ldr	r3, [r7, #16]
20000c6a:	6a1b      	ldr	r3, [r3, #32]
20000c6c:	6938      	ldr	r0, [r7, #16]
20000c6e:	2202      	movs	r2, #2
20000c70:	2100      	movs	r1, #0
20000c72:	4798      	blx	r3
20000c74:	46c0      	nop			; (mov r8, r8)
		while (!systick_flag){ //utförs under väntetid. 
20000c76:	4b20      	ldr	r3, [pc, #128]	; (20000cf8 <main+0x11c>)
20000c78:	681b      	ldr	r3, [r3, #0]
20000c7a:	2b00      	cmp	r3, #0
20000c7c:	d0c2      	beq.n	20000c04 <main+0x28>
			//if död, break ur loop och sätt running = 0
			
			
		}
		//kod som väntar på timeout
		current_points++; //öka poäng
20000c7e:	4b1f      	ldr	r3, [pc, #124]	; (20000cfc <main+0x120>)
20000c80:	681b      	ldr	r3, [r3, #0]
20000c82:	1c5a      	adds	r2, r3, #1
20000c84:	4b1d      	ldr	r3, [pc, #116]	; (20000cfc <main+0x120>)
20000c86:	601a      	str	r2, [r3, #0]
		ascii_init(); //byt till ascii (clearar också ascii displayen)
20000c88:	f7ff fea5 	bl	200009d6 <ascii_init>
		ascii_gotoxy(1,1);
20000c8c:	2101      	movs	r1, #1
20000c8e:	2001      	movs	r0, #1
20000c90:	f7ff feae 	bl	200009f0 <ascii_gotoxy>
		ascii_write_char((char) current_points); //skriv ut antal poäng
20000c94:	4b19      	ldr	r3, [pc, #100]	; (20000cfc <main+0x120>)
20000c96:	681b      	ldr	r3, [r3, #0]
20000c98:	b2db      	uxtb	r3, r3
20000c9a:	0018      	movs	r0, r3
20000c9c:	f7ff fec6 	bl	20000a2c <ascii_write_char>
		
		//addNewObstacles lr ngt
		
		systick_flag = 0; //kvittera avbrott I guess
20000ca0:	4b15      	ldr	r3, [pc, #84]	; (20000cf8 <main+0x11c>)
20000ca2:	2200      	movs	r2, #0
20000ca4:	601a      	str	r2, [r3, #0]
	while(running){ //medan spelet körs
20000ca6:	4b16      	ldr	r3, [pc, #88]	; (20000d00 <main+0x124>)
20000ca8:	681b      	ldr	r3, [r3, #0]
20000caa:	2b00      	cmp	r3, #0
20000cac:	d1a7      	bne.n	20000bfe <main+0x22>
		
		//if död, running = 0
	}
	
	//Gör detta när man förlorat
	graphic_clear_screen();
20000cae:	f7ff fbdf 	bl	20000470 <graphic_clear_screen>
	char *s;
	char game_over_msg[] = "Game Over";
20000cb2:	1d3b      	adds	r3, r7, #4
20000cb4:	4a13      	ldr	r2, [pc, #76]	; (20000d04 <main+0x128>)
20000cb6:	ca03      	ldmia	r2!, {r0, r1}
20000cb8:	c303      	stmia	r3!, {r0, r1}
20000cba:	8812      	ldrh	r2, [r2, #0]
20000cbc:	801a      	strh	r2, [r3, #0]
	ascii_init(); //byt till ascii
20000cbe:	f7ff fe8a 	bl	200009d6 <ascii_init>
	ascii_gotoxy(1,1);
20000cc2:	2101      	movs	r1, #1
20000cc4:	2001      	movs	r0, #1
20000cc6:	f7ff fe93 	bl	200009f0 <ascii_gotoxy>
	s = game_over_msg;
20000cca:	1d3b      	adds	r3, r7, #4
20000ccc:	617b      	str	r3, [r7, #20]
	while(*s){
20000cce:	e006      	b.n	20000cde <main+0x102>
		ascii_write_char(*s++);
20000cd0:	697b      	ldr	r3, [r7, #20]
20000cd2:	1c5a      	adds	r2, r3, #1
20000cd4:	617a      	str	r2, [r7, #20]
20000cd6:	781b      	ldrb	r3, [r3, #0]
20000cd8:	0018      	movs	r0, r3
20000cda:	f7ff fea7 	bl	20000a2c <ascii_write_char>
	while(*s){
20000cde:	697b      	ldr	r3, [r7, #20]
20000ce0:	781b      	ldrb	r3, [r3, #0]
20000ce2:	2b00      	cmp	r3, #0
20000ce4:	d1f4      	bne.n	20000cd0 <main+0xf4>
	}
20000ce6:	46c0      	nop			; (mov r8, r8)
20000ce8:	46bd      	mov	sp, r7
20000cea:	b006      	add	sp, #24
20000cec:	bd80      	pop	{r7, pc}
20000cee:	46c0      	nop			; (mov r8, r8)
20000cf0:	20000f14 	andcs	r0, r0, r4, lsl pc
20000cf4:	20000ec8 	andcs	r0, r0, r8, asr #29
20000cf8:	20000edc 	ldrdcs	r0, [r0], -ip
20000cfc:	20000ed4 	ldrdcs	r0, [r0], -r4
20000d00:	20000ecc 	andcs	r0, r0, ip, asr #29
20000d04:	20000fb0 			; <UNDEFINED> instruction: 0x20000fb0

20000d08 <move_obstacle>:
		{6, 0}, {6, 10}, {7, 0}, {7, 10}, {8, 0}, {8, 10}, {9, 0}, {9, 10}, {10, 0}, {10, 10},  
		{0, 10}, {1, 10}, {2, 10}, {3, 10}, {4, 10}, {5, 10}, {6, 10}, {7, 10}, {8, 10}, {9, 10}, {10, 10}  
	}
};

void move_obstacle(POBJECT object){
20000d08:	b580      	push	{r7, lr}
20000d0a:	b082      	sub	sp, #8
20000d0c:	af00      	add	r7, sp, #0
20000d0e:	6078      	str	r0, [r7, #4]
	if(object->posX < 1){     //om utanför skärmen, radera
20000d10:	687b      	ldr	r3, [r7, #4]
20000d12:	68db      	ldr	r3, [r3, #12]
20000d14:	2b00      	cmp	r3, #0
20000d16:	dc04      	bgt.n	20000d22 <move_obstacle+0x1a>
		clear_object(object);
20000d18:	687b      	ldr	r3, [r7, #4]
20000d1a:	0018      	movs	r0, r3
20000d1c:	f7ff fcfa 	bl	20000714 <clear_object>
		return;
20000d20:	e015      	b.n	20000d4e <move_obstacle+0x46>
	}
	clear_object(object);
20000d22:	687b      	ldr	r3, [r7, #4]
20000d24:	0018      	movs	r0, r3
20000d26:	f7ff fcf5 	bl	20000714 <clear_object>
	object->posX += object->dirX;
20000d2a:	687b      	ldr	r3, [r7, #4]
20000d2c:	68da      	ldr	r2, [r3, #12]
20000d2e:	687b      	ldr	r3, [r7, #4]
20000d30:	685b      	ldr	r3, [r3, #4]
20000d32:	18d2      	adds	r2, r2, r3
20000d34:	687b      	ldr	r3, [r7, #4]
20000d36:	60da      	str	r2, [r3, #12]
	object->posY += object->dirY;
20000d38:	687b      	ldr	r3, [r7, #4]
20000d3a:	691a      	ldr	r2, [r3, #16]
20000d3c:	687b      	ldr	r3, [r7, #4]
20000d3e:	689b      	ldr	r3, [r3, #8]
20000d40:	18d2      	adds	r2, r2, r3
20000d42:	687b      	ldr	r3, [r7, #4]
20000d44:	611a      	str	r2, [r3, #16]
	draw_object(object);
20000d46:	687b      	ldr	r3, [r7, #4]
20000d48:	0018      	movs	r0, r3
20000d4a:	f7ff fcb5 	bl	200006b8 <draw_object>
}
20000d4e:	46bd      	mov	sp, r7
20000d50:	b002      	add	sp, #8
20000d52:	bd80      	pop	{r7, pc}

20000d54 <kbdActive>:
#include <stdio.h>
#include "defines.h"

void kbdActive(unsigned char row)
{
20000d54:	b580      	push	{r7, lr}
20000d56:	b082      	sub	sp, #8
20000d58:	af00      	add	r7, sp, #0
20000d5a:	0002      	movs	r2, r0
20000d5c:	1dfb      	adds	r3, r7, #7
20000d5e:	701a      	strb	r2, [r3, #0]
	switch(row){
20000d60:	1dfb      	adds	r3, r7, #7
20000d62:	781b      	ldrb	r3, [r3, #0]
20000d64:	2b02      	cmp	r3, #2
20000d66:	d00c      	beq.n	20000d82 <kbdActive+0x2e>
20000d68:	dc02      	bgt.n	20000d70 <kbdActive+0x1c>
20000d6a:	2b01      	cmp	r3, #1
20000d6c:	d005      	beq.n	20000d7a <kbdActive+0x26>
20000d6e:	e014      	b.n	20000d9a <kbdActive+0x46>
20000d70:	2b03      	cmp	r3, #3
20000d72:	d00a      	beq.n	20000d8a <kbdActive+0x36>
20000d74:	2b04      	cmp	r3, #4
20000d76:	d00c      	beq.n	20000d92 <kbdActive+0x3e>
20000d78:	e00f      	b.n	20000d9a <kbdActive+0x46>
		case 1: GPIO_D.odrHigh = 0x10; break;
20000d7a:	4b0b      	ldr	r3, [pc, #44]	; (20000da8 <kbdActive+0x54>)
20000d7c:	2210      	movs	r2, #16
20000d7e:	755a      	strb	r2, [r3, #21]
20000d80:	e00e      	b.n	20000da0 <kbdActive+0x4c>
		case 2: GPIO_D.odrHigh = 0x20; break;
20000d82:	4b09      	ldr	r3, [pc, #36]	; (20000da8 <kbdActive+0x54>)
20000d84:	2220      	movs	r2, #32
20000d86:	755a      	strb	r2, [r3, #21]
20000d88:	e00a      	b.n	20000da0 <kbdActive+0x4c>
		case 3: GPIO_D.odrHigh = 0x40; break;
20000d8a:	4b07      	ldr	r3, [pc, #28]	; (20000da8 <kbdActive+0x54>)
20000d8c:	2240      	movs	r2, #64	; 0x40
20000d8e:	755a      	strb	r2, [r3, #21]
20000d90:	e006      	b.n	20000da0 <kbdActive+0x4c>
		case 4: GPIO_D.odrHigh = 0x80; break;
20000d92:	4b05      	ldr	r3, [pc, #20]	; (20000da8 <kbdActive+0x54>)
20000d94:	2280      	movs	r2, #128	; 0x80
20000d96:	755a      	strb	r2, [r3, #21]
20000d98:	e002      	b.n	20000da0 <kbdActive+0x4c>
		default: GPIO_D.odrHigh = 0;
20000d9a:	4b03      	ldr	r3, [pc, #12]	; (20000da8 <kbdActive+0x54>)
20000d9c:	2200      	movs	r2, #0
20000d9e:	755a      	strb	r2, [r3, #21]

	}
}
20000da0:	46c0      	nop			; (mov r8, r8)
20000da2:	46bd      	mov	sp, r7
20000da4:	b002      	add	sp, #8
20000da6:	bd80      	pop	{r7, pc}
20000da8:	40020c00 	andmi	r0, r2, r0, lsl #24

20000dac <kbdGetCol>:


unsigned char kbdGetCol(void)
{
20000dac:	b5b0      	push	{r4, r5, r7, lr}
20000dae:	b086      	sub	sp, #24
20000db0:	af00      	add	r7, sp, #0
	unsigned char c = GPIO_D.idrHigh;
20000db2:	4a21      	ldr	r2, [pc, #132]	; (20000e38 <kbdGetCol+0x8c>)
20000db4:	2316      	movs	r3, #22
20000db6:	18fb      	adds	r3, r7, r3
20000db8:	7c52      	ldrb	r2, [r2, #17]
20000dba:	701a      	strb	r2, [r3, #0]
	unsigned char row, col;
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE, 0, 0xF, 0xD};
20000dbc:	1d3b      	adds	r3, r7, #4
20000dbe:	4a1f      	ldr	r2, [pc, #124]	; (20000e3c <kbdGetCol+0x90>)
20000dc0:	ca13      	ldmia	r2!, {r0, r1, r4}
20000dc2:	c313      	stmia	r3!, {r0, r1, r4}
20000dc4:	6812      	ldr	r2, [r2, #0]
20000dc6:	601a      	str	r2, [r3, #0]
	for(row=1; row<=4; row++){
20000dc8:	2317      	movs	r3, #23
20000dca:	18fb      	adds	r3, r7, r3
20000dcc:	2201      	movs	r2, #1
20000dce:	701a      	strb	r2, [r3, #0]
20000dd0:	e025      	b.n	20000e1e <kbdGetCol+0x72>
		kbdActive(row);
20000dd2:	2317      	movs	r3, #23
20000dd4:	18fb      	adds	r3, r7, r3
20000dd6:	781b      	ldrb	r3, [r3, #0]
20000dd8:	0018      	movs	r0, r3
20000dda:	f7ff ffbb 	bl	20000d54 <kbdActive>
		
		if(col=kbdGetCol()){
20000dde:	2515      	movs	r5, #21
20000de0:	197c      	adds	r4, r7, r5
20000de2:	f7ff ffe3 	bl	20000dac <kbdGetCol>
20000de6:	0003      	movs	r3, r0
20000de8:	7023      	strb	r3, [r4, #0]
20000dea:	197b      	adds	r3, r7, r5
20000dec:	781b      	ldrb	r3, [r3, #0]
20000dee:	2b00      	cmp	r3, #0
20000df0:	d00f      	beq.n	20000e12 <kbdGetCol+0x66>
			kbdActive(0);
20000df2:	2000      	movs	r0, #0
20000df4:	f7ff ffae 	bl	20000d54 <kbdActive>
			
			return key[(row-1)*4+(col-1)];
20000df8:	2317      	movs	r3, #23
20000dfa:	18fb      	adds	r3, r7, r3
20000dfc:	781b      	ldrb	r3, [r3, #0]
20000dfe:	3b01      	subs	r3, #1
20000e00:	009a      	lsls	r2, r3, #2
20000e02:	2315      	movs	r3, #21
20000e04:	18fb      	adds	r3, r7, r3
20000e06:	781b      	ldrb	r3, [r3, #0]
20000e08:	3b01      	subs	r3, #1
20000e0a:	18d3      	adds	r3, r2, r3
20000e0c:	1d3a      	adds	r2, r7, #4
20000e0e:	5cd3      	ldrb	r3, [r2, r3]
20000e10:	e00e      	b.n	20000e30 <kbdGetCol+0x84>
	for(row=1; row<=4; row++){
20000e12:	2117      	movs	r1, #23
20000e14:	187b      	adds	r3, r7, r1
20000e16:	781a      	ldrb	r2, [r3, #0]
20000e18:	187b      	adds	r3, r7, r1
20000e1a:	3201      	adds	r2, #1
20000e1c:	701a      	strb	r2, [r3, #0]
20000e1e:	2317      	movs	r3, #23
20000e20:	18fb      	adds	r3, r7, r3
20000e22:	781b      	ldrb	r3, [r3, #0]
20000e24:	2b04      	cmp	r3, #4
20000e26:	d9d4      	bls.n	20000dd2 <kbdGetCol+0x26>
		}
	}
	kbdActive(0);
20000e28:	2000      	movs	r0, #0
20000e2a:	f7ff ff93 	bl	20000d54 <kbdActive>
	return 0xff;
20000e2e:	23ff      	movs	r3, #255	; 0xff
}
20000e30:	0018      	movs	r0, r3
20000e32:	46bd      	mov	sp, r7
20000e34:	b006      	add	sp, #24
20000e36:	bdb0      	pop	{r4, r5, r7, pc}
20000e38:	40020c00 	andmi	r0, r2, r0, lsl #24
20000e3c:	20000fbc 			; <UNDEFINED> instruction: 0x20000fbc

20000e40 <keyb>:

unsigned char keyb(void)
{
20000e40:	b5b0      	push	{r4, r5, r7, lr}
20000e42:	b086      	sub	sp, #24
20000e44:	af00      	add	r7, sp, #0
	unsigned char row, col;
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE, 0, 0xF, 0xD};
20000e46:	1d3b      	adds	r3, r7, #4
20000e48:	4a1e      	ldr	r2, [pc, #120]	; (20000ec4 <keyb+0x84>)
20000e4a:	ca13      	ldmia	r2!, {r0, r1, r4}
20000e4c:	c313      	stmia	r3!, {r0, r1, r4}
20000e4e:	6812      	ldr	r2, [r2, #0]
20000e50:	601a      	str	r2, [r3, #0]
	for(row=1; row<=4; row++){
20000e52:	2317      	movs	r3, #23
20000e54:	18fb      	adds	r3, r7, r3
20000e56:	2201      	movs	r2, #1
20000e58:	701a      	strb	r2, [r3, #0]
20000e5a:	e025      	b.n	20000ea8 <keyb+0x68>
		kbdActive(row);
20000e5c:	2317      	movs	r3, #23
20000e5e:	18fb      	adds	r3, r7, r3
20000e60:	781b      	ldrb	r3, [r3, #0]
20000e62:	0018      	movs	r0, r3
20000e64:	f7ff ff76 	bl	20000d54 <kbdActive>
		
		if(col=kbdGetCol()){
20000e68:	2516      	movs	r5, #22
20000e6a:	197c      	adds	r4, r7, r5
20000e6c:	f7ff ff9e 	bl	20000dac <kbdGetCol>
20000e70:	0003      	movs	r3, r0
20000e72:	7023      	strb	r3, [r4, #0]
20000e74:	197b      	adds	r3, r7, r5
20000e76:	781b      	ldrb	r3, [r3, #0]
20000e78:	2b00      	cmp	r3, #0
20000e7a:	d00f      	beq.n	20000e9c <keyb+0x5c>
			kbdActive(0);
20000e7c:	2000      	movs	r0, #0
20000e7e:	f7ff ff69 	bl	20000d54 <kbdActive>
			
			return key[(row-1)*4+(col-1)];
20000e82:	2317      	movs	r3, #23
20000e84:	18fb      	adds	r3, r7, r3
20000e86:	781b      	ldrb	r3, [r3, #0]
20000e88:	3b01      	subs	r3, #1
20000e8a:	009a      	lsls	r2, r3, #2
20000e8c:	2316      	movs	r3, #22
20000e8e:	18fb      	adds	r3, r7, r3
20000e90:	781b      	ldrb	r3, [r3, #0]
20000e92:	3b01      	subs	r3, #1
20000e94:	18d3      	adds	r3, r2, r3
20000e96:	1d3a      	adds	r2, r7, #4
20000e98:	5cd3      	ldrb	r3, [r2, r3]
20000e9a:	e00e      	b.n	20000eba <keyb+0x7a>
	for(row=1; row<=4; row++){
20000e9c:	2117      	movs	r1, #23
20000e9e:	187b      	adds	r3, r7, r1
20000ea0:	781a      	ldrb	r2, [r3, #0]
20000ea2:	187b      	adds	r3, r7, r1
20000ea4:	3201      	adds	r2, #1
20000ea6:	701a      	strb	r2, [r3, #0]
20000ea8:	2317      	movs	r3, #23
20000eaa:	18fb      	adds	r3, r7, r3
20000eac:	781b      	ldrb	r3, [r3, #0]
20000eae:	2b04      	cmp	r3, #4
20000eb0:	d9d4      	bls.n	20000e5c <keyb+0x1c>
		}
	}
	kbdActive(0);
20000eb2:	2000      	movs	r0, #0
20000eb4:	f7ff ff4e 	bl	20000d54 <kbdActive>
	return 0xff;
20000eb8:	23ff      	movs	r3, #255	; 0xff
20000eba:	0018      	movs	r0, r3
20000ebc:	46bd      	mov	sp, r7
20000ebe:	b006      	add	sp, #24
20000ec0:	bdb0      	pop	{r4, r5, r7, pc}
20000ec2:	46c0      	nop			; (mov r8, r8)
20000ec4:	20000fbc 			; <UNDEFINED> instruction: 0x20000fbc

20000ec8 <DELAY_TIMER>:
20000ec8:	00000000 	andeq	r0, r0, r0

20000ecc <running>:
20000ecc:	00000000 	andeq	r0, r0, r0

20000ed0 <second_count>:
20000ed0:	00000000 	andeq	r0, r0, r0

20000ed4 <current_points>:
20000ed4:	00000000 	andeq	r0, r0, r0

20000ed8 <delay_count>:
20000ed8:	00000000 	andeq	r0, r0, r0

20000edc <systick_flag>:
20000edc:	00000000 	andeq	r0, r0, r0

20000ee0 <ball_geometry>:
20000ee0:	0000000c 	andeq	r0, r0, ip
20000ee4:	00000004 	andeq	r0, r0, r4
20000ee8:	00000004 	andeq	r0, r0, r4
20000eec:	02000100 	andeq	r0, r0, #0, 2
20000ef0:	01010001 	tsteq	r1, r1
20000ef4:	03010201 	movweq	r0, #4609	; 0x1201
20000ef8:	01020002 	tsteq	r2, r2
20000efc:	03020202 	movweq	r0, #8706	; 0x2202
20000f00:	00000203 	andeq	r0, r0, r3, lsl #4
	...

20000f14 <ball>:
20000f14:	20000ee0 	andcs	r0, r0, r0, ror #29
20000f18:	00000000 	andeq	r0, r0, r0
20000f1c:	00000002 	andeq	r0, r0, r2
20000f20:	00000001 	andeq	r0, r0, r1
20000f24:	00000001 	andeq	r0, r0, r1
20000f28:	200006b9 			; <UNDEFINED> instruction: 0x200006b9
20000f2c:	20000715 	andcs	r0, r0, r5, lsl r7
20000f30:	20000a51 	andcs	r0, r0, r1, asr sl
20000f34:	20000699 	mulcs	r0, r9, r6

20000f38 <obstacle_geometry>:
20000f38:	00000028 	andeq	r0, r0, r8, lsr #32
20000f3c:	0000000a 	andeq	r0, r0, sl
20000f40:	0000000a 	andeq	r0, r0, sl
20000f44:	00010000 	andeq	r0, r1, r0
20000f48:	00030002 	andeq	r0, r3, r2
20000f4c:	00050004 	andeq	r0, r5, r4
20000f50:	00070006 	andeq	r0, r7, r6
20000f54:	00090008 	andeq	r0, r9, r8
20000f58:	0001000a 	andeq	r0, r1, sl
20000f5c:	00020a01 	andeq	r0, r2, r1, lsl #20
20000f60:	00030a02 	andeq	r0, r3, r2, lsl #20
20000f64:	00040a03 	andeq	r0, r4, r3, lsl #20
20000f68:	00050a04 	andeq	r0, r5, r4, lsl #20

20000f6c <obstacle>:
20000f6c:	20000f38 	andcs	r0, r0, r8, lsr pc
20000f70:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20000f74:	00000000 	andeq	r0, r0, r0
20000f78:	0000006e 	andeq	r0, r0, lr, rrx
20000f7c:	00000000 	andeq	r0, r0, r0
20000f80:	200006b9 			; <UNDEFINED> instruction: 0x200006b9
20000f84:	20000715 	andcs	r0, r0, r5, lsl r7
20000f88:	20000d09 	andcs	r0, r0, r9, lsl #26
20000f8c:	20000699 	mulcs	r0, r9, r6
20000f90:	20000552 	andcs	r0, r0, r2, asr r5
20000f94:	2000055c 	andcs	r0, r0, ip, asr r5
20000f98:	20000566 	andcs	r0, r0, r6, ror #10
20000f9c:	20000570 	andcs	r0, r0, r0, ror r5
20000fa0:	2000057a 	andcs	r0, r0, sl, ror r5
20000fa4:	20000584 	andcs	r0, r0, r4, lsl #11
20000fa8:	2000058e 	andcs	r0, r0, lr, lsl #11
20000fac:	20000598 	mulcs	r0, r8, r5
20000fb0:	656d6147 	strbvs	r6, [sp, #-327]!	; 0xfffffeb9
20000fb4:	65764f20 	ldrbvs	r4, [r6, #-3872]!	; 0xfffff0e0
20000fb8:	00000072 	andeq	r0, r0, r2, ror r0
20000fbc:	0a030201 	beq	200c17c8 <obstacle+0xc085c>
20000fc0:	0b060504 	bleq	201823d8 <obstacle+0x18146c>
20000fc4:	0c090807 	stceq	8, cr0, [r9], {7}
20000fc8:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000f98 <obstacle+0x2c>

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000146 	andeq	r0, r0, r6, asr #2
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000018 	andeq	r0, r0, r8, lsl r0
      10:	0001470c 	andeq	r4, r1, ip, lsl #14
      14:	00011800 	andeq	r1, r1, r0, lsl #16
      18:	00001000 	andeq	r1, r0, r0
      1c:	00011420 	andeq	r1, r1, r0, lsr #8
      20:	00000000 	andeq	r0, r0, r0
      24:	07040200 	streq	r0, [r4, -r0, lsl #4]
      28:	0000063a 	andeq	r0, r0, sl, lsr r6
      2c:	05070202 	streq	r0, [r7, #-514]	; 0xfffffdfe
      30:	02000001 	andeq	r0, r0, #1
      34:	00be0801 	adcseq	r0, lr, r1, lsl #16
      38:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
      3c:	02000000 	andeq	r0, r0, #0
      40:	00005204 	andeq	r5, r0, r4, lsl #4
      44:	d0030500 	andle	r0, r3, r0, lsl #10
      48:	0420000e 	strteq	r0, [r0], #-14
      4c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
      50:	4b050074 	blmi	140228 <startup-0x1febfdd8>
      54:	03000000 	movweq	r0, #0
      58:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
      5c:	00520502 	subseq	r0, r2, r2, lsl #10
      60:	03050000 	movweq	r0, #20480	; 0x5000
      64:	20000edc 	ldrdcs	r0, [r0], -ip
      68:	0000cc03 	andeq	ip, r0, r3, lsl #24
      6c:	52060200 	andpl	r0, r6, #0, 4
      70:	05000000 	streq	r0, [r0, #-0]
      74:	000ed803 	andeq	sp, lr, r3, lsl #16
      78:	00e10320 	rsceq	r0, r1, r0, lsr #6
      7c:	07020000 	streq	r0, [r2, -r0]
      80:	00000052 	andeq	r0, r0, r2, asr r0
      84:	0ed40305 	cdpeq	3, 13, cr0, cr4, cr5, {0}
      88:	7f032000 	svcvc	0x00032000
      8c:	02000001 	andeq	r0, r0, #1
      90:	00005208 	andeq	r5, r0, r8, lsl #4
      94:	c8030500 	stmdagt	r3, {r8, sl}
      98:	0320000e 			; <UNDEFINED> instruction: 0x0320000e
      9c:	000000fd 	strdeq	r0, [r0], -sp
      a0:	00520902 	subseq	r0, r2, r2, lsl #18
      a4:	03050000 	movweq	r0, #20480	; 0x5000
      a8:	20000ecc 	andcs	r0, r0, ip, asr #29
      ac:	00018b06 	andeq	r8, r1, r6, lsl #22
      b0:	f4300100 			; <UNDEFINED> instruction: 0xf4300100
      b4:	30200000 	eorcc	r0, r0, r0
      b8:	01000000 	mrseq	r0, (UNDEF: 0)
      bc:	0000d09c 	muleq	r0, ip, r0
      c0:	08f10700 	ldmeq	r1!, {r8, r9, sl}^
      c4:	30010000 	andcc	r0, r1, r0
      c8:	00000025 	andeq	r0, r0, r5, lsr #32
      cc:	00749102 	rsbseq	r9, r4, r2, lsl #2
      d0:	0000d808 	andeq	sp, r0, r8, lsl #16
      d4:	b8270100 	stmdalt	r7!, {r8}
      d8:	3c200000 	stccc	0, cr0, [r0], #-0
      dc:	01000000 	mrseq	r0, (UNDEF: 0)
      e0:	0000069c 	muleq	r0, ip, r6
      e4:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
      e8:	20000092 	mulcs	r0, r2, r0
      ec:	00000026 	andeq	r0, r0, r6, lsr #32
      f0:	01049c01 	tsteq	r4, r1, lsl #24
      f4:	6d090000 	stcvs	0, cr0, [r9, #-0]
      f8:	1e010073 	mcrne	0, 0, r0, cr1, cr3, {3}
      fc:	00000025 	andeq	r0, r0, r5, lsr #32
     100:	00749102 	rsbseq	r9, r4, r2, lsl #2
     104:	00000c06 	andeq	r0, r0, r6, lsl #24
     108:	66130100 	ldrvs	r0, [r3], -r0, lsl #2
     10c:	2c200000 	stccs	0, cr0, [r0], #-0
     110:	01000000 	mrseq	r0, (UNDEF: 0)
     114:	0001279c 	muleq	r1, ip, r7
     118:	73750900 	cmnvc	r5, #0, 18
     11c:	25130100 	ldrcs	r0, [r3, #-256]	; 0xffffff00
     120:	02000000 	andeq	r0, r0, #0
     124:	0a007491 	beq	1d370 <startup-0x1ffe2c90>
     128:	000000b2 	strheq	r0, [r0], -r2
     12c:	00540e01 	subseq	r0, r4, r1, lsl #28
     130:	00122000 	andseq	r2, r2, r0
     134:	9c010000 	stcls	0, cr0, [r1], {-0}
     138:	0000a608 	andeq	sl, r0, r8, lsl #12
     13c:	10040100 	andne	r0, r4, r0, lsl #2
     140:	44200000 	strtmi	r0, [r0], #-0
     144:	01000000 	mrseq	r0, (UNDEF: 0)
     148:	0366009c 	cmneq	r6, #156	; 0x9c
     14c:	00040000 	andeq	r0, r4, r0
     150:	000000aa 	andeq	r0, r0, sl, lsr #1
     154:	00180104 	andseq	r0, r8, r4, lsl #2
     158:	620c0000 	andvs	r0, ip, #0
     15c:	18000002 	stmdane	r0, {r1}
     160:	24000001 	strcs	r0, [r0], #-1
     164:	74200001 	strtvc	r0, [r0], #-1
     168:	9f000005 	svcls	0x00000005
     16c:	02000000 	andeq	r0, r0, #0
     170:	b2210218 	eorlt	r0, r1, #24, 4	; 0x80000001
     174:	03000000 	movweq	r0, #0
     178:	000002e5 	andeq	r0, r0, r5, ror #5
     17c:	00b22202 	adcseq	r2, r2, r2, lsl #4
     180:	03000000 	movweq	r0, #0
     184:	000001ac 	andeq	r0, r0, ip, lsr #3
     188:	00b92302 	adcseq	r2, r9, r2, lsl #6
     18c:	03040000 	movweq	r0, #16384	; 0x4000
     190:	0000020e 	andeq	r0, r0, lr, lsl #4
     194:	00b92402 	adcseq	r2, r9, r2, lsl #8
     198:	03060000 	movweq	r0, #24576	; 0x6000
     19c:	000002aa 	andeq	r0, r0, sl, lsr #5
     1a0:	00b22502 	adcseq	r2, r2, r2, lsl #10
     1a4:	03080000 	movweq	r0, #32768	; 0x8000
     1a8:	0000022c 	andeq	r0, r0, ip, lsr #4
     1ac:	00b22602 	adcseq	r2, r2, r2, lsl #12
     1b0:	030c0000 	movweq	r0, #49152	; 0xc000
     1b4:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
     1b8:	00c02702 	sbceq	r2, r0, r2, lsl #14
     1bc:	03100000 	tsteq	r0, #0
     1c0:	000002a2 	andeq	r0, r0, r2, lsr #5
     1c4:	00c02802 	sbceq	r2, r0, r2, lsl #16
     1c8:	03110000 	tsteq	r1, #0
     1cc:	00000202 	andeq	r0, r0, r2, lsl #4
     1d0:	00b92902 	adcseq	r2, r9, r2, lsl #18
     1d4:	03120000 	tsteq	r2, #0
     1d8:	0000025b 	andeq	r0, r0, fp, asr r2
     1dc:	00c02a02 	sbceq	r2, r0, r2, lsl #20
     1e0:	03140000 	tsteq	r4, #0
     1e4:	000001cb 	andeq	r0, r0, fp, asr #3
     1e8:	00c02b02 	sbceq	r2, r0, r2, lsl #22
     1ec:	03150000 	tsteq	r5, #0
     1f0:	0000024f 	andeq	r0, r0, pc, asr #4
     1f4:	00b92c02 	adcseq	r2, r9, r2, lsl #24
     1f8:	00160000 	andseq	r0, r6, r0
     1fc:	3a070404 	bcc	1c1214 <startup-0x1fe3edec>
     200:	04000006 	streq	r0, [r0], #-6
     204:	01050702 	tsteq	r5, r2, lsl #14
     208:	01040000 	mrseq	r0, (UNDEF: 4)
     20c:	0000be08 	andeq	fp, r0, r8, lsl #28
     210:	01e60500 	mvneq	r0, r0, lsl #10
     214:	2d020000 	stccs	0, cr0, [r2, #-0]
     218:	00000025 	andeq	r0, r0, r5, lsr #32
     21c:	0001c506 	andeq	ip, r1, r6, lsl #10
     220:	c89a0100 	ldmgt	sl, {r8}
     224:	d0200004 	eorle	r0, r0, r4
     228:	01000001 	tsteq	r0, r1
     22c:	0001549c 	muleq	r1, ip, r4
     230:	00780700 	rsbseq	r0, r8, r0, lsl #14
     234:	00c09a01 	sbceq	r9, r0, r1, lsl #20
     238:	91020000 	mrsls	r0, (UNDEF: 2)
     23c:	0079075f 	rsbseq	r0, r9, pc, asr r7
     240:	00c09a01 	sbceq	r9, r0, r1, lsl #20
     244:	91020000 	mrsls	r0, (UNDEF: 2)
     248:	6573075e 	ldrbvs	r0, [r3, #-1886]!	; 0xfffff8a2
     24c:	9a010074 	bls	40424 <startup-0x1ffbfbdc>
     250:	000000c0 	andeq	r0, r0, r0, asr #1
     254:	085d9102 	ldmdaeq	sp, {r1, r8, ip, pc}^
     258:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     25c:	00c09f01 	sbceq	r9, r0, r1, lsl #30
     260:	91020000 	mrsls	r0, (UNDEF: 2)
     264:	02470864 	subeq	r0, r7, #100, 16	; 0x640000
     268:	a0010000 	andge	r0, r1, r0
     26c:	000000c0 	andeq	r0, r0, r0, asr #1
     270:	08679102 	stmdaeq	r7!, {r1, r8, ip, pc}^
     274:	00000494 	muleq	r0, r4, r4
     278:	00c0a101 	sbceq	sl, r0, r1, lsl #2
     27c:	91020000 	mrsls	r0, (UNDEF: 2)
     280:	01a30866 			; <UNDEFINED> instruction: 0x01a30866
     284:	a2010000 	andge	r0, r1, #0
     288:	000000c0 	andeq	r0, r0, r0, asr #1
     28c:	08659102 	stmdaeq	r5!, {r1, r8, ip, pc}^
     290:	000001e1 	andeq	r0, r0, r1, ror #3
     294:	00c0cd01 	sbceq	ip, r0, r1, lsl #26
     298:	91020000 	mrsls	r0, (UNDEF: 2)
     29c:	0e060063 	cdpeq	0, 0, cr0, cr6, cr3, {3}
     2a0:	01000003 	tsteq	r0, r3
     2a4:	00047090 	muleq	r4, r0, r0
     2a8:	00005820 	andeq	r5, r0, r0, lsr #16
     2ac:	969c0100 	ldrls	r0, [ip], r0, lsl #2
     2b0:	09000001 	stmdbeq	r0, {r0}
     2b4:	20000476 	andcs	r0, r0, r6, ror r4
     2b8:	0000004a 	andeq	r0, r0, sl, asr #32
     2bc:	0100690a 	tsteq	r0, sl, lsl #18
     2c0:	00019691 	muleq	r1, r1, r6
     2c4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     2c8:	00049a09 	andeq	r9, r4, r9, lsl #20
     2cc:	00001a20 	andeq	r1, r0, r0, lsr #20
     2d0:	00770a00 	rsbseq	r0, r7, r0, lsl #20
     2d4:	01969401 	orrseq	r9, r6, r1, lsl #8
     2d8:	91020000 	mrsls	r0, (UNDEF: 2)
     2dc:	00000070 	andeq	r0, r0, r0, ror r0
     2e0:	6905040b 	stmdbvs	r5, {r0, r1, r3, sl}
     2e4:	0600746e 	streq	r7, [r0], -lr, ror #8
     2e8:	00000219 	andeq	r0, r0, r9, lsl r2
     2ec:	041a8201 	ldreq	r8, [sl], #-513	; 0xfffffdff
     2f0:	00562000 	subseq	r2, r6, r0
     2f4:	9c010000 	stcls	0, cr0, [r1], {-0}
     2f8:	000001d1 	ldrdeq	r0, [r0], -r1
     2fc:	00000c0c 	andeq	r0, r0, ip, lsl #24
     300:	96840100 	strls	r0, [r4], r0, lsl #2
     304:	c3000001 	movwgt	r0, #1
     308:	0d000001 	stceq	0, cr0, [r0, #-4]
     30c:	00000e00 	andeq	r0, r0, r0, lsl #28
     310:	86010000 	strhi	r0, [r1], -r0
     314:	00000196 	muleq	r0, r6, r1
     318:	0f00000d 	svceq	0x0000000d
     31c:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
     320:	00c07d01 	sbceq	r7, r0, r1, lsl #26
     324:	03f00000 	mvnseq	r0, #0
     328:	002a2000 	eoreq	r2, sl, r0
     32c:	9c010000 	stcls	0, cr0, [r1], {-0}
     330:	000001f9 	strdeq	r0, [r0], -r9
     334:	00049410 	andeq	r9, r4, r0, lsl r4
     338:	c07d0100 	rsbsgt	r0, sp, r0, lsl #2
     33c:	02000000 	andeq	r0, r0, #0
     340:	06007791 			; <UNDEFINED> instruction: 0x06007791
     344:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
     348:	03aa7501 			; <UNDEFINED> instruction: 0x03aa7501
     34c:	00462000 	subeq	r2, r6, r0
     350:	9c010000 	stcls	0, cr0, [r1], {-0}
     354:	0000022b 	andeq	r0, r0, fp, lsr #4
     358:	0001c010 	andeq	ip, r1, r0, lsl r0
     35c:	c0750100 	rsbsgt	r0, r5, r0, lsl #2
     360:	02000000 	andeq	r0, r0, #0
     364:	94107791 	ldrls	r7, [r0], #-1937	; 0xfffff86f
     368:	01000004 	tsteq	r0, r4
     36c:	0000c075 	andeq	ip, r0, r5, ror r0
     370:	76910200 	ldrvc	r0, [r1], r0, lsl #4
     374:	02f80600 	rscseq	r0, r8, #0, 12
     378:	6d010000 	stcvs	0, cr0, [r1, #-0]
     37c:	20000364 	andcs	r0, r0, r4, ror #6
     380:	00000046 	andeq	r0, r0, r6, asr #32
     384:	025d9c01 	subseq	r9, sp, #256	; 0x100
     388:	06100000 	ldreq	r0, [r0], -r0
     38c:	01000003 	tsteq	r0, r3
     390:	0000c06d 	andeq	ip, r0, sp, rrx
     394:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     398:	00049410 	andeq	r9, r4, r0, lsl r4
     39c:	c06d0100 	rsbgt	r0, sp, r0, lsl #2
     3a0:	02000000 	andeq	r0, r0, #0
     3a4:	06007691 			; <UNDEFINED> instruction: 0x06007691
     3a8:	000001d3 	ldrdeq	r0, [r0], -r3
     3ac:	02e45701 	rsceq	r5, r4, #262144	; 0x40000
     3b0:	00802000 	addeq	r2, r0, r0
     3b4:	9c010000 	stcls	0, cr0, [r1], {-0}
     3b8:	0000029c 	muleq	r0, ip, r2
     3bc:	00090010 	andeq	r0, r9, r0, lsl r0
     3c0:	c0570100 	subsgt	r0, r7, r0, lsl #2
     3c4:	02000000 	andeq	r0, r0, #0
     3c8:	94107791 	ldrls	r7, [r0], #-1937	; 0xfffff86f
     3cc:	01000004 	tsteq	r0, r4
     3d0:	0000c057 	andeq	ip, r0, r7, asr r0
     3d4:	76910200 	ldrvc	r0, [r1], r0, lsl #4
     3d8:	0000b20e 	andeq	fp, r0, lr, lsl #4
     3dc:	962f0100 	strtls	r0, [pc], -r0, lsl #2
     3e0:	0d000001 	stceq	0, cr0, [r0, #-4]
     3e4:	eb0f0000 	bl	3c03ec <startup-0x1fc3fc14>
     3e8:	01000002 	tsteq	r0, r2
     3ec:	0000c03e 	andeq	ip, r0, lr, lsr r0
     3f0:	00025000 	andeq	r5, r2, r0
     3f4:	00009420 	andeq	r9, r0, r0, lsr #8
     3f8:	e29c0100 	adds	r0, ip, #0, 2
     3fc:	10000002 	andne	r0, r0, r2
     400:	00000494 	muleq	r0, r4, r4
     404:	00c03e01 	sbceq	r3, r0, r1, lsl #28
     408:	91020000 	mrsls	r0, (UNDEF: 2)
     40c:	00b20c6f 	adcseq	r0, r2, pc, ror #24
     410:	2f010000 	svccs	0x00010000
     414:	00000196 	muleq	r0, r6, r1
     418:	000002d4 	ldrdeq	r0, [r0], -r4
     41c:	520a000d 	andpl	r0, sl, #13
     420:	48010056 	stmdami	r1, {r1, r2, r4, r6}
     424:	000000c0 	andeq	r0, r0, r0, asr #1
     428:	00779102 	rsbseq	r9, r7, r2, lsl #2
     42c:	0002cc06 	andeq	ip, r2, r6, lsl #24
     430:	f0290100 			; <UNDEFINED> instruction: 0xf0290100
     434:	60200001 	eorvs	r0, r0, r1
     438:	01000000 	mrseq	r0, (UNDEF: 0)
     43c:	0003059c 	muleq	r3, ip, r5
     440:	00b20e00 	adcseq	r0, r2, r0, lsl #28
     444:	2f010000 	svccs	0x00010000
     448:	00000196 	muleq	r0, r6, r1
     44c:	0600000d 	streq	r0, [r0], -sp
     450:	00000191 	muleq	r0, r1, r1
     454:	01900f01 	orrseq	r0, r0, r1, lsl #30
     458:	00602000 	rsbeq	r2, r0, r0
     45c:	9c010000 	stcls	0, cr0, [r1], {-0}
     460:	00000329 	andeq	r0, r0, r9, lsr #6
     464:	00049410 	andeq	r9, r4, r0, lsl r4
     468:	c00f0100 	andgt	r0, pc, r0, lsl #2
     46c:	02000000 	andeq	r0, r0, #0
     470:	11007791 			; <UNDEFINED> instruction: 0x11007791
     474:	000001eb 	andeq	r0, r0, fp, ror #3
     478:	015c0901 	cmpeq	ip, r1, lsl #18
     47c:	00342000 	eorseq	r2, r4, r0
     480:	9c010000 	stcls	0, cr0, [r1], {-0}
     484:	0000034b 	andeq	r0, r0, fp, asr #6
     488:	01007807 	tsteq	r0, r7, lsl #16
     48c:	0000c009 	andeq	ip, r0, r9
     490:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     494:	02321200 	eorseq	r1, r2, #0, 4
     498:	03010000 	movweq	r0, #4096	; 0x1000
     49c:	20000124 	andcs	r0, r0, r4, lsr #2
     4a0:	00000038 	andeq	r0, r0, r8, lsr r0
     4a4:	78079c01 	stmdavc	r7, {r0, sl, fp, ip, pc}
     4a8:	c0030100 	andgt	r0, r3, r0, lsl #2
     4ac:	02000000 	andeq	r0, r0, #0
     4b0:	00007791 	muleq	r0, r1, r7
     4b4:	00000255 	andeq	r0, r0, r5, asr r2
     4b8:	01d30004 	bicseq	r0, r3, r4
     4bc:	01040000 	mrseq	r0, (UNDEF: 4)
     4c0:	00000018 	andeq	r0, r0, r8, lsl r0
     4c4:	0003690c 	andeq	r6, r3, ip, lsl #18
     4c8:	00011800 	andeq	r1, r1, r0, lsl #16
     4cc:	00069800 	andeq	r9, r6, r0, lsl #16
     4d0:	0000d820 	andeq	sp, r0, r0, lsr #16
     4d4:	0001e200 	andeq	lr, r1, r0, lsl #4
     4d8:	07040200 	streq	r0, [r4, -r0, lsl #4]
     4dc:	0000063a 	andeq	r0, r0, sl, lsr r6
     4e0:	05070202 	streq	r0, [r7, #-514]	; 0xfffffdfe
     4e4:	02000001 	andeq	r0, r0, #1
     4e8:	00be0801 	adcseq	r0, lr, r1, lsl #16
     4ec:	3c030000 	stccc	0, cr0, [r3], {-0}
     4f0:	02000003 	andeq	r0, r0, #3
     4f4:	005b0402 	subseq	r0, fp, r2, lsl #8
     4f8:	78040000 	stmdavc	r4, {}	; <UNPREDICTABLE>
     4fc:	33050200 	movwcc	r0, #20992	; 0x5200
     500:	00000000 	andeq	r0, r0, r0
     504:	02007904 	andeq	r7, r0, #4, 18	; 0x10000
     508:	00003306 	andeq	r3, r0, r6, lsl #6
     50c:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
     510:	00000343 	andeq	r0, r0, r3, asr #6
     514:	003a0702 	eorseq	r0, sl, r2, lsl #14
     518:	5f030000 	svcpl	0x00030000
     51c:	34000003 	strcc	r0, [r0], #-3
     520:	00a20902 	adceq	r0, r2, r2, lsl #18
     524:	c8060000 	stmdagt	r6, {}	; <UNPREDICTABLE>
     528:	02000003 	andeq	r0, r0, #3
     52c:	0000a20a 	andeq	sl, r0, sl, lsl #4
     530:	53060000 	movwpl	r0, #24576	; 0x6000
     534:	02000003 	andeq	r0, r0, #3
     538:	0000a20b 	andeq	sl, r0, fp, lsl #4
     53c:	59060400 	stmdbpl	r6, {sl}
     540:	02000003 	andeq	r0, r0, #3
     544:	0000a20c 	andeq	sl, r0, ip, lsl #4
     548:	70040800 	andvc	r0, r4, r0, lsl #16
     54c:	0d020078 	stceq	0, cr0, [r2, #-480]	; 0xfffffe20
     550:	000000a9 	andeq	r0, r0, r9, lsr #1
     554:	0407000c 	streq	r0, [r7], #-12
     558:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     55c:	005b0800 	subseq	r0, fp, r0, lsl #16
     560:	00b90000 	adcseq	r0, r9, r0
     564:	25090000 	strcs	r0, [r9, #-0]
     568:	13000000 	movwne	r0, #0
     56c:	03230500 			; <UNDEFINED> instruction: 0x03230500
     570:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     574:	000000c4 	andeq	r0, r0, r4, asr #1
     578:	0066040a 	rsbeq	r0, r6, sl, lsl #8
     57c:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
     580:	24000003 	strcs	r0, [r0], #-3
     584:	01431002 	cmpeq	r3, r2
     588:	67040000 	strvs	r0, [r4, -r0]
     58c:	02006f65 	andeq	r6, r0, #404	; 0x194
     590:	0000b911 	andeq	fp, r0, r1, lsl r9
     594:	eb060000 	bl	18059c <startup-0x1fe7fa64>
     598:	02000003 	andeq	r0, r0, #3
     59c:	0000a212 	andeq	sl, r0, r2, lsl r2
     5a0:	f0060400 			; <UNDEFINED> instruction: 0xf0060400
     5a4:	02000003 	andeq	r0, r0, #3
     5a8:	0000a212 	andeq	sl, r0, r2, lsl r2
     5ac:	2d060800 	stccs	8, cr0, [r6, #-0]
     5b0:	02000003 	andeq	r0, r0, #3
     5b4:	0000a213 	andeq	sl, r0, r3, lsl r2
     5b8:	32060c00 	andcc	r0, r6, #0, 24
     5bc:	02000003 	andeq	r0, r0, #3
     5c0:	0000a213 	andeq	sl, r0, r3, lsl r2
     5c4:	b2061000 	andlt	r1, r6, #0
     5c8:	02000003 	andeq	r0, r0, #3
     5cc:	00015414 	andeq	r5, r1, r4, lsl r4
     5d0:	fc061400 	stc2	4, cr1, [r6], {-0}
     5d4:	02000001 	andeq	r0, r0, #1
     5d8:	00015415 	andeq	r5, r1, r5, lsl r4
     5dc:	37061800 	strcc	r1, [r6, -r0, lsl #16]
     5e0:	02000003 	andeq	r0, r0, #3
     5e4:	00015416 	andeq	r5, r1, r6, lsl r4
     5e8:	49061c00 	stmdbmi	r6, {sl, fp, ip}
     5ec:	02000003 	andeq	r0, r0, #3
     5f0:	00016f17 	andeq	r6, r1, r7, lsl pc
     5f4:	0b002000 	bleq	85fc <startup-0x1fff7a04>
     5f8:	0000014e 	andeq	r0, r0, lr, asr #2
     5fc:	00014e0c 	andeq	r4, r1, ip, lsl #28
     600:	040a0000 	streq	r0, [sl], #-0
     604:	000000ca 	andeq	r0, r0, sl, asr #1
     608:	0143040a 	cmpeq	r3, sl, lsl #8
     60c:	6f0b0000 	svcvs	0x000b0000
     610:	0c000001 	stceq	0, cr0, [r0], {1}
     614:	0000014e 	andeq	r0, r0, lr, asr #2
     618:	0000a20c 	andeq	sl, r0, ip, lsl #4
     61c:	00a20c00 	adceq	r0, r2, r0, lsl #24
     620:	0a000000 	beq	628 <startup-0x1ffff9d8>
     624:	00015a04 	andeq	r5, r1, r4, lsl #20
     628:	03fd0500 	mvnseq	r0, #0, 10
     62c:	18020000 	stmdane	r2, {}	; <UNPREDICTABLE>
     630:	0000014e 	andeq	r0, r0, lr, asr #2
     634:	0003d20d 	andeq	sp, r3, sp, lsl #4
     638:	140e0100 	strne	r0, [lr], #-256	; 0xffffff00
     63c:	5c200007 	stcpl	0, cr0, [r0], #-28	; 0xffffffe4
     640:	01000000 	mrseq	r0, (UNDEF: 0)
     644:	0001cf9c 	muleq	r1, ip, pc	; <UNPREDICTABLE>
     648:	006f0e00 	rsbeq	r0, pc, r0, lsl #28
     64c:	01750e01 	cmneq	r5, r1, lsl #28
     650:	91020000 	mrsls	r0, (UNDEF: 2)
     654:	071c0f6c 	ldreq	r0, [ip, -ip, ror #30]
     658:	004c2000 	subeq	r2, ip, r0
     65c:	69100000 	ldmdbvs	r0, {}	; <UNPREDICTABLE>
     660:	a20f0100 	andge	r0, pc, #0, 2
     664:	02000000 	andeq	r0, r0, #0
     668:	220f7491 	andcs	r7, pc, #-1862270976	; 0x91000000
     66c:	34200007 	strtcc	r0, [r0], #-7
     670:	11000000 	mrsne	r0, (UNDEF: 0)
     674:	000001c5 	andeq	r0, r0, r5, asr #3
     678:	00a20a01 	adceq	r0, r2, r1, lsl #20
     67c:	00120000 	andseq	r0, r2, r0
     680:	0d000000 	stceq	0, cr0, [r0, #-0]
     684:	000003df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     688:	06b80801 	ldrteq	r0, [r8], r1, lsl #16
     68c:	005c2000 	subseq	r2, ip, r0
     690:	9c010000 	stcls	0, cr0, [r1], {-0}
     694:	0000021e 	andeq	r0, r0, lr, lsl r2
     698:	01006f0e 	tsteq	r0, lr, lsl #30
     69c:	00017508 	andeq	r7, r1, r8, lsl #10
     6a0:	6c910200 	lfmvs	f0, 4, [r1], {0}
     6a4:	0006c00f 	andeq	ip, r6, pc
     6a8:	00004c20 	andeq	r4, r0, r0, lsr #24
     6ac:	00691000 	rsbeq	r1, r9, r0
     6b0:	00a20901 	adceq	r0, r2, r1, lsl #18
     6b4:	91020000 	mrsls	r0, (UNDEF: 2)
     6b8:	06c60f74 			; <UNDEFINED> instruction: 0x06c60f74
     6bc:	00342000 	eorseq	r2, r4, r0
     6c0:	c5110000 	ldrgt	r0, [r1, #-0]
     6c4:	01000001 	tsteq	r0, r1
     6c8:	0000a20a 	andeq	sl, r0, sl, lsl #4
     6cc:	00001200 	andeq	r1, r0, r0, lsl #4
     6d0:	b7130000 	ldrlt	r0, [r3, -r0]
     6d4:	01000003 	tsteq	r0, r3
     6d8:	00069803 	andeq	r9, r6, r3, lsl #16
     6dc:	00002020 	andeq	r2, r0, r0, lsr #32
     6e0:	0e9c0100 	fmleqe	f0, f4, f0
     6e4:	0301006f 	movweq	r0, #4207	; 0x106f
     6e8:	00000175 	andeq	r0, r0, r5, ror r1
     6ec:	14749102 	ldrbtne	r9, [r4], #-258	; 0xfffffefe
     6f0:	000003a4 	andeq	r0, r0, r4, lsr #7
     6f4:	00a20301 	adceq	r0, r2, r1, lsl #6
     6f8:	91020000 	mrsls	r0, (UNDEF: 2)
     6fc:	03ab1470 			; <UNDEFINED> instruction: 0x03ab1470
     700:	03010000 	movweq	r0, #4096	; 0x1000
     704:	000000a2 	andeq	r0, r0, r2, lsr #1
     708:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     70c:	0000d200 	andeq	sp, r0, r0, lsl #4
     710:	e0000400 	and	r0, r0, r0, lsl #8
     714:	04000002 	streq	r0, [r0], #-2
     718:	00001801 	andeq	r1, r0, r1, lsl #16
     71c:	04190c00 	ldreq	r0, [r9], #-3072	; 0xfffff400
     720:	01180000 	tsteq	r8, r0
     724:	07700000 	ldrbeq	r0, [r0, -r0]!
     728:	003c2000 	eorseq	r2, ip, r0
     72c:	02840000 	addeq	r0, r4, #0
     730:	04020000 	streq	r0, [r2], #-0
     734:	00063a07 	andeq	r3, r6, r7, lsl #20
     738:	07020200 	streq	r0, [r2, -r0, lsl #4]
     73c:	00000105 	andeq	r0, r0, r5, lsl #2
     740:	be080102 	adflte	f0, f0, f2
     744:	03000000 	movweq	r0, #0
     748:	00000099 	muleq	r0, r9, r0
     74c:	00520402 	subseq	r0, r2, r2, lsl #8
     750:	03050000 	movweq	r0, #20480	; 0x5000
     754:	20000ed0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
     758:	69050404 	stmdbvs	r5, {r2, sl}
     75c:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
     760:	0000004b 	andeq	r0, r0, fp, asr #32
     764:	0000f003 	andeq	pc, r0, r3
     768:	52050200 	andpl	r0, r5, #0, 4
     76c:	05000000 	streq	r0, [r0, #-0]
     770:	000edc03 	andeq	sp, lr, r3, lsl #24
     774:	00cc0320 	sbceq	r0, ip, r0, lsr #6
     778:	06020000 	streq	r0, [r2], -r0
     77c:	00000052 	andeq	r0, r0, r2, asr r0
     780:	0ed80305 	cdpeq	3, 13, cr0, cr8, cr5, {0}
     784:	e1032000 	mrs	r2, (UNDEF: 3)
     788:	02000000 	andeq	r0, r0, #0
     78c:	00005207 	andeq	r5, r0, r7, lsl #4
     790:	d4030500 	strle	r0, [r3], #-1280	; 0xfffffb00
     794:	0320000e 			; <UNDEFINED> instruction: 0x0320000e
     798:	0000017f 	andeq	r0, r0, pc, ror r1
     79c:	00520802 	subseq	r0, r2, r2, lsl #16
     7a0:	03050000 	movweq	r0, #20480	; 0x5000
     7a4:	20000ec8 	andcs	r0, r0, r8, asr #29
     7a8:	0000fd03 	andeq	pc, r0, r3, lsl #26
     7ac:	52090200 	andpl	r0, r9, #0, 4
     7b0:	05000000 	streq	r0, [r0, #-0]
     7b4:	000ecc03 	andeq	ip, lr, r3, lsl #24
     7b8:	04050620 	streq	r0, [r5], #-1568	; 0xfffff9e0
     7bc:	04010000 	streq	r0, [r1], #-0
     7c0:	20000770 	andcs	r0, r0, r0, ror r7
     7c4:	0000003c 	andeq	r0, r0, ip, lsr r0
     7c8:	8c079c01 	stchi	12, cr9, [r7], {1}
     7cc:	04200007 	strteq	r0, [r0], #-7
     7d0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     7d4:	000000d8 	ldrdeq	r0, [r0], -r8
     7d8:	004b0b01 	subeq	r0, fp, r1, lsl #22
     7dc:	00090000 	andeq	r0, r9, r0
     7e0:	c6000000 	strgt	r0, [r0], -r0
     7e4:	04000003 	streq	r0, [r0], #-3
     7e8:	00035900 	andeq	r5, r3, r0, lsl #18
     7ec:	18010400 	stmdane	r1, {sl}
     7f0:	0c000000 	stceq	0, cr0, [r0], {-0}
     7f4:	00000505 	andeq	r0, r0, r5, lsl #10
     7f8:	00000118 	andeq	r0, r0, r8, lsl r1
     7fc:	200007ac 	andcs	r0, r0, ip, lsr #15
     800:	000002a4 	andeq	r0, r0, r4, lsr #5
     804:	000002fa 	strdeq	r0, [r0], -sl
     808:	21021802 	tstcs	r2, r2, lsl #16
     80c:	000000b2 	strheq	r0, [r0], -r2
     810:	0002e503 	andeq	lr, r2, r3, lsl #10
     814:	b2220200 	eorlt	r0, r2, #0, 4
     818:	00000000 	andeq	r0, r0, r0
     81c:	0001ac03 	andeq	sl, r1, r3, lsl #24
     820:	b9230200 	stmdblt	r3!, {r9}
     824:	04000000 	streq	r0, [r0], #-0
     828:	00020e03 	andeq	r0, r2, r3, lsl #28
     82c:	b9240200 	stmdblt	r4!, {r9}
     830:	06000000 	streq	r0, [r0], -r0
     834:	0002aa03 	andeq	sl, r2, r3, lsl #20
     838:	b2250200 	eorlt	r0, r5, #0, 4
     83c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     840:	00022c03 	andeq	r2, r2, r3, lsl #24
     844:	b2260200 	eorlt	r0, r6, #0, 4
     848:	0c000000 	stceq	0, cr0, [r0], {-0}
     84c:	0002b203 	andeq	fp, r2, r3, lsl #4
     850:	c0270200 	eorgt	r0, r7, r0, lsl #4
     854:	10000000 	andne	r0, r0, r0
     858:	0002a203 	andeq	sl, r2, r3, lsl #4
     85c:	c0280200 	eorgt	r0, r8, r0, lsl #4
     860:	11000000 	mrsne	r0, (UNDEF: 0)
     864:	00020203 	andeq	r0, r2, r3, lsl #4
     868:	b9290200 	stmdblt	r9!, {r9}
     86c:	12000000 	andne	r0, r0, #0
     870:	00025b03 	andeq	r5, r2, r3, lsl #22
     874:	c02a0200 	eorgt	r0, sl, r0, lsl #4
     878:	14000000 	strne	r0, [r0], #-0
     87c:	0001cb03 	andeq	ip, r1, r3, lsl #22
     880:	c02b0200 	eorgt	r0, fp, r0, lsl #4
     884:	15000000 	strne	r0, [r0, #-0]
     888:	00024f03 	andeq	r4, r2, r3, lsl #30
     88c:	b92c0200 	stmdblt	ip!, {r9}
     890:	16000000 	strne	r0, [r0], -r0
     894:	07040400 	streq	r0, [r4, -r0, lsl #8]
     898:	0000063a 	andeq	r0, r0, sl, lsr r6
     89c:	05070204 	streq	r0, [r7, #-516]	; 0xfffffdfc
     8a0:	04000001 	streq	r0, [r0], #-1
     8a4:	00be0801 	adcseq	r0, lr, r1, lsl #16
     8a8:	e6050000 	str	r0, [r5], -r0
     8ac:	02000001 	andeq	r0, r0, #1
     8b0:	0000252d 	andeq	r2, r0, sp, lsr #10
     8b4:	00990600 	addseq	r0, r9, r0, lsl #12
     8b8:	04030000 	streq	r0, [r3], #-0
     8bc:	000000ea 	andeq	r0, r0, sl, ror #1
     8c0:	0ed00305 	cdpeq	3, 13, cr0, cr0, cr5, {0}
     8c4:	04072000 	streq	r2, [r7], #-0
     8c8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     8cc:	00e30800 	rsceq	r0, r3, r0, lsl #16
     8d0:	f0060000 			; <UNDEFINED> instruction: 0xf0060000
     8d4:	03000000 	movweq	r0, #0
     8d8:	0000ea05 	andeq	lr, r0, r5, lsl #20
     8dc:	dc030500 	cfstr32le	mvfx0, [r3], {-0}
     8e0:	0620000e 	strteq	r0, [r0], -lr
     8e4:	000000cc 	andeq	r0, r0, ip, asr #1
     8e8:	00ea0603 	rsceq	r0, sl, r3, lsl #12
     8ec:	03050000 	movweq	r0, #20480	; 0x5000
     8f0:	20000ed8 	ldrdcs	r0, [r0], -r8
     8f4:	0000e106 	andeq	lr, r0, r6, lsl #2
     8f8:	ea070300 	b	1c1500 <startup-0x1fe3eb00>
     8fc:	05000000 	streq	r0, [r0, #-0]
     900:	000ed403 	andeq	sp, lr, r3, lsl #8
     904:	017f0620 	cmneq	pc, r0, lsr #12
     908:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
     90c:	000000ea 	andeq	r0, r0, sl, ror #1
     910:	0ec80305 	cdpeq	3, 12, cr0, cr8, cr5, {0}
     914:	fd062000 	stc2	0, cr2, [r6, #-0]
     918:	03000000 	movweq	r0, #0
     91c:	0000ea09 	andeq	lr, r0, r9, lsl #20
     920:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
     924:	0920000e 	stmdbeq	r0!, {r1, r2, r3}
     928:	00000578 	andeq	r0, r0, r8, ror r5
     92c:	0a2c6301 	beq	b19538 <startup-0x1f4e6ac8>
     930:	00242000 	eoreq	r2, r4, r0
     934:	9c010000 	stcls	0, cr0, [r1], {-0}
     938:	00000173 	andeq	r0, r0, r3, ror r1
     93c:	0100630a 	tsteq	r0, sl, lsl #6
     940:	0000c063 	andeq	ip, r0, r3, rrx
     944:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     948:	00000c0b 	andeq	r0, r0, fp, lsl #24
     94c:	e33b0100 	teq	fp, #0, 2
     950:	0c000000 	stceq	0, cr0, [r0], {-0}
     954:	e9090000 	stmdb	r9, {}	; <UNPREDICTABLE>
     958:	01000004 	tsteq	r0, r4
     95c:	0009f05a 	andeq	pc, r9, sl, asr r0	; <UNPREDICTABLE>
     960:	00003c20 	andeq	r3, r0, r0, lsr #24
     964:	bc9c0100 	ldflts	f0, [ip], {0}
     968:	0a000001 	beq	974 <startup-0x1ffff68c>
     96c:	5a010078 	bpl	40b54 <startup-0x1ffbf4ac>
     970:	000000b2 	strheq	r0, [r0], -r2
     974:	0a6c9102 	beq	1b24d84 <startup-0x1e4db27c>
     978:	5a010079 	bpl	40b64 <startup-0x1ffbf49c>
     97c:	000000b2 	strheq	r0, [r0], -r2
     980:	0d689102 	stfeqp	f1, [r8, #-8]!
     984:	000004d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     988:	00b25b01 	adcseq	r5, r2, r1, lsl #22
     98c:	91020000 	mrsls	r0, (UNDEF: 2)
     990:	000c0b74 	andeq	r0, ip, r4, ror fp
     994:	3b010000 	blcc	4099c <startup-0x1ffbf664>
     998:	000000e3 	andeq	r0, r0, r3, ror #1
     99c:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
     9a0:	0000045e 	andeq	r0, r0, lr, asr r4
     9a4:	09d65301 	ldmibeq	r6, {r0, r8, r9, ip, lr}^
     9a8:	001a2000 	andseq	r2, sl, r0
     9ac:	9c010000 	stcls	0, cr0, [r1], {-0}
     9b0:	0004f609 	andeq	pc, r4, r9, lsl #12
     9b4:	c04e0100 	subgt	r0, lr, r0, lsl #2
     9b8:	16200009 	strtne	r0, [r0], -r9
     9bc:	01000000 	mrseq	r0, (UNDEF: 0)
     9c0:	0001f09c 	muleq	r1, ip, r0
     9c4:	000c0b00 	andeq	r0, ip, r0, lsl #22
     9c8:	3b010000 	blcc	409d0 <startup-0x1ffbf630>
     9cc:	000000e3 	andeq	r0, r0, r3, ror #1
     9d0:	0900000c 	stmdbeq	r0, {r2, r3}
     9d4:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
     9d8:	09aa4901 	stmibeq	sl!, {r0, r8, fp, lr}
     9dc:	00162000 	andseq	r2, r6, r0
     9e0:	9c010000 	stcls	0, cr0, [r1], {-0}
     9e4:	00000213 	andeq	r0, r0, r3, lsl r2
     9e8:	0000000b 	andeq	r0, r0, fp
     9ec:	e3410100 	movt	r0, #4352	; 0x1100
     9f0:	0c000000 	stceq	0, cr0, [r0], {-0}
     9f4:	4e090000 	cdpmi	0, 0, cr0, cr9, cr0, {0}
     9f8:	01000004 	tsteq	r0, r4
     9fc:	00099444 	andeq	r9, r9, r4, asr #8
     a00:	00001620 	andeq	r1, r0, r0, lsr #12
     a04:	369c0100 	ldrcc	r0, [ip], r0, lsl #2
     a08:	0b000002 	bleq	a18 <startup-0x1ffff5e8>
     a0c:	0000000c 	andeq	r0, r0, ip
     a10:	00e33b01 	rsceq	r3, r3, r1, lsl #22
     a14:	000c0000 	andeq	r0, ip, r0
     a18:	05890f00 	streq	r0, [r9, #3840]	; 0xf00
     a1c:	3f010000 	svccc	0x00010000
     a20:	2000097e 	andcs	r0, r0, lr, ror r9
     a24:	00000016 	andeq	r0, r0, r6, lsl r0
     a28:	02599c01 	subseq	r9, r9, #256	; 0x100
     a2c:	000b0000 	andeq	r0, fp, r0
     a30:	01000000 	mrseq	r0, (UNDEF: 0)
     a34:	0000e341 	andeq	lr, r0, r1, asr #6
     a38:	00000c00 	andeq	r0, r0, r0, lsl #24
     a3c:	00047b09 	andeq	r7, r4, r9, lsl #22
     a40:	48390100 	ldmdami	r9!, {r8}
     a44:	36200009 	strtcc	r0, [r0], -r9
     a48:	01000000 	mrseq	r0, (UNDEF: 0)
     a4c:	00028a9c 	muleq	r2, ip, sl
     a50:	03061000 	movweq	r1, #24576	; 0x6000
     a54:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
     a58:	000000c0 	andeq	r0, r0, r0, asr #1
     a5c:	0b779102 	bleq	1de4e6c <startup-0x1e21b194>
     a60:	0000000c 	andeq	r0, r0, ip
     a64:	00e33b01 	rsceq	r3, r3, r1, lsl #22
     a68:	000c0000 	andeq	r0, ip, r0
     a6c:	05681100 	strbeq	r1, [r8, #-256]!	; 0xffffff00
     a70:	32010000 	andcc	r0, r1, #0
     a74:	000000c0 	andeq	r0, r0, r0, asr #1
     a78:	20000910 	andcs	r0, r0, r0, lsl r9
     a7c:	00000038 	andeq	r0, r0, r8, lsr r0
     a80:	02b19c01 	adcseq	r9, r1, #256	; 0x100
     a84:	72120000 	andsvc	r0, r2, #0
     a88:	35010076 	strcc	r0, [r1, #-118]	; 0xffffff8a
     a8c:	000000c0 	andeq	r0, r0, r0, asr #1
     a90:	006f9102 	rsbeq	r9, pc, r2, lsl #2
     a94:	00046911 	andeq	r6, r4, r1, lsl r9
     a98:	c02a0100 	eorgt	r0, sl, r0, lsl #2
     a9c:	d2000000 	andle	r0, r0, #0
     aa0:	3e200008 	cdpcc	0, 2, cr0, cr0, cr8, {0}
     aa4:	01000000 	mrseq	r0, (UNDEF: 0)
     aa8:	0002d89c 	muleq	r2, ip, r8
     aac:	76721200 	ldrbtvc	r1, [r2], -r0, lsl #4
     ab0:	c02e0100 	eorgt	r0, lr, r0, lsl #2
     ab4:	02000000 	andeq	r0, r0, #0
     ab8:	09006f91 	stmdbeq	r0, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
     abc:	000004d8 	ldrdeq	r0, [r0], -r8
     ac0:	08a82401 	stmiaeq	r8!, {r0, sl, sp}
     ac4:	002a2000 	eoreq	r2, sl, r0
     ac8:	9c010000 	stcls	0, cr0, [r1], {-0}
     acc:	000002fc 	strdeq	r0, [r0], -ip
     ad0:	0001c010 	andeq	ip, r1, r0, lsl r0
     ad4:	c0240100 	eorgt	r0, r4, r0, lsl #2
     ad8:	02000000 	andeq	r0, r0, #0
     adc:	09007791 	stmdbeq	r0, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
     ae0:	000004c0 	andeq	r0, r0, r0, asr #9
     ae4:	08841f01 	stmeq	r4, {r0, r8, r9, sl, fp, ip}
     ae8:	00242000 	eoreq	r2, r4, r0
     aec:	9c010000 	stcls	0, cr0, [r1], {-0}
     af0:	00000320 	andeq	r0, r0, r0, lsr #6
     af4:	00030610 	andeq	r0, r3, r0, lsl r6
     af8:	c01f0100 	andsgt	r0, pc, r0, lsl #2
     afc:	02000000 	andeq	r0, r0, #0
     b00:	11007791 			; <UNDEFINED> instruction: 0x11007791
     b04:	00000489 	andeq	r0, r0, r9, lsl #9
     b08:	00c01601 	sbceq	r1, r0, r1, lsl #12
     b0c:	08500000 	ldmdaeq	r0, {}^	; <UNPREDICTABLE>
     b10:	00342000 	eorseq	r2, r4, r0
     b14:	9c010000 	stcls	0, cr0, [r1], {-0}
     b18:	00000358 	andeq	r0, r0, r8, asr r3
     b1c:	0000a613 	andeq	sl, r0, r3, lsl r6
     b20:	e30e0100 	movw	r0, #57600	; 0xe100
     b24:	4a000000 	bmi	b2c <startup-0x1ffff4d4>
     b28:	0c000003 	stceq	0, cr0, [r0], {3}
     b2c:	76721200 	ldrbtvc	r1, [r2], -r0, lsl #4
     b30:	c01a0100 	andsgt	r0, sl, r0, lsl #2
     b34:	02000000 	andeq	r0, r0, #0
     b38:	09007791 	stmdbeq	r0, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
     b3c:	00000551 	andeq	r0, r0, r1, asr r5
     b40:	08180d01 	ldmdaeq	r8, {r0, r8, sl, fp}
     b44:	00382000 	eorseq	r2, r8, r0
     b48:	9c010000 	stcls	0, cr0, [r1], {-0}
     b4c:	00000389 	andeq	r0, r0, r9, lsl #7
     b50:	00030610 	andeq	r0, r3, r0, lsl r6
     b54:	c00d0100 	andgt	r0, sp, r0, lsl #2
     b58:	02000000 	andeq	r0, r0, #0
     b5c:	a60b7791 			; <UNDEFINED> instruction: 0xa60b7791
     b60:	01000000 	mrseq	r0, (UNDEF: 0)
     b64:	0000e30e 	andeq	lr, r0, lr, lsl #6
     b68:	00000c00 	andeq	r0, r0, r0, lsl #24
     b6c:	00053c14 	andeq	r3, r5, r4, lsl ip
     b70:	dc090100 	stfles	f0, [r9], {-0}
     b74:	3c200007 	stccc	0, cr0, [r0], #-28	; 0xffffffe4
     b78:	01000000 	mrseq	r0, (UNDEF: 0)
     b7c:	0003ab9c 	muleq	r3, ip, fp
     b80:	00780a00 	rsbseq	r0, r8, r0, lsl #20
     b84:	00c00901 	sbceq	r0, r0, r1, lsl #18
     b88:	91020000 	mrsls	r0, (UNDEF: 2)
     b8c:	9f150077 	svcls	0x00150077
     b90:	01000004 	tsteq	r0, r4
     b94:	0007ac05 	andeq	sl, r7, r5, lsl #24
     b98:	00003020 	andeq	r3, r0, r0, lsr #32
     b9c:	0a9c0100 	beq	fe700fa4 <obstacle+0xde700038>
     ba0:	05010078 	streq	r0, [r1, #-120]	; 0xffffff88
     ba4:	000000c0 	andeq	r0, r0, r0, asr #1
     ba8:	00779102 	rsbseq	r9, r7, r2, lsl #2
     bac:	0001d500 	andeq	sp, r1, r0, lsl #10
     bb0:	c1000400 	tstgt	r0, r0, lsl #8
     bb4:	04000004 	streq	r0, [r0], #-4
     bb8:	00001801 	andeq	r1, r0, r1, lsl #16
     bbc:	05b50c00 	ldreq	r0, [r5, #3072]!	; 0xc00
     bc0:	01180000 	tsteq	r8, r0
     bc4:	0a500000 	beq	1400bcc <startup-0x1ebff434>
     bc8:	00e82000 	rsceq	r2, r8, r0
     bcc:	03d10000 	bicseq	r0, r1, #0
     bd0:	04020000 	streq	r0, [r2], #-0
     bd4:	00063a07 	andeq	r3, r6, r7, lsl #20
     bd8:	07020200 	streq	r0, [r2, -r0, lsl #4]
     bdc:	00000105 	andeq	r0, r0, r5, lsl #2
     be0:	be080102 	adflte	f0, f0, f2
     be4:	03000000 	movweq	r0, #0
     be8:	0000033c 	andeq	r0, r0, ip, lsr r3
     bec:	5b040202 	blpl	1013fc <startup-0x1fefec04>
     bf0:	04000000 	streq	r0, [r0], #-0
     bf4:	05020078 	streq	r0, [r2, #-120]	; 0xffffff88
     bf8:	00000033 	andeq	r0, r0, r3, lsr r0
     bfc:	00790400 	rsbseq	r0, r9, r0, lsl #8
     c00:	00330602 	eorseq	r0, r3, r2, lsl #12
     c04:	00010000 	andeq	r0, r1, r0
     c08:	00034305 	andeq	r4, r3, r5, lsl #6
     c0c:	3a070200 	bcc	1c1414 <startup-0x1fe3ebec>
     c10:	03000000 	movweq	r0, #0
     c14:	0000035f 	andeq	r0, r0, pc, asr r3
     c18:	a2090234 	andge	r0, r9, #52, 4	; 0x40000003
     c1c:	06000000 	streq	r0, [r0], -r0
     c20:	000003c8 	andeq	r0, r0, r8, asr #7
     c24:	00a20a02 	adceq	r0, r2, r2, lsl #20
     c28:	06000000 	streq	r0, [r0], -r0
     c2c:	00000353 	andeq	r0, r0, r3, asr r3
     c30:	00a20b02 	adceq	r0, r2, r2, lsl #22
     c34:	06040000 	streq	r0, [r4], -r0
     c38:	00000359 	andeq	r0, r0, r9, asr r3
     c3c:	00a20c02 	adceq	r0, r2, r2, lsl #24
     c40:	04080000 	streq	r0, [r8], #-0
     c44:	02007870 	andeq	r7, r0, #112, 16	; 0x700000
     c48:	0000a90d 	andeq	sl, r0, sp, lsl #18
     c4c:	07000c00 	streq	r0, [r0, -r0, lsl #24]
     c50:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     c54:	5b080074 	blpl	200e2c <startup-0x1fdff1d4>
     c58:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
     c5c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     c60:	00000025 	andeq	r0, r0, r5, lsr #32
     c64:	24050013 	strcs	r0, [r5], #-19	; 0xffffffed
     c68:	02000003 	andeq	r0, r0, #3
     c6c:	0000660e 	andeq	r6, r0, lr, lsl #12
     c70:	03230500 			; <UNDEFINED> instruction: 0x03230500
     c74:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     c78:	000000cf 	andeq	r0, r0, pc, asr #1
     c7c:	0066040a 	rsbeq	r0, r6, sl, lsl #8
     c80:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
     c84:	24000003 	strcs	r0, [r0], #-3
     c88:	014e1002 	cmpeq	lr, r2
     c8c:	67040000 	strvs	r0, [r4, -r0]
     c90:	02006f65 	andeq	r6, r0, #404	; 0x194
     c94:	0000c411 	andeq	ip, r0, r1, lsl r4
     c98:	eb060000 	bl	180ca0 <startup-0x1fe7f360>
     c9c:	02000003 	andeq	r0, r0, #3
     ca0:	0000a212 	andeq	sl, r0, r2, lsl r2
     ca4:	f0060400 			; <UNDEFINED> instruction: 0xf0060400
     ca8:	02000003 	andeq	r0, r0, #3
     cac:	0000a212 	andeq	sl, r0, r2, lsl r2
     cb0:	2d060800 	stccs	8, cr0, [r6, #-0]
     cb4:	02000003 	andeq	r0, r0, #3
     cb8:	0000a213 	andeq	sl, r0, r3, lsl r2
     cbc:	32060c00 	andcc	r0, r6, #0, 24
     cc0:	02000003 	andeq	r0, r0, #3
     cc4:	0000a213 	andeq	sl, r0, r3, lsl r2
     cc8:	b2061000 	andlt	r1, r6, #0
     ccc:	02000003 	andeq	r0, r0, #3
     cd0:	00015f14 	andeq	r5, r1, r4, lsl pc
     cd4:	fc061400 	stc2	4, cr1, [r6], {-0}
     cd8:	02000001 	andeq	r0, r0, #1
     cdc:	00015f15 	andeq	r5, r1, r5, lsl pc
     ce0:	37061800 	strcc	r1, [r6, -r0, lsl #16]
     ce4:	02000003 	andeq	r0, r0, #3
     ce8:	00015f16 	andeq	r5, r1, r6, lsl pc
     cec:	49061c00 	stmdbmi	r6, {sl, fp, ip}
     cf0:	02000003 	andeq	r0, r0, #3
     cf4:	00017a17 	andeq	r7, r1, r7, lsl sl
     cf8:	0b002000 	bleq	8d00 <startup-0x1fff7300>
     cfc:	00000159 	andeq	r0, r0, r9, asr r1
     d00:	0001590c 	andeq	r5, r1, ip, lsl #18
     d04:	040a0000 	streq	r0, [sl], #-0
     d08:	000000d5 	ldrdeq	r0, [r0], -r5
     d0c:	014e040a 	cmpeq	lr, sl, lsl #8
     d10:	7a0b0000 	bvc	2c0d18 <startup-0x1fd3f2e8>
     d14:	0c000001 	stceq	0, cr0, [r0], {1}
     d18:	00000159 	andeq	r0, r0, r9, asr r1
     d1c:	0000a20c 	andeq	sl, r0, ip, lsl #4
     d20:	00a20c00 	adceq	r0, r2, r0, lsl #24
     d24:	0a000000 	beq	d2c <startup-0x1ffff2d4>
     d28:	00016504 	andeq	r6, r1, r4, lsl #10
     d2c:	03fe0500 	mvnseq	r0, #0, 10
     d30:	18020000 	stmdane	r2, {}	; <UNPREDICTABLE>
     d34:	000000d5 	ldrdeq	r0, [r0], -r5
     d38:	0003fd05 	andeq	pc, r3, r5, lsl #26
     d3c:	59180200 	ldmdbpl	r8, {r9}
     d40:	0d000001 	stceq	0, cr0, [r0, #-4]
     d44:	000005a2 	andeq	r0, r0, r2, lsr #11
     d48:	00b90301 	adcseq	r0, r9, r1, lsl #6
     d4c:	03050000 	movweq	r0, #20480	; 0x5000
     d50:	20000ee0 	andcs	r0, r0, r0, ror #29
     d54:	0005b00d 	andeq	fp, r5, sp
     d58:	80290100 	eorhi	r0, r9, r0, lsl #2
     d5c:	05000001 	streq	r0, [r0, #-1]
     d60:	000f1403 	andeq	r1, pc, r3, lsl #8
     d64:	05960e20 	ldreq	r0, [r6, #3616]	; 0xe20
     d68:	10010000 	andne	r0, r1, r0
     d6c:	20000a50 	andcs	r0, r0, r0, asr sl
     d70:	000000e8 	andeq	r0, r0, r8, ror #1
     d74:	9b0f9c01 	blls	3e7d80 <startup-0x1fc18280>
     d78:	01000005 	tsteq	r0, r5
     d7c:	00018b10 	andeq	r8, r1, r0, lsl fp
     d80:	6c910200 	lfmvs	f0, 4, [r1], {0}
     d84:	0c310000 	ldceq	0, cr0, [r1], #-0
     d88:	00040000 	andeq	r0, r4, r0
     d8c:	00000588 	andeq	r0, r0, r8, lsl #11
     d90:	00180104 	andseq	r0, r8, r4, lsl #2
     d94:	1b0c0000 	blne	300d9c <startup-0x1fcff264>
     d98:	18000007 	stmdane	r0, {r0, r1, r2}
     d9c:	00000001 	andeq	r0, r0, r1
     da0:	00000000 	andeq	r0, r0, r0
     da4:	62000000 	andvs	r0, r0, #0
     da8:	02000004 	andeq	r0, r0, #4
     dac:	00c00601 	sbceq	r0, r0, r1, lsl #12
     db0:	01020000 	mrseq	r0, (UNDEF: 2)
     db4:	0000be08 	andeq	fp, r0, r8, lsl #28
     db8:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     dbc:	00000849 	andeq	r0, r0, r9, asr #16
     dc0:	05070202 	streq	r0, [r7, #-514]	; 0xfffffdfe
     dc4:	02000001 	andeq	r0, r0, #1
     dc8:	06780504 	ldrbteq	r0, [r8], -r4, lsl #10
     dcc:	04020000 	streq	r0, [r2], #-0
     dd0:	00063507 	andeq	r3, r6, r7, lsl #10
     dd4:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     dd8:	00000673 	andeq	r0, r0, r3, ror r6
     ddc:	30070802 	andcc	r0, r7, r2, lsl #16
     de0:	03000006 	movweq	r0, #6
     de4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     de8:	5d040074 	stcpl	0, cr0, [r4, #-464]	; 0xfffffe30
     dec:	02000000 	andeq	r0, r0, #0
     df0:	063a0704 	ldrteq	r0, [sl], -r4, lsl #14
     df4:	04050000 	streq	r0, [r5], #-0
     df8:	0007d306 	andeq	sp, r7, r6, lsl #6
     dfc:	7d220200 	sfmvc	f0, 4, [r2, #-0]
     e00:	07000000 	streq	r0, [r0, -r0]
     e04:	00008304 	andeq	r8, r0, r4, lsl #6
     e08:	08f70800 	ldmeq	r7!, {fp}^
     e0c:	1c060000 	stcne	0, cr0, [r6], {-0}
     e10:	03000008 	movweq	r0, #8
     e14:	0000412c 	andeq	r4, r0, ip, lsr #2
     e18:	090c0600 	stmdbeq	ip, {r9, sl}
     e1c:	72030000 	andvc	r0, r3, #0
     e20:	00000041 	andeq	r0, r0, r1, asr #32
     e24:	0007db09 	andeq	sp, r7, r9, lsl #22
     e28:	01650400 	cmneq	r5, r0, lsl #8
     e2c:	00000069 	andeq	r0, r0, r9, rrx
     e30:	a603040a 	strge	r0, [r3], -sl, lsl #8
     e34:	000000c9 	andeq	r0, r0, r9, asr #1
     e38:	0007cd0b 	andeq	ip, r7, fp, lsl #26
     e3c:	9ea80300 	cdpls	3, 10, cr0, cr8, cr0, {0}
     e40:	0b000000 	bleq	e48 <startup-0x1ffff1b8>
     e44:	0000077f 	andeq	r0, r0, pc, ror r7
     e48:	00c9a903 	sbceq	sl, r9, r3, lsl #18
     e4c:	0c000000 	stceq	0, cr0, [r0], {-0}
     e50:	0000002c 	andeq	r0, r0, ip, lsr #32
     e54:	000000d9 	ldrdeq	r0, [r0], -r9
     e58:	0000690d 	andeq	r6, r0, sp, lsl #18
     e5c:	0e000300 	cdpeq	3, 0, cr0, cr0, cr0, {0}
     e60:	faa30308 	blx	fe8c1a88 <obstacle+0xde8c0b1c>
     e64:	0f000000 	svceq	0x00000000
     e68:	000008ef 	andeq	r0, r0, pc, ror #17
     e6c:	005da503 	subseq	sl, sp, r3, lsl #10
     e70:	0f000000 	svceq	0x00000000
     e74:	000008fe 	strdeq	r0, [r0], -lr
     e78:	00aaaa03 	adceq	sl, sl, r3, lsl #20
     e7c:	00040000 	andeq	r0, r4, r0
     e80:	00087106 	andeq	r7, r8, r6, lsl #2
     e84:	d9ab0300 	stmible	fp!, {r8, r9}
     e88:	06000000 	streq	r0, [r0], -r0
     e8c:	000009b6 			; <UNDEFINED> instruction: 0x000009b6
     e90:	0072af03 	rsbseq	sl, r2, r3, lsl #30
     e94:	4f060000 	svcmi	0x00060000
     e98:	05000009 	streq	r0, [r0, #-9]
     e9c:	00004816 	andeq	r4, r0, r6, lsl r8
     ea0:	07591000 	ldrbeq	r1, [r9, -r0]
     ea4:	05180000 	ldreq	r0, [r8, #-0]
     ea8:	00016e2f 	andeq	r6, r1, pc, lsr #28
     eac:	08920f00 	ldmeq	r2, {r8, r9, sl, fp}
     eb0:	31050000 	mrscc	r0, (UNDEF: 5)
     eb4:	0000016e 	andeq	r0, r0, lr, ror #2
     eb8:	6b5f1100 	blvs	17c52c0 <startup-0x1e83ad40>
     ebc:	5d320500 	cfldr32pl	mvfx0, [r2, #-0]
     ec0:	04000000 	streq	r0, [r0], #-0
     ec4:	0008da0f 	andeq	sp, r8, pc, lsl #20
     ec8:	5d320500 	cfldr32pl	mvfx0, [r2, #-0]
     ecc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     ed0:	0007150f 	andeq	r1, r7, pc, lsl #10
     ed4:	5d320500 	cfldr32pl	mvfx0, [r2, #-0]
     ed8:	0c000000 	stceq	0, cr0, [r0], {-0}
     edc:	0009840f 	andeq	r8, r9, pc, lsl #8
     ee0:	5d320500 	cfldr32pl	mvfx0, [r2, #-0]
     ee4:	10000000 	andne	r0, r0, r0
     ee8:	00785f11 	rsbseq	r5, r8, r1, lsl pc
     eec:	01743305 	cmneq	r4, r5, lsl #6
     ef0:	00140000 	andseq	r0, r4, r0
     ef4:	011b0407 	tsteq	fp, r7, lsl #8
     ef8:	100c0000 	andne	r0, ip, r0
     efc:	84000001 	strhi	r0, [r0], #-1
     f00:	0d000001 	stceq	0, cr0, [r0, #-4]
     f04:	00000069 	andeq	r0, r0, r9, rrx
     f08:	7a100000 	bvc	400f10 <startup-0x1fbff0f0>
     f0c:	24000007 	strcs	r0, [r0], #-7
     f10:	01fd3705 	mvnseq	r3, r5, lsl #14
     f14:	6a0f0000 	bvs	3c0f1c <startup-0x1fc3f0e4>
     f18:	05000006 	streq	r0, [r0, #-6]
     f1c:	00005d39 	andeq	r5, r0, r9, lsr sp
     f20:	140f0000 	strne	r0, [pc], #-0	; f28 <startup-0x1ffff0d8>
     f24:	05000009 	streq	r0, [r0, #-9]
     f28:	00005d3a 	andeq	r5, r0, sl, lsr sp
     f2c:	8d0f0400 	cfstrshi	mvf0, [pc, #-0]	; f34 <startup-0x1ffff0cc>
     f30:	05000006 	streq	r0, [r0, #-6]
     f34:	00005d3b 	andeq	r5, r0, fp, lsr sp
     f38:	190f0800 	stmdbne	pc, {fp}	; <UNPREDICTABLE>
     f3c:	0500000a 	streq	r0, [r0, #-10]
     f40:	00005d3c 	andeq	r5, r0, ip, lsr sp
     f44:	000f0c00 	andeq	r0, pc, r0, lsl #24
     f48:	05000008 	streq	r0, [r0, #-8]
     f4c:	00005d3d 	andeq	r5, r0, sp, lsr sp
     f50:	ea0f1000 	b	3c4f58 <startup-0x1fc3b0a8>
     f54:	05000007 	streq	r0, [r0, #-7]
     f58:	00005d3e 	andeq	r5, r0, lr, lsr sp
     f5c:	890f1400 	stmdbhi	pc, {sl, ip}	; <UNPREDICTABLE>
     f60:	05000009 	streq	r0, [r0, #-9]
     f64:	00005d3f 	andeq	r5, r0, pc, lsr sp
     f68:	530f1800 	movwpl	r1, #63488	; 0xf800
     f6c:	05000008 	streq	r0, [r0, #-8]
     f70:	00005d40 	andeq	r5, r0, r0, asr #26
     f74:	db0f1c00 	blle	3c7f7c <startup-0x1fc38084>
     f78:	05000009 	streq	r0, [r0, #-9]
     f7c:	00005d41 	andeq	r5, r0, r1, asr #26
     f80:	12002000 	andne	r2, r0, #0
     f84:	0000069c 	muleq	r0, ip, r6
     f88:	4a050108 	bmi	1413b0 <startup-0x1febec50>
     f8c:	0000023d 	andeq	r0, r0, sp, lsr r2
     f90:	0007080f 	andeq	r0, r7, pc, lsl #16
     f94:	3d4b0500 	cfstr64cc	mvdx0, [fp, #-0]
     f98:	00000002 	andeq	r0, r0, r2
     f9c:	0005eb0f 	andeq	lr, r5, pc, lsl #22
     fa0:	3d4c0500 	cfstr64cc	mvdx0, [ip, #-0]
     fa4:	80000002 	andhi	r0, r0, r2
     fa8:	00094113 	andeq	r4, r9, r3, lsl r1
     fac:	104e0500 	subne	r0, lr, r0, lsl #10
     fb0:	00000001 	andeq	r0, r0, r1
     fb4:	06c11301 	strbeq	r1, [r1], r1, lsl #6
     fb8:	51050000 	mrspl	r0, (UNDEF: 5)
     fbc:	00000110 	andeq	r0, r0, r0, lsl r1
     fc0:	0c000104 	stfeqs	f0, [r0], {4}
     fc4:	00000070 	andeq	r0, r0, r0, ror r0
     fc8:	0000024d 	andeq	r0, r0, sp, asr #4
     fcc:	0000690d 	andeq	r6, r0, sp, lsl #18
     fd0:	12001f00 	andne	r1, r0, #0, 30
     fd4:	00000809 	andeq	r0, r0, r9, lsl #16
     fd8:	5d050190 	stfpls	f0, [r5, #-576]	; 0xfffffdc0
     fdc:	0000028b 	andeq	r0, r0, fp, lsl #5
     fe0:	0008920f 	andeq	r9, r8, pc, lsl #4
     fe4:	8b5e0500 	blhi	17823ec <startup-0x1e87dc14>
     fe8:	00000002 	andeq	r0, r0, r2
     fec:	0008aa0f 	andeq	sl, r8, pc, lsl #20
     ff0:	5d5f0500 	cfldr64pl	mvdx0, [pc, #-0]	; ff8 <startup-0x1ffff008>
     ff4:	04000000 	streq	r0, [r0], #-0
     ff8:	0007100f 	andeq	r1, r7, pc
     ffc:	91610500 	cmnls	r1, r0, lsl #10
    1000:	08000002 	stmdaeq	r0, {r1}
    1004:	00069c0f 	andeq	r9, r6, pc, lsl #24
    1008:	fd620500 	stc2l	5, cr0, [r2, #-0]
    100c:	88000001 	stmdahi	r0, {r0}
    1010:	4d040700 	stcmi	7, cr0, [r4, #-0]
    1014:	0c000002 	stceq	0, cr0, [r0], {2}
    1018:	000002a1 	andeq	r0, r0, r1, lsr #5
    101c:	000002a1 	andeq	r0, r0, r1, lsr #5
    1020:	0000690d 	andeq	r6, r0, sp, lsl #18
    1024:	07001f00 	streq	r1, [r0, -r0, lsl #30]
    1028:	0002a704 	andeq	sl, r2, r4, lsl #14
    102c:	5d101400 	cfldrspl	mvf1, [r0, #-0]
    1030:	08000008 	stmdaeq	r0, {r3}
    1034:	02cd7505 	sbceq	r7, sp, #20971520	; 0x1400000
    1038:	870f0000 	strhi	r0, [pc, -r0]
    103c:	05000006 	streq	r0, [r0, #-6]
    1040:	0002cd76 	andeq	ip, r2, r6, ror sp
    1044:	f70f0000 			; <UNDEFINED> instruction: 0xf70f0000
    1048:	05000005 	streq	r0, [r0, #-5]
    104c:	00005d77 	andeq	r5, r0, r7, ror sp
    1050:	07000400 	streq	r0, [r0, -r0, lsl #8]
    1054:	00002c04 	andeq	r2, r0, r4, lsl #24
    1058:	087c1000 	ldmdaeq	ip!, {ip}^
    105c:	05680000 	strbeq	r0, [r8, #-0]!
    1060:	0003fdb5 			; <UNDEFINED> instruction: 0x0003fdb5
    1064:	705f1100 	subsvc	r1, pc, r0, lsl #2
    1068:	cdb60500 	cfldr32gt	mvfx0, [r6]
    106c:	00000002 	andeq	r0, r0, r2
    1070:	00725f11 	rsbseq	r5, r2, r1, lsl pc
    1074:	005db705 	subseq	fp, sp, r5, lsl #14
    1078:	11040000 	mrsne	r0, (UNDEF: 4)
    107c:	0500775f 	streq	r7, [r0, #-1887]	; 0xfffff8a1
    1080:	00005db8 			; <UNDEFINED> instruction: 0x00005db8
    1084:	ba0f0800 	blt	3c308c <startup-0x1fc3cf74>
    1088:	05000006 	streq	r0, [r0, #-6]
    108c:	000033b9 			; <UNDEFINED> instruction: 0x000033b9
    1090:	960f0c00 	strls	r0, [pc], -r0, lsl #24
    1094:	05000007 	streq	r0, [r0, #-7]
    1098:	000033ba 			; <UNDEFINED> instruction: 0x000033ba
    109c:	5f110e00 	svcpl	0x00110e00
    10a0:	05006662 	streq	r6, [r0, #-1634]	; 0xfffff99e
    10a4:	0002a8bb 			; <UNDEFINED> instruction: 0x0002a8bb
    10a8:	470f1000 	strmi	r1, [pc, -r0]
    10ac:	05000006 	streq	r0, [r0, #-6]
    10b0:	00005dbc 			; <UNDEFINED> instruction: 0x00005dbc
    10b4:	aa0f1800 	bge	3c70bc <startup-0x1fc38f44>
    10b8:	05000006 	streq	r0, [r0, #-6]
    10bc:	000070c3 	andeq	r7, r0, r3, asr #1
    10c0:	f20f1c00 			; <UNDEFINED> instruction: 0xf20f1c00
    10c4:	05000002 	streq	r0, [r0, #-2]
    10c8:	00056ac5 	andeq	r6, r5, r5, asr #21
    10cc:	da0f2000 	ble	3c90d4 <startup-0x1fc36f2c>
    10d0:	05000001 	streq	r0, [r0, #-1]
    10d4:	000594c7 	andeq	r9, r5, r7, asr #9
    10d8:	060f2400 	streq	r2, [pc], -r0, lsl #8
    10dc:	05000009 	streq	r0, [r0, #-9]
    10e0:	0005b8ca 	andeq	fp, r5, sl, asr #17
    10e4:	f50f2800 			; <UNDEFINED> instruction: 0xf50f2800
    10e8:	05000009 	streq	r0, [r0, #-9]
    10ec:	0005d2cb 	andeq	sp, r5, fp, asr #5
    10f0:	5f112c00 	svcpl	0x00112c00
    10f4:	05006275 	streq	r6, [r0, #-629]	; 0xfffffd8b
    10f8:	0002a8ce 	andeq	sl, r2, lr, asr #17
    10fc:	5f113000 	svcpl	0x00113000
    1100:	05007075 	streq	r7, [r0, #-117]	; 0xffffff8b
    1104:	0002cdcf 	andeq	ip, r2, pc, asr #27
    1108:	5f113800 	svcpl	0x00113800
    110c:	05007275 	streq	r7, [r0, #-629]	; 0xfffffd8b
    1110:	00005dd0 	ldrdeq	r5, [r0], -r0
    1114:	810f3c00 	tsthi	pc, r0, lsl #24
    1118:	05000006 	streq	r0, [r0, #-6]
    111c:	0005d8d3 	ldrdeq	sp, [r5], -r3
    1120:	bf0f4000 	svclt	0x000f4000
    1124:	05000009 	streq	r0, [r0, #-9]
    1128:	0005e8d4 	ldrdeq	lr, [r5], -r4
    112c:	5f114300 	svcpl	0x00114300
    1130:	0500626c 	streq	r6, [r0, #-620]	; 0xfffffd94
    1134:	0002a8d7 	ldrdeq	sl, [r2], -r7
    1138:	d00f4400 	andle	r4, pc, r0, lsl #8
    113c:	05000006 	streq	r0, [r0, #-6]
    1140:	00005dda 	ldrdeq	r5, [r0], -sl
    1144:	e10f4c00 	tst	pc, r0, lsl #24
    1148:	05000006 	streq	r0, [r0, #-6]
    114c:	000088db 	ldrdeq	r8, [r0], -fp
    1150:	bf0f5000 	svclt	0x000f5000
    1154:	05000001 	streq	r0, [r0, #-1]
    1158:	00041bde 	ldrdeq	r1, [r4], -lr
    115c:	f80f5400 			; <UNDEFINED> instruction: 0xf80f5400
    1160:	05000008 	streq	r0, [r0, #-8]
    1164:	000105e2 	andeq	r0, r1, r2, ror #11
    1168:	840f5800 	strhi	r5, [pc], #-2048	; 1170 <startup-0x1fffee90>
    116c:	05000008 	streq	r0, [r0, #-8]
    1170:	0000fae4 	andeq	pc, r0, r4, ror #21
    1174:	e20f5c00 	and	r5, pc, #0, 24
    1178:	05000007 	streq	r0, [r0, #-7]
    117c:	00005de5 	andeq	r5, r0, r5, ror #27
    1180:	15006400 	strne	r6, [r0, #-1024]	; 0xfffffc00
    1184:	0000005d 	andeq	r0, r0, sp, asr r0
    1188:	0000041b 	andeq	r0, r0, fp, lsl r4
    118c:	00041b16 	andeq	r1, r4, r6, lsl fp
    1190:	00701600 	rsbseq	r1, r0, r0, lsl #12
    1194:	58160000 	ldmdapl	r6, {}	; <UNPREDICTABLE>
    1198:	16000005 	strne	r0, [r0], -r5
    119c:	0000005d 	andeq	r0, r0, sp, asr r0
    11a0:	26040700 	strcs	r0, [r4], -r0, lsl #14
    11a4:	17000004 	strne	r0, [r0, -r4]
    11a8:	0000041b 	andeq	r0, r0, fp, lsl r4
    11ac:	0008e218 	andeq	lr, r8, r8, lsl r2
    11b0:	05042800 	streq	r2, [r4, #-2048]	; 0xfffff800
    11b4:	05580239 	ldrbeq	r0, [r8, #-569]	; 0xfffffdc7
    11b8:	42190000 	andsmi	r0, r9, #0
    11bc:	05000008 	streq	r0, [r0, #-8]
    11c0:	005d023b 	subseq	r0, sp, fp, lsr r2
    11c4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    11c8:	000006c9 	andeq	r0, r0, r9, asr #13
    11cc:	3f024005 	svccc	0x00024005
    11d0:	04000006 	streq	r0, [r0], #-6
    11d4:	00078619 	andeq	r8, r7, r9, lsl r6
    11d8:	02400500 	subeq	r0, r0, #0, 10
    11dc:	0000063f 	andeq	r0, r0, pc, lsr r6
    11e0:	07511908 	ldrbeq	r1, [r1, -r8, lsl #18]
    11e4:	40050000 	andmi	r0, r5, r0
    11e8:	00063f02 	andeq	r3, r6, r2, lsl #30
    11ec:	a5190c00 	ldrge	r0, [r9, #-3072]	; 0xfffff400
    11f0:	05000008 	streq	r0, [r0, #-8]
    11f4:	005d0242 	subseq	r0, sp, r2, asr #4
    11f8:	19100000 	ldmdbne	r0, {}	; <UNPREDICTABLE>
    11fc:	00000605 	andeq	r0, r0, r5, lsl #12
    1200:	21024305 	tstcs	r2, r5, lsl #6
    1204:	14000008 	strne	r0, [r0], #-8
    1208:	0008c119 	andeq	ip, r8, r9, lsl r1
    120c:	02460500 	subeq	r0, r6, #0, 10
    1210:	0000005d 	andeq	r0, r0, sp, asr r0
    1214:	08af1930 	stmiaeq	pc!, {r4, r5, r8, fp, ip}	; <UNPREDICTABLE>
    1218:	47050000 	strmi	r0, [r5, -r0]
    121c:	00083602 	andeq	r3, r8, r2, lsl #12
    1220:	11193400 	tstne	r9, r0, lsl #8
    1224:	05000008 	streq	r0, [r0, #-8]
    1228:	005d0249 	subseq	r0, sp, r9, asr #4
    122c:	19380000 	ldmdbne	r8!, {}	; <UNPREDICTABLE>
    1230:	000008b7 			; <UNDEFINED> instruction: 0x000008b7
    1234:	47024b05 	strmi	r4, [r2, -r5, lsl #22]
    1238:	3c000008 	stccc	0, cr0, [r0], {8}
    123c:	0007c519 	andeq	ip, r7, r9, lsl r5
    1240:	024e0500 	subeq	r0, lr, #0, 10
    1244:	0000016e 	andeq	r0, r0, lr, ror #2
    1248:	07701940 	ldrbeq	r1, [r0, -r0, asr #18]!
    124c:	4f050000 	svcmi	0x00050000
    1250:	00005d02 	andeq	r5, r0, r2, lsl #26
    1254:	0f194400 	svceq	0x00194400
    1258:	0500000a 	streq	r0, [r0, #-10]
    125c:	016e0250 	cmneq	lr, r0, asr r2
    1260:	19480000 	stmdbne	r8, {}^	; <UNPREDICTABLE>
    1264:	00000823 	andeq	r0, r0, r3, lsr #16
    1268:	4d025105 	stfmis	f5, [r2, #-20]	; 0xffffffec
    126c:	4c000008 	stcmi	0, cr0, [r0], {8}
    1270:	00078e19 	andeq	r8, r7, r9, lsl lr
    1274:	02540500 	subseq	r0, r4, #0, 10
    1278:	0000005d 	andeq	r0, r0, sp, asr r0
    127c:	06d91950 			; <UNDEFINED> instruction: 0x06d91950
    1280:	55050000 	strpl	r0, [r5, #-0]
    1284:	00055802 	andeq	r5, r5, r2, lsl #16
    1288:	3b195400 	blcc	656290 <startup-0x1f9a9d70>
    128c:	05000008 	streq	r0, [r0, #-8]
    1290:	07ff0278 			; <UNDEFINED> instruction: 0x07ff0278
    1294:	1a580000 	bne	160129c <startup-0x1e9fed64>
    1298:	00000809 	andeq	r0, r0, r9, lsl #16
    129c:	8b027c05 	blhi	a02b8 <startup-0x1ff5fd48>
    12a0:	48000002 	stmdami	r0, {r1}
    12a4:	07a31a01 	streq	r1, [r3, r1, lsl #20]!
    12a8:	7d050000 	stcvc	0, cr0, [r5, #-0]
    12ac:	00024d02 	andeq	r4, r2, r2, lsl #26
    12b0:	1a014c00 	bne	542b8 <startup-0x1ffabd48>
    12b4:	000009ac 	andeq	r0, r0, ip, lsr #19
    12b8:	5e028105 	mvfpls	f0, f5
    12bc:	dc000008 	stcle	0, cr0, [r0], {8}
    12c0:	06b21a02 	ldrteq	r1, [r2], r2, lsl #20
    12c4:	86050000 	strhi	r0, [r5], -r0
    12c8:	00060402 	andeq	r0, r6, r2, lsl #8
    12cc:	1a02e000 	bne	b92d4 <startup-0x1ff46d2c>
    12d0:	00000697 	muleq	r0, r7, r6
    12d4:	6a028805 	bvs	a32f0 <startup-0x1ff5cd10>
    12d8:	ec000008 	stc	0, cr0, [r0], {8}
    12dc:	04070002 	streq	r0, [r7], #-2
    12e0:	0000055e 	andeq	r0, r0, lr, asr r5
    12e4:	c7080102 	strgt	r0, [r8, -r2, lsl #2]
    12e8:	17000000 	strne	r0, [r0, -r0]
    12ec:	0000055e 	andeq	r0, r0, lr, asr r5
    12f0:	03fd0407 	mvnseq	r0, #117440512	; 0x7000000
    12f4:	5d150000 	ldcpl	0, cr0, [r5, #-0]
    12f8:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    12fc:	16000005 	strne	r0, [r0], -r5
    1300:	0000041b 	andeq	r0, r0, fp, lsl r4
    1304:	00007016 	andeq	r7, r0, r6, lsl r0
    1308:	058e1600 	streq	r1, [lr, #1536]	; 0x600
    130c:	5d160000 	ldcpl	0, cr0, [r6, #-0]
    1310:	00000000 	andeq	r0, r0, r0
    1314:	05650407 	strbeq	r0, [r5, #-1031]!	; 0xfffffbf9
    1318:	04070000 	streq	r0, [r7], #-0
    131c:	00000570 	andeq	r0, r0, r0, ror r5
    1320:	00009315 	andeq	r9, r0, r5, lsl r3
    1324:	0005b800 	andeq	fp, r5, r0, lsl #16
    1328:	041b1600 	ldreq	r1, [fp], #-1536	; 0xfffffa00
    132c:	70160000 	andsvc	r0, r6, r0
    1330:	16000000 	strne	r0, [r0], -r0
    1334:	00000093 	muleq	r0, r3, r0
    1338:	00005d16 	andeq	r5, r0, r6, lsl sp
    133c:	04070000 	streq	r0, [r7], #-0
    1340:	0000059a 	muleq	r0, sl, r5
    1344:	00005d15 	andeq	r5, r0, r5, lsl sp
    1348:	0005d200 	andeq	sp, r5, r0, lsl #4
    134c:	041b1600 	ldreq	r1, [fp], #-1536	; 0xfffffa00
    1350:	70160000 	andsvc	r0, r6, r0
    1354:	00000000 	andeq	r0, r0, r0
    1358:	05be0407 	ldreq	r0, [lr, #1031]!	; 0x407
    135c:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    1360:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    1364:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    1368:	00000069 	andeq	r0, r0, r9, rrx
    136c:	2c0c0002 	stccs	0, cr0, [ip], {2}
    1370:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1374:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    1378:	00000069 	andeq	r0, r0, r9, rrx
    137c:	6a090000 	bvs	241384 <startup-0x1fdbec7c>
    1380:	05000008 	streq	r0, [r0, #-8]
    1384:	02d3011f 	sbcseq	r0, r3, #-1073741817	; 0xc0000007
    1388:	931b0000 	tstls	fp, #0
    138c:	0c000009 	stceq	0, cr0, [r0], {9}
    1390:	39012305 	stmdbcc	r1, {r0, r2, r8, r9, sp}
    1394:	19000006 	stmdbne	r0, {r1, r2}
    1398:	00000892 	muleq	r0, r2, r8
    139c:	39012505 	stmdbcc	r1, {r0, r2, r8, sl, sp}
    13a0:	00000006 	andeq	r0, r0, r6
    13a4:	00079c19 	andeq	r9, r7, r9, lsl ip
    13a8:	01260500 			; <UNDEFINED> instruction: 0x01260500
    13ac:	0000005d 	andeq	r0, r0, sp, asr r0
    13b0:	08641904 	stmdaeq	r4!, {r2, r8, fp, ip}^
    13b4:	27050000 	strcs	r0, [r5, -r0]
    13b8:	00063f01 	andeq	r3, r6, r1, lsl #30
    13bc:	07000800 	streq	r0, [r0, -r0, lsl #16]
    13c0:	00060404 	andeq	r0, r6, r4, lsl #8
    13c4:	f8040700 			; <UNDEFINED> instruction: 0xf8040700
    13c8:	1b000005 	blne	13e4 <startup-0x1fffec1c>
    13cc:	000005fd 	strdeq	r0, [r0], -sp
    13d0:	013f050e 	teqeq	pc, lr, lsl #10
    13d4:	0000067a 	andeq	r0, r0, sl, ror r6
    13d8:	0008e919 	andeq	lr, r8, r9, lsl r9
    13dc:	01400500 	cmpeq	r0, r0, lsl #10
    13e0:	0000067a 	andeq	r0, r0, sl, ror r6
    13e4:	092e1900 	stmdbeq	lr!, {r8, fp, ip}
    13e8:	41050000 	mrsmi	r0, (UNDEF: 5)
    13ec:	00067a01 	andeq	r7, r6, r1, lsl #20
    13f0:	4a190600 	bmi	642bf8 <startup-0x1f9bd408>
    13f4:	05000009 	streq	r0, [r0, #-9]
    13f8:	003a0142 	eorseq	r0, sl, r2, asr #2
    13fc:	000c0000 	andeq	r0, ip, r0
    1400:	00003a0c 	andeq	r3, r0, ip, lsl #20
    1404:	00068a00 	andeq	r8, r6, r0, lsl #20
    1408:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    140c:	00020000 	andeq	r0, r2, r0
    1410:	5905d01c 	stmdbpl	r5, {r2, r3, r4, ip, lr, pc}
    1414:	00078b02 	andeq	r8, r7, r2, lsl #22
    1418:	09771900 	ldmdbeq	r7!, {r8, fp, ip}^
    141c:	5b050000 	blpl	141424 <startup-0x1febebdc>
    1420:	00006902 	andeq	r6, r0, r2, lsl #18
    1424:	34190000 	ldrcc	r0, [r9], #-0
    1428:	05000009 	streq	r0, [r0, #-9]
    142c:	0558025c 	ldrbeq	r0, [r8, #-604]	; 0xfffffda4
    1430:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
    1434:	000007b8 			; <UNDEFINED> instruction: 0x000007b8
    1438:	8b025d05 	blhi	98854 <startup-0x1ff677ac>
    143c:	08000007 	stmdaeq	r0, {r0, r1, r2}
    1440:	0009e619 	andeq	lr, r9, r9, lsl r6
    1444:	025e0500 	subseq	r0, lr, #0, 10
    1448:	00000184 	andeq	r0, r0, r4, lsl #3
    144c:	07611924 	strbeq	r1, [r1, -r4, lsr #18]!
    1450:	5f050000 	svcpl	0x00050000
    1454:	00005d02 	andeq	r5, r0, r2, lsl #26
    1458:	8d194800 	ldchi	8, cr4, [r9, #-0]
    145c:	05000008 	streq	r0, [r0, #-8]
    1460:	00560260 	subseq	r0, r6, r0, ror #4
    1464:	19500000 	ldmdbne	r0, {}^	; <UNPREDICTABLE>
    1468:	000009fc 	strdeq	r0, [r0], -ip
    146c:	45026105 	strmi	r6, [r2, #-261]	; 0xfffffefb
    1470:	58000006 	stmdapl	r0, {r1, r2}
    1474:	00089819 	andeq	r9, r8, r9, lsl r8
    1478:	02620500 	rsbeq	r0, r2, #0, 10
    147c:	000000fa 	strdeq	r0, [r0], -sl
    1480:	0a011968 	beq	47a28 <startup-0x1ffb85d8>
    1484:	63050000 	movwvs	r0, #20480	; 0x5000
    1488:	0000fa02 	andeq	pc, r0, r2, lsl #20
    148c:	2d197000 	ldccs	0, cr7, [r9, #-0]
    1490:	05000008 	streq	r0, [r0, #-8]
    1494:	00fa0264 	rscseq	r0, sl, r4, ror #4
    1498:	19780000 	ldmdbne	r8!, {}^	; <UNPREDICTABLE>
    149c:	000009a2 	andeq	r0, r0, r2, lsr #19
    14a0:	9b026505 	blls	9a8bc <startup-0x1ff65744>
    14a4:	80000007 	andhi	r0, r0, r7
    14a8:	0007ac19 	andeq	sl, r7, r9, lsl ip
    14ac:	02660500 	rsbeq	r0, r6, #0, 10
    14b0:	000007ab 	andeq	r0, r0, fp, lsr #15
    14b4:	09571988 	ldmdbeq	r7, {r3, r7, r8, fp, ip}^
    14b8:	67050000 	strvs	r0, [r5, -r0]
    14bc:	00005d02 	andeq	r5, r0, r2, lsl #26
    14c0:	fa19a000 	blx	6694c8 <startup-0x1f996b38>
    14c4:	05000006 	streq	r0, [r0, #-6]
    14c8:	00fa0268 	rscseq	r0, sl, r8, ror #4
    14cc:	19a40000 	stmibne	r4!, {}	; <UNPREDICTABLE>
    14d0:	0000065b 	andeq	r0, r0, fp, asr r6
    14d4:	fa026905 	blx	9b8f0 <startup-0x1ff64710>
    14d8:	ac000000 	stcge	0, cr0, [r0], {-0}
    14dc:	0006e919 	andeq	lr, r6, r9, lsl r9
    14e0:	026a0500 	rsbeq	r0, sl, #0, 10
    14e4:	000000fa 	strdeq	r0, [r0], -sl
    14e8:	061019b4 			; <UNDEFINED> instruction: 0x061019b4
    14ec:	6b050000 	blvs	1414f4 <startup-0x1febeb0c>
    14f0:	0000fa02 	andeq	pc, r0, r2, lsl #20
    14f4:	1f19bc00 	svcne	0x0019bc00
    14f8:	05000006 	streq	r0, [r0, #-6]
    14fc:	00fa026c 	rscseq	r0, sl, ip, ror #4
    1500:	19c40000 	stmibne	r4, {}^	; <UNPREDICTABLE>
    1504:	00000840 	andeq	r0, r0, r0, asr #16
    1508:	5d026d05 	stcpl	13, cr6, [r2, #-20]	; 0xffffffec
    150c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    1510:	055e0c00 	ldrbeq	r0, [lr, #-3072]	; 0xfffff400
    1514:	079b0000 	ldreq	r0, [fp, r0]
    1518:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    151c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    1520:	055e0c00 	ldrbeq	r0, [lr, #-3072]	; 0xfffff400
    1524:	07ab0000 	streq	r0, [fp, r0]!
    1528:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    152c:	07000000 	streq	r0, [r0, -r0]
    1530:	055e0c00 	ldrbeq	r0, [lr, #-3072]	; 0xfffff400
    1534:	07bb0000 	ldreq	r0, [fp, r0]!
    1538:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    153c:	17000000 	strne	r0, [r0, -r0]
    1540:	05f01c00 	ldrbeq	r1, [r0, #3072]!	; 0xc00
    1544:	07df0272 			; <UNDEFINED> instruction: 0x07df0272
    1548:	f4190000 			; <UNDEFINED> instruction: 0xf4190000
    154c:	05000007 	streq	r0, [r0, #-7]
    1550:	07df0275 			; <UNDEFINED> instruction: 0x07df0275
    1554:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    1558:	00000999 	muleq	r0, r9, r9
    155c:	ef027605 	svc	0x00027605
    1560:	78000007 	stmdavc	r0, {r0, r1, r2}
    1564:	02cd0c00 	sbceq	r0, sp, #0, 24
    1568:	07ef0000 	strbeq	r0, [pc, r0]!
    156c:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    1570:	1d000000 	stcne	0, cr0, [r0, #-0]
    1574:	00690c00 	rsbeq	r0, r9, r0, lsl #24
    1578:	07ff0000 	ldrbeq	r0, [pc, r0]!
    157c:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    1580:	1d000000 	stcne	0, cr0, [r0, #-0]
    1584:	05f01d00 	ldrbeq	r1, [r0, #3328]!	; 0xd00
    1588:	08210257 	stmdaeq	r1!, {r0, r1, r2, r4, r6, r9}
    158c:	e21e0000 	ands	r0, lr, #0
    1590:	05000008 	streq	r0, [r0, #-8]
    1594:	068a026e 	streq	r0, [sl], lr, ror #4
    1598:	c51e0000 	ldrgt	r0, [lr, #-0]
    159c:	05000009 	streq	r0, [r0, #-9]
    15a0:	07bb0277 			; <UNDEFINED> instruction: 0x07bb0277
    15a4:	0c000000 	stceq	0, cr0, [r0], {-0}
    15a8:	0000055e 	andeq	r0, r0, lr, asr r5
    15ac:	00000831 	andeq	r0, r0, r1, lsr r8
    15b0:	0000690d 	andeq	r6, r0, sp, lsl #18
    15b4:	08001800 	stmdaeq	r0, {fp, ip}
    15b8:	00000650 	andeq	r0, r0, r0, asr r6
    15bc:	08310407 	ldmdaeq	r1!, {r0, r1, r2, sl}
    15c0:	471f0000 	ldrmi	r0, [pc, -r0]
    15c4:	16000008 	strne	r0, [r0], -r8
    15c8:	0000041b 	andeq	r0, r0, fp, lsl r4
    15cc:	3c040700 	stccc	7, cr0, [r4], {-0}
    15d0:	07000008 	streq	r0, [r0, -r8]
    15d4:	00016e04 	andeq	r6, r1, r4, lsl #28
    15d8:	085e1f00 	ldmdaeq	lr, {r8, r9, sl, fp, ip}^
    15dc:	5d160000 	ldcpl	0, cr0, [r6, #-0]
    15e0:	00000000 	andeq	r0, r0, r0
    15e4:	08640407 	stmdaeq	r4!, {r0, r1, r2, sl}^
    15e8:	04070000 	streq	r0, [r7], #-0
    15ec:	00000853 	andeq	r0, r0, r3, asr r8
    15f0:	0005f80c 	andeq	pc, r5, ip, lsl #16
    15f4:	00087a00 	andeq	r7, r8, r0, lsl #20
    15f8:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    15fc:	00020000 	andeq	r0, r2, r0
    1600:	00096b20 	andeq	r6, r9, r0, lsr #22
    1604:	03070500 	movweq	r0, #29952	; 0x7500
    1608:	0000041b 	andeq	r0, r0, fp, lsl r4
    160c:	00096420 	andeq	r6, r9, r0, lsr #8
    1610:	03080500 	movweq	r0, #34048	; 0x8500
    1614:	00000421 	andeq	r0, r0, r1, lsr #8
    1618:	2106180e 	tstcs	r6, lr, lsl #16
    161c:	0000091f 	andeq	r0, r0, pc, lsl r9
    1620:	0002e50f 	andeq	lr, r2, pc, lsl #10
    1624:	69220600 	stmdbvs	r2!, {r9, sl}
    1628:	00000000 	andeq	r0, r0, r0
    162c:	0001ac0f 	andeq	sl, r1, pc, lsl #24
    1630:	3a230600 	bcc	8c2e38 <startup-0x1f73d1c8>
    1634:	04000000 	streq	r0, [r0], #-0
    1638:	00020e0f 	andeq	r0, r2, pc, lsl #28
    163c:	3a240600 	bcc	902e44 <startup-0x1f6fd1bc>
    1640:	06000000 	streq	r0, [r0], -r0
    1644:	0002aa0f 	andeq	sl, r2, pc, lsl #20
    1648:	69250600 	stmdbvs	r5!, {r9, sl}
    164c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1650:	00022c0f 	andeq	r2, r2, pc, lsl #24
    1654:	69260600 	stmdbvs	r6!, {r9, sl}
    1658:	0c000000 	stceq	0, cr0, [r0], {-0}
    165c:	0002b20f 	andeq	fp, r2, pc, lsl #4
    1660:	2c270600 	stccs	6, cr0, [r7], #-0
    1664:	10000000 	andne	r0, r0, r0
    1668:	0002a20f 	andeq	sl, r2, pc, lsl #4
    166c:	2c280600 	stccs	6, cr0, [r8], #-0
    1670:	11000000 	mrsne	r0, (UNDEF: 0)
    1674:	0002020f 	andeq	r0, r2, pc, lsl #4
    1678:	3a290600 	bcc	a42e80 <startup-0x1f5bd180>
    167c:	12000000 	andne	r0, r0, #0
    1680:	00025b0f 	andeq	r5, r2, pc, lsl #22
    1684:	2c2a0600 	stccs	6, cr0, [sl], #-0
    1688:	14000000 	strne	r0, [r0], #-0
    168c:	0001cb0f 	andeq	ip, r1, pc, lsl #22
    1690:	2c2b0600 	stccs	6, cr0, [fp], #-0
    1694:	15000000 	strne	r0, [r0, #-0]
    1698:	00024f0f 	andeq	r4, r2, pc, lsl #30
    169c:	3a2c0600 	bcc	b02ea4 <startup-0x1f4fd15c>
    16a0:	16000000 	strne	r0, [r0], -r0
    16a4:	01e60600 	mvneq	r0, r0, lsl #12
    16a8:	2d060000 	stccs	0, cr0, [r6, #-0]
    16ac:	00000892 	muleq	r0, r2, r8
    16b0:	00009921 	andeq	r9, r0, r1, lsr #18
    16b4:	64040700 	strvs	r0, [r4], #-1792	; 0xfffff900
    16b8:	05000000 	streq	r0, [r0, #-0]
    16bc:	000ed003 	andeq	sp, lr, r3
    16c0:	00f02120 	rscseq	r2, r0, r0, lsr #2
    16c4:	05070000 	streq	r0, [r7, #-0]
    16c8:	00000064 	andeq	r0, r0, r4, rrx
    16cc:	0edc0305 	cdpeq	3, 13, cr0, cr12, cr5, {0}
    16d0:	cc212000 	stcgt	0, cr2, [r1], #-0
    16d4:	07000000 	streq	r0, [r0, -r0]
    16d8:	00006406 	andeq	r6, r0, r6, lsl #8
    16dc:	d8030500 	stmdale	r3, {r8, sl}
    16e0:	2120000e 			; <UNDEFINED> instruction: 0x2120000e
    16e4:	000000e1 	andeq	r0, r0, r1, ror #1
    16e8:	00640707 	rsbeq	r0, r4, r7, lsl #14
    16ec:	03050000 	movweq	r0, #20480	; 0x5000
    16f0:	20000ed4 	ldrdcs	r0, [r0], -r4
    16f4:	00017f21 	andeq	r7, r1, r1, lsr #30
    16f8:	64080700 	strvs	r0, [r8], #-1792	; 0xfffff900
    16fc:	05000000 	streq	r0, [r0, #-0]
    1700:	000ec803 	andeq	ip, lr, r3, lsl #16
    1704:	00fd2120 	rscseq	r2, sp, r0, lsr #2
    1708:	09070000 	stmdbeq	r7, {}	; <UNPREDICTABLE>
    170c:	00000064 	andeq	r0, r0, r4, rrx
    1710:	0ecc0305 	cdpeq	3, 12, cr0, cr12, cr5, {0}
    1714:	3c102000 	ldccc	0, cr2, [r0], {-0}
    1718:	02000003 	andeq	r0, r0, #3
    171c:	09b10408 	ldmibeq	r1!, {r3, sl}
    1720:	78110000 	ldmdavc	r1, {}	; <UNPREDICTABLE>
    1724:	2c050800 	stccs	8, cr0, [r5], {-0}
    1728:	00000000 	andeq	r0, r0, r0
    172c:	08007911 	stmdaeq	r0, {r0, r4, r8, fp, ip, sp, lr}
    1730:	00002c06 	andeq	r2, r0, r6, lsl #24
    1734:	06000100 	streq	r0, [r0], -r0, lsl #2
    1738:	00000343 	andeq	r0, r0, r3, asr #6
    173c:	09900708 	ldmibeq	r0, {r3, r8, r9, sl}
    1740:	5f100000 	svcpl	0x00100000
    1744:	34000003 	strcc	r0, [r0], #-3
    1748:	09f80908 	ldmibeq	r8!, {r3, r8, fp}^
    174c:	c80f0000 	stmdagt	pc, {}	; <UNPREDICTABLE>
    1750:	08000003 	stmdaeq	r0, {r0, r1}
    1754:	00005d0a 	andeq	r5, r0, sl, lsl #26
    1758:	530f0000 	movwpl	r0, #61440	; 0xf000
    175c:	08000003 	stmdaeq	r0, {r0, r1}
    1760:	00005d0b 	andeq	r5, r0, fp, lsl #26
    1764:	590f0400 	stmdbpl	pc, {sl}	; <UNPREDICTABLE>
    1768:	08000003 	stmdaeq	r0, {r0, r1}
    176c:	00005d0c 	andeq	r5, r0, ip, lsl #26
    1770:	70110800 	andsvc	r0, r1, r0, lsl #16
    1774:	0d080078 	stceq	0, cr0, [r8, #-480]	; 0xfffffe20
    1778:	000009f8 	strdeq	r0, [r0], -r8
    177c:	b10c000c 	tstlt	ip, ip
    1780:	08000009 	stmdaeq	r0, {r0, r3}
    1784:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    1788:	00000069 	andeq	r0, r0, r9, rrx
    178c:	23060013 	movwcs	r0, #24595	; 0x6013
    1790:	08000003 	stmdaeq	r0, {r0, r1}
    1794:	000a130e 	andeq	r1, sl, lr, lsl #6
    1798:	bc040700 	stclt	7, cr0, [r4], {-0}
    179c:	10000009 	andne	r0, r0, r9
    17a0:	000003f5 	strdeq	r0, [r0], -r5
    17a4:	92100824 	andsls	r0, r0, #36, 16	; 0x240000
    17a8:	1100000a 	tstne	r0, sl
    17ac:	006f6567 	rsbeq	r6, pc, r7, ror #10
    17b0:	0a081108 	beq	205bd8 <startup-0x1fdfa428>
    17b4:	0f000000 	svceq	0x00000000
    17b8:	000003eb 	andeq	r0, r0, fp, ror #7
    17bc:	005d1208 	subseq	r1, sp, r8, lsl #4
    17c0:	0f040000 	svceq	0x00040000
    17c4:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    17c8:	005d1208 	subseq	r1, sp, r8, lsl #4
    17cc:	0f080000 	svceq	0x00080000
    17d0:	0000032d 	andeq	r0, r0, sp, lsr #6
    17d4:	005d1308 	subseq	r1, sp, r8, lsl #6
    17d8:	0f0c0000 	svceq	0x000c0000
    17dc:	00000332 	andeq	r0, r0, r2, lsr r3
    17e0:	005d1308 	subseq	r1, sp, r8, lsl #6
    17e4:	0f100000 	svceq	0x00100000
    17e8:	000003b2 			; <UNDEFINED> instruction: 0x000003b2
    17ec:	0aa31408 	beq	fe8c6814 <obstacle+0xde8c58a8>
    17f0:	0f140000 	svceq	0x00140000
    17f4:	000001fc 	strdeq	r0, [r0], -ip
    17f8:	0aa31508 	beq	fe8c6c20 <obstacle+0xde8c5cb4>
    17fc:	0f180000 	svceq	0x00180000
    1800:	00000337 	andeq	r0, r0, r7, lsr r3
    1804:	0aa31608 	beq	fe8c702c <obstacle+0xde8c60c0>
    1808:	0f1c0000 	svceq	0x001c0000
    180c:	00000349 	andeq	r0, r0, r9, asr #6
    1810:	0abe1708 	beq	fef87438 <obstacle+0xdef864cc>
    1814:	00200000 	eoreq	r0, r0, r0
    1818:	000a9d1f 	andeq	r9, sl, pc, lsl sp
    181c:	0a9d1600 	beq	fe747024 <obstacle+0xde7460b8>
    1820:	07000000 	streq	r0, [r0, -r0]
    1824:	000a1904 	andeq	r1, sl, r4, lsl #18
    1828:	92040700 	andls	r0, r4, #0, 14
    182c:	1f00000a 	svcne	0x0000000a
    1830:	00000abe 			; <UNDEFINED> instruction: 0x00000abe
    1834:	000a9d16 	andeq	r9, sl, r6, lsl sp
    1838:	005d1600 	subseq	r1, sp, r0, lsl #12
    183c:	5d160000 	ldcpl	0, cr0, [r6, #-0]
    1840:	00000000 	andeq	r0, r0, r0
    1844:	0aa90407 	beq	fea42868 <obstacle+0xdea418fc>
    1848:	fe060000 	cdp2	0, 0, cr0, cr6, cr0, {0}
    184c:	08000003 	stmdaeq	r0, {r0, r1}
    1850:	000a1918 	andeq	r1, sl, r8, lsl r9
    1854:	03fd0600 	mvnseq	r0, #0, 12
    1858:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    185c:	00000a9d 	muleq	r0, sp, sl
    1860:	0005b022 	andeq	fp, r5, r2, lsr #32
    1864:	c4060900 	strgt	r0, [r6], #-2304	; 0xfffff700
    1868:	2300000a 	movwcs	r0, #10
    186c:	00000a14 	andeq	r0, r0, r4, lsl sl
    1870:	0bdc3a01 	bleq	ff71007c <obstacle+0xdf70f110>
    1874:	012c2000 			; <UNDEFINED> instruction: 0x012c2000
    1878:	9c010000 	stcls	0, cr0, [r1], {-0}
    187c:	00000c02 	andeq	r0, r0, r2, lsl #24
    1880:	01006324 	tsteq	r0, r4, lsr #6
    1884:	00055e3c 	andeq	r5, r5, ip, lsr lr
    1888:	6f910200 	svcvs	0x00910200
    188c:	01007024 	tsteq	r0, r4, lsr #32
    1890:	000acf3d 	andeq	ip, sl, sp, lsr pc
    1894:	70910200 	addsvc	r0, r1, r0, lsl #4
    1898:	00021925 	andeq	r1, r2, r5, lsr #18
    189c:	5d3f0100 	ldfpls	f0, [pc, #-0]	; 18a4 <startup-0x1fffe75c>
    18a0:	23000000 	movwcs	r0, #0
    18a4:	2600000b 	strcs	r0, [r0], -fp
    18a8:	030e2500 	movweq	r2, #58624	; 0xe500
    18ac:	40010000 	andmi	r0, r1, r0
    18b0:	0000005d 	andeq	r0, r0, sp, asr r0
    18b4:	00000b34 	andeq	r0, r0, r4, lsr fp
    18b8:	8b250026 	blhi	941958 <startup-0x1f6be6a8>
    18bc:	01000001 	tsteq	r0, r1
    18c0:	00005d41 	andeq	r5, r0, r1, asr #26
    18c4:	000b4500 	andeq	r4, fp, r0, lsl #10
    18c8:	24002600 	strcs	r2, [r0], #-1536	; 0xfffffa00
    18cc:	64010073 	strvs	r0, [r1], #-115	; 0xffffff8d
    18d0:	00000558 	andeq	r0, r0, r8, asr r5
    18d4:	27749102 	ldrbcs	r9, [r4, -r2, lsl #2]!
    18d8:	000009cd 	andeq	r0, r0, sp, asr #19
    18dc:	0c026501 	cfstr32eq	mvfx6, [r2], {1}
    18e0:	91020000 	mrsls	r0, (UNDEF: 2)
    18e4:	045e2564 	ldrbeq	r2, [lr], #-1380	; 0xfffffa9c
    18e8:	57010000 	strpl	r0, [r1, -r0]
    18ec:	0000005d 	andeq	r0, r0, sp, asr r0
    18f0:	00000b70 	andeq	r0, r0, r0, ror fp
    18f4:	e9250026 	stmdb	r5!, {r1, r2, r5}
    18f8:	01000004 	tsteq	r0, r4
    18fc:	00005d58 	andeq	r5, r0, r8, asr sp
    1900:	000b8100 	andeq	r8, fp, r0, lsl #2
    1904:	28002600 	stmdacs	r0, {r9, sl, sp}
    1908:	20000bfe 	strdcs	r0, [r0], -lr
    190c:	000000a8 	andeq	r0, r0, r8, lsr #1
    1910:	00000bea 	andeq	r0, r0, sl, ror #23
    1914:	00045e25 	andeq	r5, r4, r5, lsr #28
    1918:	5d570100 	ldfple	f0, [r7, #-0]
    191c:	9f000000 	svcls	0x00000000
    1920:	2600000b 	strcs	r0, [r0], -fp
    1924:	04e92500 	strbteq	r2, [r9], #1280	; 0x500
    1928:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    192c:	0000005d 	andeq	r0, r0, sp, asr r0
    1930:	00000bb0 			; <UNDEFINED> instruction: 0x00000bb0
    1934:	78250026 	stmdavc	r5!, {r1, r2, r5}
    1938:	01000005 	tsteq	r0, r5
    193c:	00005d59 	andeq	r5, r0, r9, asr sp
    1940:	000bc100 	andeq	ip, fp, r0, lsl #2
    1944:	29002600 	stmdbcs	r0, {r9, sl, sp}
    1948:	20000c04 	andcs	r0, r0, r4, lsl #24
    194c:	00000072 	andeq	r0, r0, r2, ror r0
    1950:	00000025 	andeq	r0, r0, r5, lsr #32
    1954:	5d470100 	stfple	f0, [r7, #-0]
    1958:	db000000 	blle	1960 <startup-0x1fffe6a0>
    195c:	2600000b 	strcs	r0, [r0], -fp
    1960:	07fb2a00 	ldrbeq	r2, [fp, r0, lsl #20]!
    1964:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    1968:	0000005d 	andeq	r0, r0, sp, asr r0
    196c:	00000026 	andeq	r0, r0, r6, lsr #32
    1970:	000cd029 	andeq	sp, ip, r9, lsr #32
    1974:	00000e20 	andeq	r0, r0, r0, lsr #28
    1978:	05782a00 	ldrbeq	r2, [r8, #-2560]!	; 0xfffff600
    197c:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    1980:	0000005d 	andeq	r0, r0, sp, asr r0
    1984:	00000026 	andeq	r0, r0, r6, lsr #32
    1988:	00055e0c 	andeq	r5, r5, ip, lsl #28
    198c:	000c1200 	andeq	r1, ip, r0, lsl #4
    1990:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    1994:	00090000 	andeq	r0, r9, r0
    1998:	0009252b 	andeq	r2, r9, fp, lsr #10
    199c:	38240100 	stmdacc	r4!, {r8}
    19a0:	a420000b 	strtge	r0, [r0], #-11
    19a4:	01000000 	mrseq	r0, (UNDEF: 0)
    19a8:	091d2b9c 	ldmdbeq	sp, {r2, r3, r4, r7, r8, r9, fp, sp}
    19ac:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    19b0:	20000000 	andcs	r0, r0, r0
    19b4:	0000000c 	andeq	r0, r0, ip
    19b8:	d5009c01 	strle	r9, [r0, #-3073]	; 0xfffff3ff
    19bc:	04000001 	streq	r0, [r0], #-1
    19c0:	0007bc00 	andeq	fp, r7, r0, lsl #24
    19c4:	18010400 	stmdane	r1, {sl}
    19c8:	0c000000 	stceq	0, cr0, [r0], {-0}
    19cc:	00000a43 	andeq	r0, r0, r3, asr #20
    19d0:	00000118 	andeq	r0, r0, r8, lsl r1
    19d4:	20000d08 	andcs	r0, r0, r8, lsl #26
    19d8:	0000004c 	andeq	r0, r0, ip, asr #32
    19dc:	0000062c 	andeq	r0, r0, ip, lsr #12
    19e0:	3a070402 	bcc	1c29f0 <startup-0x1fe3d610>
    19e4:	02000006 	andeq	r0, r0, #6
    19e8:	01050702 	tsteq	r5, r2, lsl #14
    19ec:	01020000 	mrseq	r0, (UNDEF: 2)
    19f0:	0000be08 	andeq	fp, r0, r8, lsl #28
    19f4:	033c0300 	teqeq	ip, #0, 6
    19f8:	02020000 	andeq	r0, r2, #0
    19fc:	00005b04 	andeq	r5, r0, r4, lsl #22
    1a00:	00780400 	rsbseq	r0, r8, r0, lsl #8
    1a04:	00330502 	eorseq	r0, r3, r2, lsl #10
    1a08:	04000000 	streq	r0, [r0], #-0
    1a0c:	06020079 			; <UNDEFINED> instruction: 0x06020079
    1a10:	00000033 	andeq	r0, r0, r3, lsr r0
    1a14:	43050001 	movwmi	r0, #20481	; 0x5001
    1a18:	02000003 	andeq	r0, r0, #3
    1a1c:	00003a07 	andeq	r3, r0, r7, lsl #20
    1a20:	035f0300 	cmpeq	pc, #0, 6
    1a24:	02340000 	eorseq	r0, r4, #0
    1a28:	0000a209 	andeq	sl, r0, r9, lsl #4
    1a2c:	03c80600 	biceq	r0, r8, #0, 12
    1a30:	0a020000 	beq	81a38 <startup-0x1ff7e5c8>
    1a34:	000000a2 	andeq	r0, r0, r2, lsr #1
    1a38:	03530600 	cmpeq	r3, #0, 12
    1a3c:	0b020000 	bleq	81a44 <startup-0x1ff7e5bc>
    1a40:	000000a2 	andeq	r0, r0, r2, lsr #1
    1a44:	03590604 	cmpeq	r9, #4, 12	; 0x400000
    1a48:	0c020000 	stceq	0, cr0, [r2], {-0}
    1a4c:	000000a2 	andeq	r0, r0, r2, lsr #1
    1a50:	78700408 	ldmdavc	r0!, {r3, sl}^
    1a54:	a90d0200 	stmdbge	sp, {r9}
    1a58:	0c000000 	stceq	0, cr0, [r0], {-0}
    1a5c:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
    1a60:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1a64:	00005b08 	andeq	r5, r0, r8, lsl #22
    1a68:	0000b900 	andeq	fp, r0, r0, lsl #18
    1a6c:	00250900 	eoreq	r0, r5, r0, lsl #18
    1a70:	00130000 	andseq	r0, r3, r0
    1a74:	00032405 	andeq	r2, r3, r5, lsl #8
    1a78:	660e0200 	strvs	r0, [lr], -r0, lsl #4
    1a7c:	05000000 	streq	r0, [r0, #-0]
    1a80:	00000323 	andeq	r0, r0, r3, lsr #6
    1a84:	00cf0e02 	sbceq	r0, pc, r2, lsl #28
    1a88:	040a0000 	streq	r0, [sl], #-0
    1a8c:	00000066 	andeq	r0, r0, r6, rrx
    1a90:	0003f503 	andeq	pc, r3, r3, lsl #10
    1a94:	10022400 	andne	r2, r2, r0, lsl #8
    1a98:	0000014e 	andeq	r0, r0, lr, asr #2
    1a9c:	6f656704 	svcvs	0x00656704
    1aa0:	c4110200 	ldrgt	r0, [r1], #-512	; 0xfffffe00
    1aa4:	00000000 	andeq	r0, r0, r0
    1aa8:	0003eb06 	andeq	lr, r3, r6, lsl #22
    1aac:	a2120200 	andsge	r0, r2, #0, 4
    1ab0:	04000000 	streq	r0, [r0], #-0
    1ab4:	0003f006 	andeq	pc, r3, r6
    1ab8:	a2120200 	andsge	r0, r2, #0, 4
    1abc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1ac0:	00032d06 	andeq	r2, r3, r6, lsl #26
    1ac4:	a2130200 	andsge	r0, r3, #0, 4
    1ac8:	0c000000 	stceq	0, cr0, [r0], {-0}
    1acc:	00033206 	andeq	r3, r3, r6, lsl #4
    1ad0:	a2130200 	andsge	r0, r3, #0, 4
    1ad4:	10000000 	andne	r0, r0, r0
    1ad8:	0003b206 	andeq	fp, r3, r6, lsl #4
    1adc:	5f140200 	svcpl	0x00140200
    1ae0:	14000001 	strne	r0, [r0], #-1
    1ae4:	0001fc06 	andeq	pc, r1, r6, lsl #24
    1ae8:	5f150200 	svcpl	0x00150200
    1aec:	18000001 	stmdane	r0, {r0}
    1af0:	00033706 	andeq	r3, r3, r6, lsl #14
    1af4:	5f160200 	svcpl	0x00160200
    1af8:	1c000001 	stcne	0, cr0, [r0], {1}
    1afc:	00034906 	andeq	r4, r3, r6, lsl #18
    1b00:	7a170200 	bvc	5c2308 <startup-0x1fa3dcf8>
    1b04:	20000001 	andcs	r0, r0, r1
    1b08:	01590b00 	cmpeq	r9, r0, lsl #22
    1b0c:	590c0000 	stmdbpl	ip, {}	; <UNPREDICTABLE>
    1b10:	00000001 	andeq	r0, r0, r1
    1b14:	00d5040a 	sbcseq	r0, r5, sl, lsl #8
    1b18:	040a0000 	streq	r0, [sl], #-0
    1b1c:	0000014e 	andeq	r0, r0, lr, asr #2
    1b20:	00017a0b 	andeq	r7, r1, fp, lsl #20
    1b24:	01590c00 	cmpeq	r9, r0, lsl #24
    1b28:	a20c0000 	andge	r0, ip, #0
    1b2c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1b30:	000000a2 	andeq	r0, r0, r2, lsr #1
    1b34:	65040a00 	strvs	r0, [r4, #-2560]	; 0xfffff600
    1b38:	05000001 	streq	r0, [r0, #-1]
    1b3c:	000003fe 	strdeq	r0, [r0], -lr
    1b40:	00d51802 	sbcseq	r1, r5, r2, lsl #16
    1b44:	fd050000 	stc2	0, cr0, [r5, #-0]
    1b48:	02000003 	andeq	r0, r0, #3
    1b4c:	00015918 	andeq	r5, r1, r8, lsl r9
    1b50:	0a310d00 	beq	c44f58 <startup-0x1f3bb0a8>
    1b54:	03010000 	movweq	r0, #4096	; 0x1000
    1b58:	000000b9 	strheq	r0, [r0], -r9
    1b5c:	0f380305 	svceq	0x00380305
    1b60:	280d2000 	stmdacs	sp, {sp}
    1b64:	0100000a 	tsteq	r0, sl
    1b68:	0001801b 	andeq	r8, r1, fp, lsl r0
    1b6c:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    1b70:	0e20000f 	cdpeq	0, 2, cr0, cr0, cr15, {0}
    1b74:	00000a23 	andeq	r0, r0, r3, lsr #20
    1b78:	0d081001 	stceq	0, cr1, [r8, #-4]
    1b7c:	004c2000 	subeq	r2, ip, r0
    1b80:	9c010000 	stcls	0, cr0, [r1], {-0}
    1b84:	00059b0f 	andeq	r9, r5, pc, lsl #22
    1b88:	8b100100 	blhi	401f90 <startup-0x1fbfe070>
    1b8c:	02000001 	andeq	r0, r0, #1
    1b90:	00007491 	muleq	r0, r1, r4
    1b94:	000009e6 	andeq	r0, r0, r6, ror #19
    1b98:	08830004 	stmeq	r3, {r2}
    1b9c:	01040000 	mrseq	r0, (UNDEF: 4)
    1ba0:	00000018 	andeq	r0, r0, r8, lsl r0
    1ba4:	000a880c 	andeq	r8, sl, ip, lsl #16
    1ba8:	00011800 	andeq	r1, r1, r0, lsl #16
    1bac:	000d5400 	andeq	r5, sp, r0, lsl #8
    1bb0:	00017420 	andeq	r7, r1, r0, lsr #8
    1bb4:	0006ab00 	andeq	sl, r6, r0, lsl #22
    1bb8:	06010200 	streq	r0, [r1], -r0, lsl #4
    1bbc:	000000c0 	andeq	r0, r0, r0, asr #1
    1bc0:	be080102 	adflte	f0, f0, f2
    1bc4:	02000000 	andeq	r0, r0, #0
    1bc8:	08490502 	stmdaeq	r9, {r1, r8, sl}^
    1bcc:	02020000 	andeq	r0, r2, #0
    1bd0:	00010507 	andeq	r0, r1, r7, lsl #10
    1bd4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1bd8:	00000678 	andeq	r0, r0, r8, ror r6
    1bdc:	35070402 	strcc	r0, [r7, #-1026]	; 0xfffffbfe
    1be0:	02000006 	andeq	r0, r0, #6
    1be4:	06730508 	ldrbteq	r0, [r3], -r8, lsl #10
    1be8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1bec:	00063007 	andeq	r3, r6, r7
    1bf0:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    1bf4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1bf8:	3a070402 	bcc	1c2c08 <startup-0x1fe3d3f8>
    1bfc:	04000006 	streq	r0, [r0], #-6
    1c00:	07d30504 	ldrbeq	r0, [r3, r4, lsl #10]
    1c04:	22020000 	andcs	r0, r2, #0
    1c08:	00000078 	andeq	r0, r0, r8, ror r0
    1c0c:	007e0406 	rsbseq	r0, lr, r6, lsl #8
    1c10:	f7070000 			; <UNDEFINED> instruction: 0xf7070000
    1c14:	05000008 	streq	r0, [r0, #-8]
    1c18:	0000081c 	andeq	r0, r0, ip, lsl r8
    1c1c:	00412c03 	subeq	r2, r1, r3, lsl #24
    1c20:	0c050000 	stceq	0, cr0, [r5], {-0}
    1c24:	03000009 	movweq	r0, #9
    1c28:	00004172 	andeq	r4, r0, r2, ror r1
    1c2c:	07db0800 	ldrbeq	r0, [fp, r0, lsl #16]
    1c30:	65040000 	strvs	r0, [r4, #-0]
    1c34:	00006401 	andeq	r6, r0, r1, lsl #8
    1c38:	03040900 	movweq	r0, #18688	; 0x4900
    1c3c:	0000c4a6 	andeq	ip, r0, r6, lsr #9
    1c40:	07cd0a00 	strbeq	r0, [sp, r0, lsl #20]
    1c44:	a8030000 	stmdage	r3, {}	; <UNPREDICTABLE>
    1c48:	00000099 	muleq	r0, r9, r0
    1c4c:	00077f0a 	andeq	r7, r7, sl, lsl #30
    1c50:	c4a90300 	strtgt	r0, [r9], #768	; 0x300
    1c54:	00000000 	andeq	r0, r0, r0
    1c58:	00002c0b 	andeq	r2, r0, fp, lsl #24
    1c5c:	0000d400 	andeq	sp, r0, r0, lsl #8
    1c60:	00640c00 	rsbeq	r0, r4, r0, lsl #24
    1c64:	00030000 	andeq	r0, r3, r0
    1c68:	a303080d 	movwge	r0, #14349	; 0x380d
    1c6c:	000000f5 	strdeq	r0, [r0], -r5
    1c70:	0008ef0e 	andeq	lr, r8, lr, lsl #30
    1c74:	5da50300 	stcpl	3, cr0, [r5]
    1c78:	00000000 	andeq	r0, r0, r0
    1c7c:	0008fe0e 	andeq	pc, r8, lr, lsl #28
    1c80:	a5aa0300 	strge	r0, [sl, #768]!	; 0x300
    1c84:	04000000 	streq	r0, [r0], #-0
    1c88:	08710500 	ldmdaeq	r1!, {r8, sl}^
    1c8c:	ab030000 	blge	c1c94 <startup-0x1ff3e36c>
    1c90:	000000d4 	ldrdeq	r0, [r0], -r4
    1c94:	0009b605 	andeq	fp, r9, r5, lsl #12
    1c98:	6daf0300 	stcvs	3, cr0, [pc]	; 1ca0 <startup-0x1fffe360>
    1c9c:	05000000 	streq	r0, [r0, #-0]
    1ca0:	0000094f 	andeq	r0, r0, pc, asr #18
    1ca4:	00481605 	subeq	r1, r8, r5, lsl #12
    1ca8:	590f0000 	stmdbpl	pc, {}	; <UNPREDICTABLE>
    1cac:	18000007 	stmdane	r0, {r0, r1, r2}
    1cb0:	01692f05 	cmneq	r9, r5, lsl #30
    1cb4:	920e0000 	andls	r0, lr, #0
    1cb8:	05000008 	streq	r0, [r0, #-8]
    1cbc:	00016931 	andeq	r6, r1, r1, lsr r9
    1cc0:	5f100000 	svcpl	0x00100000
    1cc4:	3205006b 	andcc	r0, r5, #107	; 0x6b
    1cc8:	0000005d 	andeq	r0, r0, sp, asr r0
    1ccc:	08da0e04 	ldmeq	sl, {r2, r9, sl, fp}^
    1cd0:	32050000 	andcc	r0, r5, #0
    1cd4:	0000005d 	andeq	r0, r0, sp, asr r0
    1cd8:	07150e08 	ldreq	r0, [r5, -r8, lsl #28]
    1cdc:	32050000 	andcc	r0, r5, #0
    1ce0:	0000005d 	andeq	r0, r0, sp, asr r0
    1ce4:	09840e0c 	stmibeq	r4, {r2, r3, r9, sl, fp}
    1ce8:	32050000 	andcc	r0, r5, #0
    1cec:	0000005d 	andeq	r0, r0, sp, asr r0
    1cf0:	785f1010 	ldmdavc	pc, {r4, ip}^	; <UNPREDICTABLE>
    1cf4:	6f330500 	svcvs	0x00330500
    1cf8:	14000001 	strne	r0, [r0], #-1
    1cfc:	16040600 	strne	r0, [r4], -r0, lsl #12
    1d00:	0b000001 	bleq	1d0c <startup-0x1fffe2f4>
    1d04:	0000010b 	andeq	r0, r0, fp, lsl #2
    1d08:	0000017f 	andeq	r0, r0, pc, ror r1
    1d0c:	0000640c 	andeq	r6, r0, ip, lsl #8
    1d10:	0f000000 	svceq	0x00000000
    1d14:	0000077a 	andeq	r0, r0, sl, ror r7
    1d18:	f8370524 			; <UNDEFINED> instruction: 0xf8370524
    1d1c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1d20:	0000066a 	andeq	r0, r0, sl, ror #12
    1d24:	005d3905 	subseq	r3, sp, r5, lsl #18
    1d28:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1d2c:	00000914 	andeq	r0, r0, r4, lsl r9
    1d30:	005d3a05 	subseq	r3, sp, r5, lsl #20
    1d34:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    1d38:	0000068d 	andeq	r0, r0, sp, lsl #13
    1d3c:	005d3b05 	subseq	r3, sp, r5, lsl #22
    1d40:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    1d44:	00000a19 	andeq	r0, r0, r9, lsl sl
    1d48:	005d3c05 	subseq	r3, sp, r5, lsl #24
    1d4c:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    1d50:	00000800 	andeq	r0, r0, r0, lsl #16
    1d54:	005d3d05 	subseq	r3, sp, r5, lsl #26
    1d58:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    1d5c:	000007ea 	andeq	r0, r0, sl, ror #15
    1d60:	005d3e05 	subseq	r3, sp, r5, lsl #28
    1d64:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
    1d68:	00000989 	andeq	r0, r0, r9, lsl #19
    1d6c:	005d3f05 	subseq	r3, sp, r5, lsl #30
    1d70:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
    1d74:	00000853 	andeq	r0, r0, r3, asr r8
    1d78:	005d4005 	subseq	r4, sp, r5
    1d7c:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
    1d80:	000009db 	ldrdeq	r0, [r0], -fp
    1d84:	005d4105 	subseq	r4, sp, r5, lsl #2
    1d88:	00200000 	eoreq	r0, r0, r0
    1d8c:	00069c11 	andeq	r9, r6, r1, lsl ip
    1d90:	05010800 	streq	r0, [r1, #-2048]	; 0xfffff800
    1d94:	0002384a 	andeq	r3, r2, sl, asr #16
    1d98:	07080e00 	streq	r0, [r8, -r0, lsl #28]
    1d9c:	4b050000 	blmi	141da4 <startup-0x1febe25c>
    1da0:	00000238 	andeq	r0, r0, r8, lsr r2
    1da4:	05eb0e00 	strbeq	r0, [fp, #3584]!	; 0xe00
    1da8:	4c050000 	stcmi	0, cr0, [r5], {-0}
    1dac:	00000238 	andeq	r0, r0, r8, lsr r2
    1db0:	09411280 	stmdbeq	r1, {r7, r9, ip}^
    1db4:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
    1db8:	0000010b 	andeq	r0, r0, fp, lsl #2
    1dbc:	c1120100 	tstgt	r2, r0, lsl #2
    1dc0:	05000006 	streq	r0, [r0, #-6]
    1dc4:	00010b51 	andeq	r0, r1, r1, asr fp
    1dc8:	00010400 	andeq	r0, r1, r0, lsl #8
    1dcc:	00006b0b 	andeq	r6, r0, fp, lsl #22
    1dd0:	00024800 	andeq	r4, r2, r0, lsl #16
    1dd4:	00640c00 	rsbeq	r0, r4, r0, lsl #24
    1dd8:	001f0000 	andseq	r0, pc, r0
    1ddc:	00080911 	andeq	r0, r8, r1, lsl r9
    1de0:	05019000 	streq	r9, [r1, #-0]
    1de4:	0002865d 	andeq	r8, r2, sp, asr r6
    1de8:	08920e00 	ldmeq	r2, {r9, sl, fp}
    1dec:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
    1df0:	00000286 	andeq	r0, r0, r6, lsl #5
    1df4:	08aa0e00 	stmiaeq	sl!, {r9, sl, fp}
    1df8:	5f050000 	svcpl	0x00050000
    1dfc:	0000005d 	andeq	r0, r0, sp, asr r0
    1e00:	07100e04 	ldreq	r0, [r0, -r4, lsl #28]
    1e04:	61050000 	mrsvs	r0, (UNDEF: 5)
    1e08:	0000028c 	andeq	r0, r0, ip, lsl #5
    1e0c:	069c0e08 	ldreq	r0, [ip], r8, lsl #28
    1e10:	62050000 	andvs	r0, r5, #0
    1e14:	000001f8 	strdeq	r0, [r0], -r8
    1e18:	04060088 	streq	r0, [r6], #-136	; 0xffffff78
    1e1c:	00000248 	andeq	r0, r0, r8, asr #4
    1e20:	00029c0b 	andeq	r9, r2, fp, lsl #24
    1e24:	00029c00 	andeq	r9, r2, r0, lsl #24
    1e28:	00640c00 	rsbeq	r0, r4, r0, lsl #24
    1e2c:	001f0000 	andseq	r0, pc, r0
    1e30:	02a20406 	adceq	r0, r2, #100663296	; 0x6000000
    1e34:	0f130000 	svceq	0x00130000
    1e38:	0000085d 	andeq	r0, r0, sp, asr r8
    1e3c:	c8750508 	ldmdagt	r5!, {r3, r8, sl}^
    1e40:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1e44:	00000687 	andeq	r0, r0, r7, lsl #13
    1e48:	02c87605 	sbceq	r7, r8, #5242880	; 0x500000
    1e4c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1e50:	000005f7 	strdeq	r0, [r0], -r7
    1e54:	005d7705 	subseq	r7, sp, r5, lsl #14
    1e58:	00040000 	andeq	r0, r4, r0
    1e5c:	002c0406 	eoreq	r0, ip, r6, lsl #8
    1e60:	7c0f0000 	stcvc	0, cr0, [pc], {-0}
    1e64:	68000008 	stmdavs	r0, {r3}
    1e68:	03f8b505 	mvnseq	fp, #20971520	; 0x1400000
    1e6c:	5f100000 	svcpl	0x00100000
    1e70:	b6050070 			; <UNDEFINED> instruction: 0xb6050070
    1e74:	000002c8 	andeq	r0, r0, r8, asr #5
    1e78:	725f1000 	subsvc	r1, pc, #0
    1e7c:	5db70500 	cfldr32pl	mvfx0, [r7]
    1e80:	04000000 	streq	r0, [r0], #-0
    1e84:	00775f10 	rsbseq	r5, r7, r0, lsl pc
    1e88:	005db805 	subseq	fp, sp, r5, lsl #16
    1e8c:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    1e90:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
    1e94:	0033b905 	eorseq	fp, r3, r5, lsl #18
    1e98:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    1e9c:	00000796 	muleq	r0, r6, r7
    1ea0:	0033ba05 	eorseq	fp, r3, r5, lsl #20
    1ea4:	100e0000 	andne	r0, lr, r0
    1ea8:	0066625f 	rsbeq	r6, r6, pc, asr r2
    1eac:	02a3bb05 	adceq	fp, r3, #5120	; 0x1400
    1eb0:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    1eb4:	00000647 	andeq	r0, r0, r7, asr #12
    1eb8:	005dbc05 	subseq	fp, sp, r5, lsl #24
    1ebc:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
    1ec0:	000006aa 	andeq	r0, r0, sl, lsr #13
    1ec4:	006bc305 	rsbeq	ip, fp, r5, lsl #6
    1ec8:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
    1ecc:	000002f2 	strdeq	r0, [r0], -r2
    1ed0:	0565c505 	strbeq	ip, [r5, #-1285]!	; 0xfffffafb
    1ed4:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
    1ed8:	000001da 	ldrdeq	r0, [r0], -sl
    1edc:	058fc705 	streq	ip, [pc, #1797]	; 25e9 <startup-0x1fffda17>
    1ee0:	0e240000 	cdpeq	0, 2, cr0, cr4, cr0, {0}
    1ee4:	00000906 	andeq	r0, r0, r6, lsl #18
    1ee8:	05b3ca05 	ldreq	ip, [r3, #2565]!	; 0xa05
    1eec:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
    1ef0:	000009f5 	strdeq	r0, [r0], -r5
    1ef4:	05cdcb05 	strbeq	ip, [sp, #2821]	; 0xb05
    1ef8:	102c0000 	eorne	r0, ip, r0
    1efc:	0062755f 	rsbeq	r7, r2, pc, asr r5
    1f00:	02a3ce05 	adceq	ip, r3, #5, 28	; 0x50
    1f04:	10300000 	eorsne	r0, r0, r0
    1f08:	0070755f 	rsbseq	r7, r0, pc, asr r5
    1f0c:	02c8cf05 	sbceq	ip, r8, #5, 30
    1f10:	10380000 	eorsne	r0, r8, r0
    1f14:	0072755f 	rsbseq	r7, r2, pc, asr r5
    1f18:	005dd005 	subseq	sp, sp, r5
    1f1c:	0e3c0000 	cdpeq	0, 3, cr0, cr12, cr0, {0}
    1f20:	00000681 	andeq	r0, r0, r1, lsl #13
    1f24:	05d3d305 	ldrbeq	sp, [r3, #773]	; 0x305
    1f28:	0e400000 	cdpeq	0, 4, cr0, cr0, cr0, {0}
    1f2c:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
    1f30:	05e3d405 	strbeq	sp, [r3, #1029]!	; 0x405
    1f34:	10430000 	subne	r0, r3, r0
    1f38:	00626c5f 	rsbeq	r6, r2, pc, asr ip
    1f3c:	02a3d705 	adceq	sp, r3, #1310720	; 0x140000
    1f40:	0e440000 	cdpeq	0, 4, cr0, cr4, cr0, {0}
    1f44:	000006d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1f48:	005dda05 	subseq	sp, sp, r5, lsl #20
    1f4c:	0e4c0000 	cdpeq	0, 4, cr0, cr12, cr0, {0}
    1f50:	000006e1 	andeq	r0, r0, r1, ror #13
    1f54:	0083db05 	addeq	sp, r3, r5, lsl #22
    1f58:	0e500000 	cdpeq	0, 5, cr0, cr0, cr0, {0}
    1f5c:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
    1f60:	0416de05 	ldreq	sp, [r6], #-3589	; 0xfffff1fb
    1f64:	0e540000 	cdpeq	0, 5, cr0, cr4, cr0, {0}
    1f68:	000008f8 	strdeq	r0, [r0], -r8
    1f6c:	0100e205 	tsteq	r0, r5, lsl #4
    1f70:	0e580000 	cdpeq	0, 5, cr0, cr8, cr0, {0}
    1f74:	00000884 	andeq	r0, r0, r4, lsl #17
    1f78:	00f5e405 	rscseq	lr, r5, r5, lsl #8
    1f7c:	0e5c0000 	cdpeq	0, 5, cr0, cr12, cr0, {0}
    1f80:	000007e2 	andeq	r0, r0, r2, ror #15
    1f84:	005de505 	subseq	lr, sp, r5, lsl #10
    1f88:	00640000 	rsbeq	r0, r4, r0
    1f8c:	00005d14 	andeq	r5, r0, r4, lsl sp
    1f90:	00041600 	andeq	r1, r4, r0, lsl #12
    1f94:	04161500 	ldreq	r1, [r6], #-1280	; 0xfffffb00
    1f98:	6b150000 	blvs	541fa0 <startup-0x1fabe060>
    1f9c:	15000000 	strne	r0, [r0, #-0]
    1fa0:	00000553 	andeq	r0, r0, r3, asr r5
    1fa4:	00005d15 	andeq	r5, r0, r5, lsl sp
    1fa8:	04060000 	streq	r0, [r6], #-0
    1fac:	00000421 	andeq	r0, r0, r1, lsr #8
    1fb0:	00041616 	andeq	r1, r4, r6, lsl r6
    1fb4:	08e21700 	stmiaeq	r2!, {r8, r9, sl, ip}^
    1fb8:	04280000 	strteq	r0, [r8], #-0
    1fbc:	53023905 	movwpl	r3, #10501	; 0x2905
    1fc0:	18000005 	stmdane	r0, {r0, r2}
    1fc4:	00000842 	andeq	r0, r0, r2, asr #16
    1fc8:	5d023b05 	vstrpl	d3, [r2, #-20]	; 0xffffffec
    1fcc:	00000000 	andeq	r0, r0, r0
    1fd0:	0006c918 	andeq	ip, r6, r8, lsl r9
    1fd4:	02400500 	subeq	r0, r0, #0, 10
    1fd8:	0000063a 	andeq	r0, r0, sl, lsr r6
    1fdc:	07861804 	streq	r1, [r6, r4, lsl #16]
    1fe0:	40050000 	andmi	r0, r5, r0
    1fe4:	00063a02 	andeq	r3, r6, r2, lsl #20
    1fe8:	51180800 	tstpl	r8, r0, lsl #16
    1fec:	05000007 	streq	r0, [r0, #-7]
    1ff0:	063a0240 	ldrteq	r0, [sl], -r0, asr #4
    1ff4:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
    1ff8:	000008a5 	andeq	r0, r0, r5, lsr #17
    1ffc:	5d024205 	sfmpl	f4, 4, [r2, #-20]	; 0xffffffec
    2000:	10000000 	andne	r0, r0, r0
    2004:	00060518 	andeq	r0, r6, r8, lsl r5
    2008:	02430500 	subeq	r0, r3, #0, 10
    200c:	0000081c 	andeq	r0, r0, ip, lsl r8
    2010:	08c11814 	stmiaeq	r1, {r2, r4, fp, ip}^
    2014:	46050000 	strmi	r0, [r5], -r0
    2018:	00005d02 	andeq	r5, r0, r2, lsl #26
    201c:	af183000 	svcge	0x00183000
    2020:	05000008 	streq	r0, [r0, #-8]
    2024:	08310247 	ldmdaeq	r1!, {r0, r1, r2, r6, r9}
    2028:	18340000 	ldmdane	r4!, {}	; <UNPREDICTABLE>
    202c:	00000811 	andeq	r0, r0, r1, lsl r8
    2030:	5d024905 	vstrpl.16	s8, [r2, #-10]	; <UNPREDICTABLE>
    2034:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    2038:	0008b718 	andeq	fp, r8, r8, lsl r7
    203c:	024b0500 	subeq	r0, fp, #0, 10
    2040:	00000842 	andeq	r0, r0, r2, asr #16
    2044:	07c5183c 			; <UNDEFINED> instruction: 0x07c5183c
    2048:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
    204c:	00016902 	andeq	r6, r1, r2, lsl #18
    2050:	70184000 	andsvc	r4, r8, r0
    2054:	05000007 	streq	r0, [r0, #-7]
    2058:	005d024f 	subseq	r0, sp, pc, asr #4
    205c:	18440000 	stmdane	r4, {}^	; <UNPREDICTABLE>
    2060:	00000a0f 	andeq	r0, r0, pc, lsl #20
    2064:	69025005 	stmdbvs	r2, {r0, r2, ip, lr}
    2068:	48000001 	stmdami	r0, {r0}
    206c:	00082318 	andeq	r2, r8, r8, lsl r3
    2070:	02510500 	subseq	r0, r1, #0, 10
    2074:	00000848 	andeq	r0, r0, r8, asr #16
    2078:	078e184c 	streq	r1, [lr, ip, asr #16]
    207c:	54050000 	strpl	r0, [r5], #-0
    2080:	00005d02 	andeq	r5, r0, r2, lsl #26
    2084:	d9185000 	ldmdble	r8, {ip, lr}
    2088:	05000006 	streq	r0, [r0, #-6]
    208c:	05530255 	ldrbeq	r0, [r3, #-597]	; 0xfffffdab
    2090:	18540000 	ldmdane	r4, {}^	; <UNPREDICTABLE>
    2094:	0000083b 	andeq	r0, r0, fp, lsr r8
    2098:	fa027805 	blx	a00b4 <startup-0x1ff5ff4c>
    209c:	58000007 	stmdapl	r0, {r0, r1, r2}
    20a0:	00080919 	andeq	r0, r8, r9, lsl r9
    20a4:	027c0500 	rsbseq	r0, ip, #0, 10
    20a8:	00000286 	andeq	r0, r0, r6, lsl #5
    20ac:	a3190148 	tstge	r9, #72, 2
    20b0:	05000007 	streq	r0, [r0, #-7]
    20b4:	0248027d 	subeq	r0, r8, #-805306361	; 0xd0000007
    20b8:	014c0000 	mrseq	r0, (UNDEF: 76)
    20bc:	0009ac19 	andeq	sl, r9, r9, lsl ip
    20c0:	02810500 	addeq	r0, r1, #0, 10
    20c4:	00000859 	andeq	r0, r0, r9, asr r8
    20c8:	b21902dc 	andslt	r0, r9, #220, 4	; 0xc000000d
    20cc:	05000006 	streq	r0, [r0, #-6]
    20d0:	05ff0286 	ldrbeq	r0, [pc, #646]!	; 235e <startup-0x1fffdca2>
    20d4:	02e00000 	rsceq	r0, r0, #0
    20d8:	00069719 	andeq	r9, r6, r9, lsl r7
    20dc:	02880500 	addeq	r0, r8, #0, 10
    20e0:	00000865 	andeq	r0, r0, r5, ror #16
    20e4:	060002ec 	streq	r0, [r0], -ip, ror #5
    20e8:	00055904 	andeq	r5, r5, r4, lsl #18
    20ec:	08010200 	stmdaeq	r1, {r9}
    20f0:	000000c7 	andeq	r0, r0, r7, asr #1
    20f4:	00055916 	andeq	r5, r5, r6, lsl r9
    20f8:	f8040600 			; <UNDEFINED> instruction: 0xf8040600
    20fc:	14000003 	strne	r0, [r0], #-3
    2100:	0000005d 	andeq	r0, r0, sp, asr r0
    2104:	00000589 	andeq	r0, r0, r9, lsl #11
    2108:	00041615 	andeq	r1, r4, r5, lsl r6
    210c:	006b1500 	rsbeq	r1, fp, r0, lsl #10
    2110:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
    2114:	15000005 	strne	r0, [r0, #-5]
    2118:	0000005d 	andeq	r0, r0, sp, asr r0
    211c:	60040600 	andvs	r0, r4, r0, lsl #12
    2120:	06000005 	streq	r0, [r0], -r5
    2124:	00056b04 	andeq	r6, r5, r4, lsl #22
    2128:	008e1400 	addeq	r1, lr, r0, lsl #8
    212c:	05b30000 	ldreq	r0, [r3, #0]!
    2130:	16150000 	ldrne	r0, [r5], -r0
    2134:	15000004 	strne	r0, [r0, #-4]
    2138:	0000006b 	andeq	r0, r0, fp, rrx
    213c:	00008e15 	andeq	r8, r0, r5, lsl lr
    2140:	005d1500 	subseq	r1, sp, r0, lsl #10
    2144:	06000000 	streq	r0, [r0], -r0
    2148:	00059504 	andeq	r9, r5, r4, lsl #10
    214c:	005d1400 	subseq	r1, sp, r0, lsl #8
    2150:	05cd0000 	strbeq	r0, [sp]
    2154:	16150000 	ldrne	r0, [r5], -r0
    2158:	15000004 	strne	r0, [r0, #-4]
    215c:	0000006b 	andeq	r0, r0, fp, rrx
    2160:	b9040600 	stmdblt	r4, {r9, sl}
    2164:	0b000005 	bleq	2180 <startup-0x1fffde80>
    2168:	0000002c 	andeq	r0, r0, ip, lsr #32
    216c:	000005e3 	andeq	r0, r0, r3, ror #11
    2170:	0000640c 	andeq	r6, r0, ip, lsl #8
    2174:	0b000200 	bleq	297c <startup-0x1fffd684>
    2178:	0000002c 	andeq	r0, r0, ip, lsr #32
    217c:	000005f3 	strdeq	r0, [r0], -r3
    2180:	0000640c 	andeq	r6, r0, ip, lsl #8
    2184:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2188:	0000086a 	andeq	r0, r0, sl, ror #16
    218c:	ce011f05 	cdpgt	15, 0, cr1, cr1, cr5, {0}
    2190:	1a000002 	bne	21a0 <startup-0x1fffde60>
    2194:	00000993 	muleq	r0, r3, r9
    2198:	0123050c 			; <UNDEFINED> instruction: 0x0123050c
    219c:	00000634 	andeq	r0, r0, r4, lsr r6
    21a0:	00089218 	andeq	r9, r8, r8, lsl r2
    21a4:	01250500 			; <UNDEFINED> instruction: 0x01250500
    21a8:	00000634 	andeq	r0, r0, r4, lsr r6
    21ac:	079c1800 	ldreq	r1, [ip, r0, lsl #16]
    21b0:	26050000 	strcs	r0, [r5], -r0
    21b4:	00005d01 	andeq	r5, r0, r1, lsl #26
    21b8:	64180400 	ldrvs	r0, [r8], #-1024	; 0xfffffc00
    21bc:	05000008 	streq	r0, [r0, #-8]
    21c0:	063a0127 	ldrteq	r0, [sl], -r7, lsr #2
    21c4:	00080000 	andeq	r0, r8, r0
    21c8:	05ff0406 	ldrbeq	r0, [pc, #1030]!	; 25d6 <startup-0x1fffda2a>
    21cc:	04060000 	streq	r0, [r6], #-0
    21d0:	000005f3 	strdeq	r0, [r0], -r3
    21d4:	0005fd1a 	andeq	pc, r5, sl, lsl sp	; <UNPREDICTABLE>
    21d8:	3f050e00 	svccc	0x00050e00
    21dc:	00067501 	andeq	r7, r6, r1, lsl #10
    21e0:	08e91800 	stmiaeq	r9!, {fp, ip}^
    21e4:	40050000 	andmi	r0, r5, r0
    21e8:	00067501 	andeq	r7, r6, r1, lsl #10
    21ec:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    21f0:	05000009 	streq	r0, [r0, #-9]
    21f4:	06750141 	ldrbteq	r0, [r5], -r1, asr #2
    21f8:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
    21fc:	0000094a 	andeq	r0, r0, sl, asr #18
    2200:	3a014205 	bcc	52a1c <startup-0x1ffad5e4>
    2204:	0c000000 	stceq	0, cr0, [r0], {-0}
    2208:	003a0b00 	eorseq	r0, sl, r0, lsl #22
    220c:	06850000 	streq	r0, [r5], r0
    2210:	640c0000 	strvs	r0, [ip], #-0
    2214:	02000000 	andeq	r0, r0, #0
    2218:	05d01b00 	ldrbeq	r1, [r0, #2816]	; 0xb00
    221c:	07860259 			; <UNDEFINED> instruction: 0x07860259
    2220:	77180000 	ldrvc	r0, [r8, -r0]
    2224:	05000009 	streq	r0, [r0, #-9]
    2228:	0064025b 	rsbeq	r0, r4, fp, asr r2
    222c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2230:	00000934 	andeq	r0, r0, r4, lsr r9
    2234:	53025c05 	movwpl	r5, #11269	; 0x2c05
    2238:	04000005 	streq	r0, [r0], #-5
    223c:	0007b818 	andeq	fp, r7, r8, lsl r8
    2240:	025d0500 	subseq	r0, sp, #0, 10
    2244:	00000786 	andeq	r0, r0, r6, lsl #15
    2248:	09e61808 	stmibeq	r6!, {r3, fp, ip}^
    224c:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
    2250:	00017f02 	andeq	r7, r1, r2, lsl #30
    2254:	61182400 	tstvs	r8, r0, lsl #8
    2258:	05000007 	streq	r0, [r0, #-7]
    225c:	005d025f 	subseq	r0, sp, pc, asr r2
    2260:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
    2264:	0000088d 	andeq	r0, r0, sp, lsl #17
    2268:	56026005 	strpl	r6, [r2], -r5
    226c:	50000000 	andpl	r0, r0, r0
    2270:	0009fc18 	andeq	pc, r9, r8, lsl ip	; <UNPREDICTABLE>
    2274:	02610500 	rsbeq	r0, r1, #0, 10
    2278:	00000640 	andeq	r0, r0, r0, asr #12
    227c:	08981858 	ldmeq	r8, {r3, r4, r6, fp, ip}
    2280:	62050000 	andvs	r0, r5, #0
    2284:	0000f502 	andeq	pc, r0, r2, lsl #10
    2288:	01186800 	tsteq	r8, r0, lsl #16
    228c:	0500000a 	streq	r0, [r0, #-10]
    2290:	00f50263 	rscseq	r0, r5, r3, ror #4
    2294:	18700000 	ldmdane	r0!, {}^	; <UNPREDICTABLE>
    2298:	0000082d 	andeq	r0, r0, sp, lsr #16
    229c:	f5026405 			; <UNDEFINED> instruction: 0xf5026405
    22a0:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    22a4:	0009a218 	andeq	sl, r9, r8, lsl r2
    22a8:	02650500 	rsbeq	r0, r5, #0, 10
    22ac:	00000796 	muleq	r0, r6, r7
    22b0:	07ac1880 	streq	r1, [ip, r0, lsl #17]!
    22b4:	66050000 	strvs	r0, [r5], -r0
    22b8:	0007a602 	andeq	sl, r7, r2, lsl #12
    22bc:	57188800 	ldrpl	r8, [r8, -r0, lsl #16]
    22c0:	05000009 	streq	r0, [r0, #-9]
    22c4:	005d0267 	subseq	r0, sp, r7, ror #4
    22c8:	18a00000 	stmiane	r0!, {}	; <UNPREDICTABLE>
    22cc:	000006fa 	strdeq	r0, [r0], -sl
    22d0:	f5026805 			; <UNDEFINED> instruction: 0xf5026805
    22d4:	a4000000 	strge	r0, [r0], #-0
    22d8:	00065b18 	andeq	r5, r6, r8, lsl fp
    22dc:	02690500 	rsbeq	r0, r9, #0, 10
    22e0:	000000f5 	strdeq	r0, [r0], -r5
    22e4:	06e918ac 	strbteq	r1, [r9], ip, lsr #17
    22e8:	6a050000 	bvs	1422f0 <startup-0x1febdd10>
    22ec:	0000f502 	andeq	pc, r0, r2, lsl #10
    22f0:	1018b400 	andsne	fp, r8, r0, lsl #8
    22f4:	05000006 	streq	r0, [r0, #-6]
    22f8:	00f5026b 	rscseq	r0, r5, fp, ror #4
    22fc:	18bc0000 	ldmne	ip!, {}	; <UNPREDICTABLE>
    2300:	0000061f 	andeq	r0, r0, pc, lsl r6
    2304:	f5026c05 			; <UNDEFINED> instruction: 0xf5026c05
    2308:	c4000000 	strgt	r0, [r0], #-0
    230c:	00084018 	andeq	r4, r8, r8, lsl r0
    2310:	026d0500 	rsbeq	r0, sp, #0, 10
    2314:	0000005d 	andeq	r0, r0, sp, asr r0
    2318:	590b00cc 	stmdbpl	fp, {r2, r3, r6, r7}
    231c:	96000005 	strls	r0, [r0], -r5
    2320:	0c000007 	stceq	0, cr0, [r0], {7}
    2324:	00000064 	andeq	r0, r0, r4, rrx
    2328:	590b0019 	stmdbpl	fp, {r0, r3, r4}
    232c:	a6000005 	strge	r0, [r0], -r5
    2330:	0c000007 	stceq	0, cr0, [r0], {7}
    2334:	00000064 	andeq	r0, r0, r4, rrx
    2338:	590b0007 	stmdbpl	fp, {r0, r1, r2}
    233c:	b6000005 	strlt	r0, [r0], -r5
    2340:	0c000007 	stceq	0, cr0, [r0], {7}
    2344:	00000064 	andeq	r0, r0, r4, rrx
    2348:	f01b0017 			; <UNDEFINED> instruction: 0xf01b0017
    234c:	da027205 	ble	9eb68 <startup-0x1ff61498>
    2350:	18000007 	stmdane	r0, {r0, r1, r2}
    2354:	000007f4 	strdeq	r0, [r0], -r4
    2358:	da027505 	ble	9f774 <startup-0x1ff6088c>
    235c:	00000007 	andeq	r0, r0, r7
    2360:	00099918 	andeq	r9, r9, r8, lsl r9
    2364:	02760500 	rsbseq	r0, r6, #0, 10
    2368:	000007ea 	andeq	r0, r0, sl, ror #15
    236c:	c80b0078 	stmdagt	fp, {r3, r4, r5, r6}
    2370:	ea000002 	b	2380 <startup-0x1fffdc80>
    2374:	0c000007 	stceq	0, cr0, [r0], {7}
    2378:	00000064 	andeq	r0, r0, r4, rrx
    237c:	640b001d 	strvs	r0, [fp], #-29	; 0xffffffe3
    2380:	fa000000 	blx	2388 <startup-0x1fffdc78>
    2384:	0c000007 	stceq	0, cr0, [r0], {7}
    2388:	00000064 	andeq	r0, r0, r4, rrx
    238c:	f01c001d 			; <UNDEFINED> instruction: 0xf01c001d
    2390:	1c025705 	stcne	7, cr5, [r2], {5}
    2394:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
    2398:	000008e2 	andeq	r0, r0, r2, ror #17
    239c:	85026e05 	strhi	r6, [r2, #-3589]	; 0xfffff1fb
    23a0:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    23a4:	000009c5 	andeq	r0, r0, r5, asr #19
    23a8:	b6027705 	strlt	r7, [r2], -r5, lsl #14
    23ac:	00000007 	andeq	r0, r0, r7
    23b0:	0005590b 	andeq	r5, r5, fp, lsl #18
    23b4:	00082c00 	andeq	r2, r8, r0, lsl #24
    23b8:	00640c00 	rsbeq	r0, r4, r0, lsl #24
    23bc:	00180000 	andseq	r0, r8, r0
    23c0:	00065007 	andeq	r5, r6, r7
    23c4:	2c040600 	stccs	6, cr0, [r4], {-0}
    23c8:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
    23cc:	00000842 	andeq	r0, r0, r2, asr #16
    23d0:	00041615 	andeq	r1, r4, r5, lsl r6
    23d4:	04060000 	streq	r0, [r6], #-0
    23d8:	00000837 	andeq	r0, r0, r7, lsr r8
    23dc:	01690406 	cmneq	r9, r6, lsl #8
    23e0:	591e0000 	ldmdbpl	lr, {}	; <UNPREDICTABLE>
    23e4:	15000008 	strne	r0, [r0, #-8]
    23e8:	0000005d 	andeq	r0, r0, sp, asr r0
    23ec:	5f040600 	svcpl	0x00040600
    23f0:	06000008 	streq	r0, [r0], -r8
    23f4:	00084e04 	andeq	r4, r8, r4, lsl #28
    23f8:	05f30b00 	ldrbeq	r0, [r3, #2816]!	; 0xb00
    23fc:	08750000 	ldmdaeq	r5!, {}^	; <UNPREDICTABLE>
    2400:	640c0000 	strvs	r0, [ip], #-0
    2404:	02000000 	andeq	r0, r0, #0
    2408:	096b1f00 	stmdbeq	fp!, {r8, r9, sl, fp, ip}^
    240c:	07050000 	streq	r0, [r5, -r0]
    2410:	00041603 	andeq	r1, r4, r3, lsl #12
    2414:	09641f00 	stmdbeq	r4!, {r8, r9, sl, fp, ip}^
    2418:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    241c:	00041c03 	andeq	r1, r4, r3, lsl #24
    2420:	06180d00 	ldreq	r0, [r8], -r0, lsl #26
    2424:	00091a21 	andeq	r1, r9, r1, lsr #20
    2428:	02e50e00 	rsceq	r0, r5, #0, 28
    242c:	22060000 	andcs	r0, r6, #0
    2430:	00000064 	andeq	r0, r0, r4, rrx
    2434:	01ac0e00 			; <UNDEFINED> instruction: 0x01ac0e00
    2438:	23060000 	movwcs	r0, #24576	; 0x6000
    243c:	0000003a 	andeq	r0, r0, sl, lsr r0
    2440:	020e0e04 	andeq	r0, lr, #4, 28	; 0x40
    2444:	24060000 	strcs	r0, [r6], #-0
    2448:	0000003a 	andeq	r0, r0, sl, lsr r0
    244c:	02aa0e06 	adceq	r0, sl, #6, 28	; 0x60
    2450:	25060000 	strcs	r0, [r6, #-0]
    2454:	00000064 	andeq	r0, r0, r4, rrx
    2458:	022c0e08 	eoreq	r0, ip, #8, 28	; 0x80
    245c:	26060000 	strcs	r0, [r6], -r0
    2460:	00000064 	andeq	r0, r0, r4, rrx
    2464:	02b20e0c 	adcseq	r0, r2, #12, 28	; 0xc0
    2468:	27060000 	strcs	r0, [r6, -r0]
    246c:	0000002c 	andeq	r0, r0, ip, lsr #32
    2470:	02a20e10 	adceq	r0, r2, #16, 28	; 0x100
    2474:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
    2478:	0000002c 	andeq	r0, r0, ip, lsr #32
    247c:	02020e11 	andeq	r0, r2, #272	; 0x110
    2480:	29060000 	stmdbcs	r6, {}	; <UNPREDICTABLE>
    2484:	0000003a 	andeq	r0, r0, sl, lsr r0
    2488:	025b0e12 	subseq	r0, fp, #288	; 0x120
    248c:	2a060000 	bcs	182494 <startup-0x1fe7db6c>
    2490:	0000002c 	andeq	r0, r0, ip, lsr #32
    2494:	01cb0e14 	biceq	r0, fp, r4, lsl lr
    2498:	2b060000 	blcs	1824a0 <startup-0x1fe7db60>
    249c:	0000002c 	andeq	r0, r0, ip, lsr #32
    24a0:	024f0e15 	subeq	r0, pc, #336	; 0x150
    24a4:	2c060000 	stccs	0, cr0, [r6], {-0}
    24a8:	0000003a 	andeq	r0, r0, sl, lsr r0
    24ac:	e6050016 			; <UNDEFINED> instruction: 0xe6050016
    24b0:	06000001 	streq	r0, [r0], -r1
    24b4:	00088d2d 	andeq	r8, r8, sp, lsr #26
    24b8:	07fb2000 	ldrbeq	r2, [fp, r0]!
    24bc:	23010000 	movwcs	r0, #4096	; 0x1000
    24c0:	0000002c 	andeq	r0, r0, ip, lsr #32
    24c4:	20000e40 	andcs	r0, r0, r0, asr #28
    24c8:	00000088 	andeq	r0, r0, r8, lsl #1
    24cc:	09699c01 	stmdbeq	r9!, {r0, sl, fp, ip, pc}^
    24d0:	72210000 	eorvc	r0, r1, #0
    24d4:	0100776f 	tsteq	r0, pc, ror #14
    24d8:	00002c25 	andeq	r2, r0, r5, lsr #24
    24dc:	6f910200 	svcvs	0x00910200
    24e0:	6c6f6321 	stclvs	3, cr6, [pc], #-132	; 2464 <startup-0x1fffdb9c>
    24e4:	2c250100 	stfcss	f0, [r5], #-0
    24e8:	02000000 	andeq	r0, r0, #0
    24ec:	6b216e91 	blvs	85df38 <startup-0x1f7a20c8>
    24f0:	01007965 	tsteq	r0, r5, ror #18
    24f4:	00096926 	andeq	r6, r9, r6, lsr #18
    24f8:	5c910200 	lfmpl	f0, 4, [r1], {0}
    24fc:	002c0b00 	eoreq	r0, ip, r0, lsl #22
    2500:	09790000 	ldmdbeq	r9!, {}^	; <UNPREDICTABLE>
    2504:	640c0000 	strvs	r0, [ip], #-0
    2508:	0f000000 	svceq	0x00000000
    250c:	0a7e2000 	beq	1f8a514 <startup-0x1e075aec>
    2510:	11010000 	mrsne	r0, (UNDEF: 1)
    2514:	0000002c 	andeq	r0, r0, ip, lsr #32
    2518:	20000dac 	andcs	r0, r0, ip, lsr #27
    251c:	00000094 	muleq	r0, r4, r0
    2520:	09c99c01 	stmibeq	r9, {r0, sl, fp, ip, pc}^
    2524:	63210000 			; <UNDEFINED> instruction: 0x63210000
    2528:	2c130100 	ldfcss	f0, [r3], {-0}
    252c:	02000000 	andeq	r0, r0, #0
    2530:	72216e91 	eorvc	r6, r1, #2320	; 0x910
    2534:	0100776f 	tsteq	r0, pc, ror #14
    2538:	00002c14 	andeq	r2, r0, r4, lsl ip
    253c:	6f910200 	svcvs	0x00910200
    2540:	6c6f6321 	stclvs	3, cr6, [pc], #-132	; 24c4 <startup-0x1fffdb3c>
    2544:	2c140100 	ldfcss	f0, [r4], {-0}
    2548:	02000000 	andeq	r0, r0, #0
    254c:	6b216d91 	blvs	85db98 <startup-0x1f7a2468>
    2550:	01007965 	tsteq	r0, r5, ror #18
    2554:	00096915 	andeq	r6, r9, r5, lsl r9
    2558:	5c910200 	lfmpl	f0, 4, [r1], {0}
    255c:	0ac02200 	beq	ff00ad64 <obstacle+0xdf009df8>
    2560:	04010000 	streq	r0, [r1], #-0
    2564:	20000d54 	andcs	r0, r0, r4, asr sp
    2568:	00000058 	andeq	r0, r0, r8, asr r0
    256c:	72239c01 	eorvc	r9, r3, #256	; 0x100
    2570:	0100776f 	tsteq	r0, pc, ror #14
    2574:	00002c04 	andeq	r2, r0, r4, lsl #24
    2578:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0024 	bleq	2c00ac <startup-0x1fd3ff54>
  18:	0e030b3e 	vmoveq.16	d3[0], r0
  1c:	34030000 	strcc	r0, [r3], #-0
  20:	3a0e0300 	bcc	380c28 <startup-0x1fc7f3d8>
  24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  28:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
  2c:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
  30:	0b0b0024 	bleq	2c00c8 <startup-0x1fd3ff38>
  34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  38:	35050000 	strcc	r0, [r5, #-0]
  3c:	00134900 	andseq	r4, r3, r0, lsl #18
  40:	012e0600 			; <UNDEFINED> instruction: 0x012e0600
  44:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  48:	0b3b0b3a 	bleq	ec2d38 <startup-0x1f13d2c8>
  4c:	01111927 	tsteq	r1, r7, lsr #18
  50:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  54:	01194296 			; <UNDEFINED> instruction: 0x01194296
  58:	07000013 	smladeq	r0, r3, r0, r0
  5c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
  60:	0b3b0b3a 	bleq	ec2d50 <startup-0x1f13d2b0>
  64:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  68:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
  6c:	03193f00 	tsteq	r9, #0, 30
  70:	3b0b3a0e 	blcc	2ce8b0 <startup-0x1fd31750>
  74:	1119270b 	tstne	r9, fp, lsl #14
  78:	40061201 	andmi	r1, r6, r1, lsl #4
  7c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  80:	05090000 	streq	r0, [r9, #-0]
  84:	3a080300 	bcc	200c8c <startup-0x1fdff374>
  88:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  8c:	00180213 	andseq	r0, r8, r3, lsl r2
  90:	002e0a00 	eoreq	r0, lr, r0, lsl #20
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	01111927 	tsteq	r1, r7, lsr #18
  a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  a4:	00194296 	mulseq	r9, r6, r2
  a8:	11010000 	mrsne	r0, (UNDEF: 1)
  ac:	130e2501 	movwne	r2, #58625	; 0xe501
  b0:	1b0e030b 	blne	380ce4 <startup-0x1fc7f31c>
  b4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
  b8:	00171006 	andseq	r1, r7, r6
  bc:	01130200 	tsteq	r3, r0, lsl #4
  c0:	0b3a0b0b 	bleq	e82cf4 <startup-0x1f17d30c>
  c4:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  c8:	0d030000 	stceq	0, cr0, [r3, #-0]
  cc:	3a0e0300 	bcc	380cd4 <startup-0x1fc7f32c>
  d0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  d4:	000b3813 	andeq	r3, fp, r3, lsl r8
  d8:	00240400 	eoreq	r0, r4, r0, lsl #8
  dc:	0b3e0b0b 	bleq	f82d10 <startup-0x1f07d2f0>
  e0:	00000e03 	andeq	r0, r0, r3, lsl #28
  e4:	03001605 	movweq	r1, #1541	; 0x605
  e8:	3b0b3a0e 	blcc	2ce928 <startup-0x1fd316d8>
  ec:	0013490b 	andseq	r4, r3, fp, lsl #18
  f0:	012e0600 			; <UNDEFINED> instruction: 0x012e0600
  f4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  f8:	0b3b0b3a 	bleq	ec2de8 <startup-0x1f13d218>
  fc:	01111927 	tsteq	r1, r7, lsr #18
 100:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 104:	01194296 			; <UNDEFINED> instruction: 0x01194296
 108:	07000013 	smladeq	r0, r3, r0, r0
 10c:	08030005 	stmdaeq	r3, {r0, r2}
 110:	0b3b0b3a 	bleq	ec2e00 <startup-0x1f13d200>
 114:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 118:	34080000 	strcc	r0, [r8], #-0
 11c:	3a0e0300 	bcc	380d24 <startup-0x1fc7f2dc>
 120:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 124:	00180213 	andseq	r0, r8, r3, lsl r2
 128:	010b0900 	tsteq	fp, r0, lsl #18
 12c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 130:	340a0000 	strcc	r0, [sl], #-0
 134:	3a080300 	bcc	200d3c <startup-0x1fdff2c4>
 138:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 13c:	00180213 	andseq	r0, r8, r3, lsl r2
 140:	00240b00 	eoreq	r0, r4, r0, lsl #22
 144:	0b3e0b0b 	bleq	f82d78 <startup-0x1f07d288>
 148:	00000803 	andeq	r0, r0, r3, lsl #16
 14c:	3f012e0c 	svccc	0x00012e0c
 150:	3a0e0319 	bcc	380dbc <startup-0x1fc7f244>
 154:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 158:	01193c13 	tsteq	r9, r3, lsl ip
 15c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 160:	00000018 	andeq	r0, r0, r8, lsl r0
 164:	3f012e0e 	svccc	0x00012e0e
 168:	3a0e0319 	bcc	380dd4 <startup-0x1fc7f22c>
 16c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 170:	00193c13 	andseq	r3, r9, r3, lsl ip
 174:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
 178:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 17c:	0b3b0b3a 	bleq	ec2e6c <startup-0x1f13d194>
 180:	13491927 	movtne	r1, #39207	; 0x9927
 184:	06120111 			; <UNDEFINED> instruction: 0x06120111
 188:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 18c:	00130119 	andseq	r0, r3, r9, lsl r1
 190:	00051000 	andeq	r1, r5, r0
 194:	0b3a0e03 	bleq	e839a8 <startup-0x1f17c658>
 198:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 19c:	00001802 	andeq	r1, r0, r2, lsl #16
 1a0:	3f012e11 	svccc	0x00012e11
 1a4:	3a0e0319 	bcc	380e10 <startup-0x1fc7f1f0>
 1a8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 1ac:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 1b0:	97184006 	ldrls	r4, [r8, -r6]
 1b4:	13011942 	movwne	r1, #6466	; 0x1942
 1b8:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 1bc:	03193f01 	tsteq	r9, #1, 30
 1c0:	3b0b3a0e 	blcc	2cea00 <startup-0x1fd31600>
 1c4:	1119270b 	tstne	r9, fp, lsl #14
 1c8:	40061201 	andmi	r1, r6, r1, lsl #4
 1cc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 1d0:	01000000 	mrseq	r0, (UNDEF: 0)
 1d4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 1d8:	0e030b13 	vmoveq.32	d3[0], r0
 1dc:	01110e1b 	tsteq	r1, fp, lsl lr
 1e0:	17100612 			; <UNDEFINED> instruction: 0x17100612
 1e4:	24020000 	strcs	r0, [r2], #-0
 1e8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 1ec:	000e030b 	andeq	r0, lr, fp, lsl #6
 1f0:	01130300 	tsteq	r3, r0, lsl #6
 1f4:	0b0b0e03 	bleq	2c3a08 <startup-0x1fd3c5f8>
 1f8:	0b3b0b3a 	bleq	ec2ee8 <startup-0x1f13d118>
 1fc:	00001301 	andeq	r1, r0, r1, lsl #6
 200:	03000d04 	movweq	r0, #3332	; 0xd04
 204:	3b0b3a08 	blcc	2cea2c <startup-0x1fd315d4>
 208:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 20c:	0500000b 	streq	r0, [r0, #-11]
 210:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 214:	0b3b0b3a 	bleq	ec2f04 <startup-0x1f13d0fc>
 218:	00001349 	andeq	r1, r0, r9, asr #6
 21c:	03000d06 	movweq	r0, #3334	; 0xd06
 220:	3b0b3a0e 	blcc	2cea60 <startup-0x1fd315a0>
 224:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 228:	0700000b 	streq	r0, [r0, -fp]
 22c:	0b0b0024 	bleq	2c02c4 <startup-0x1fd3fd3c>
 230:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 234:	01080000 	mrseq	r0, (UNDEF: 8)
 238:	01134901 	tsteq	r3, r1, lsl #18
 23c:	09000013 	stmdbeq	r0, {r0, r1, r4}
 240:	13490021 	movtne	r0, #36897	; 0x9021
 244:	00000b2f 	andeq	r0, r0, pc, lsr #22
 248:	0b000f0a 	bleq	3e78 <startup-0x1fffc188>
 24c:	0013490b 	andseq	r4, r3, fp, lsl #18
 250:	01150b00 	tsteq	r5, r0, lsl #22
 254:	13011927 	movwne	r1, #6439	; 0x1927
 258:	050c0000 	streq	r0, [ip, #-0]
 25c:	00134900 	andseq	r4, r3, r0, lsl #18
 260:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
 264:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 268:	0b3b0b3a 	bleq	ec2f58 <startup-0x1f13d0a8>
 26c:	01111927 	tsteq	r1, r7, lsr #18
 270:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 274:	01194296 			; <UNDEFINED> instruction: 0x01194296
 278:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 27c:	08030005 	stmdaeq	r3, {r0, r2}
 280:	0b3b0b3a 	bleq	ec2f70 <startup-0x1f13d090>
 284:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 288:	0b0f0000 	bleq	3c0290 <startup-0x1fc3fd70>
 28c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 290:	10000006 	andne	r0, r0, r6
 294:	08030034 	stmdaeq	r3, {r2, r4, r5}
 298:	0b3b0b3a 	bleq	ec2f88 <startup-0x1f13d078>
 29c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 2a0:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 2a4:	03193f01 	tsteq	r9, #1, 30
 2a8:	3b0b3a0e 	blcc	2ceae8 <startup-0x1fd31518>
 2ac:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 2b0:	12000019 	andne	r0, r0, #25
 2b4:	00000018 	andeq	r0, r0, r8, lsl r0
 2b8:	3f012e13 	svccc	0x00012e13
 2bc:	3a0e0319 	bcc	380f28 <startup-0x1fc7f0d8>
 2c0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 2c4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 2c8:	97184006 	ldrls	r4, [r8, -r6]
 2cc:	00001942 	andeq	r1, r0, r2, asr #18
 2d0:	03000514 	movweq	r0, #1300	; 0x514
 2d4:	3b0b3a0e 	blcc	2ceb14 <startup-0x1fd314ec>
 2d8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 2dc:	00000018 	andeq	r0, r0, r8, lsl r0
 2e0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 2e4:	030b130e 	movweq	r1, #45838	; 0xb30e
 2e8:	110e1b0e 	tstne	lr, lr, lsl #22
 2ec:	10061201 	andne	r1, r6, r1, lsl #4
 2f0:	02000017 	andeq	r0, r0, #23
 2f4:	0b0b0024 	bleq	2c038c <startup-0x1fd3fc74>
 2f8:	0e030b3e 	vmoveq.16	d3[0], r0
 2fc:	34030000 	strcc	r0, [r3], #-0
 300:	3a0e0300 	bcc	380f08 <startup-0x1fc7f0f8>
 304:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 308:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 30c:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
 310:	0b0b0024 	bleq	2c03a8 <startup-0x1fd3fc58>
 314:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 318:	35050000 	strcc	r0, [r5, #-0]
 31c:	00134900 	andseq	r4, r3, r0, lsl #18
 320:	012e0600 			; <UNDEFINED> instruction: 0x012e0600
 324:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 328:	0b3b0b3a 	bleq	ec3018 <startup-0x1f13cfe8>
 32c:	01111927 	tsteq	r1, r7, lsr #18
 330:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 334:	00194296 	mulseq	r9, r6, r2
 338:	010b0700 	tsteq	fp, r0, lsl #14
 33c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 340:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
 344:	03193f01 	tsteq	r9, #1, 30
 348:	3b0b3a0e 	blcc	2ceb88 <startup-0x1fd31478>
 34c:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 350:	09000019 	stmdbeq	r0, {r0, r3, r4}
 354:	00000018 	andeq	r0, r0, r8, lsl r0
 358:	01110100 	tsteq	r1, r0, lsl #2
 35c:	0b130e25 	bleq	4c3bf8 <startup-0x1fb3c408>
 360:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 364:	06120111 			; <UNDEFINED> instruction: 0x06120111
 368:	00001710 	andeq	r1, r0, r0, lsl r7
 36c:	0b011302 	bleq	44f7c <startup-0x1ffbb084>
 370:	3b0b3a0b 	blcc	2ceba4 <startup-0x1fd3145c>
 374:	0013010b 	andseq	r0, r3, fp, lsl #2
 378:	000d0300 	andeq	r0, sp, r0, lsl #6
 37c:	0b3a0e03 	bleq	e83b90 <startup-0x1f17c470>
 380:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 384:	00000b38 	andeq	r0, r0, r8, lsr fp
 388:	0b002404 	bleq	93a0 <startup-0x1fff6c60>
 38c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 390:	0500000e 	streq	r0, [r0, #-14]
 394:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 398:	0b3b0b3a 	bleq	ec3088 <startup-0x1f13cf78>
 39c:	00001349 	andeq	r1, r0, r9, asr #6
 3a0:	03003406 	movweq	r3, #1030	; 0x406
 3a4:	3b0b3a0e 	blcc	2cebe4 <startup-0x1fd3141c>
 3a8:	3f13490b 	svccc	0x0013490b
 3ac:	00180219 	andseq	r0, r8, r9, lsl r2
 3b0:	00240700 	eoreq	r0, r4, r0, lsl #14
 3b4:	0b3e0b0b 	bleq	f82fe8 <startup-0x1f07d018>
 3b8:	00000803 	andeq	r0, r0, r3, lsl #16
 3bc:	49003508 	stmdbmi	r0, {r3, r8, sl, ip, sp}
 3c0:	09000013 	stmdbeq	r0, {r0, r1, r4}
 3c4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 3c8:	0b3a0e03 	bleq	e83bdc <startup-0x1f17c424>
 3cc:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 3d0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 3d4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 3d8:	00130119 	andseq	r0, r3, r9, lsl r1
 3dc:	00050a00 	andeq	r0, r5, r0, lsl #20
 3e0:	0b3a0803 	bleq	e823f4 <startup-0x1f17dc0c>
 3e4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 3e8:	00001802 	andeq	r1, r0, r2, lsl #16
 3ec:	3f012e0b 	svccc	0x00012e0b
 3f0:	3a0e0319 	bcc	38105c <startup-0x1fc7efa4>
 3f4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3f8:	00193c13 	andseq	r3, r9, r3, lsl ip
 3fc:	00180c00 	andseq	r0, r8, r0, lsl #24
 400:	340d0000 	strcc	r0, [sp], #-0
 404:	3a0e0300 	bcc	38100c <startup-0x1fc7eff4>
 408:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 40c:	00180213 	andseq	r0, r8, r3, lsl r2
 410:	002e0e00 	eoreq	r0, lr, r0, lsl #28
 414:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 418:	0b3b0b3a 	bleq	ec3108 <startup-0x1f13cef8>
 41c:	01111927 	tsteq	r1, r7, lsr #18
 420:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 424:	00194296 	mulseq	r9, r6, r2
 428:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
 42c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 430:	0b3b0b3a 	bleq	ec3120 <startup-0x1f13cee0>
 434:	06120111 			; <UNDEFINED> instruction: 0x06120111
 438:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 43c:	00130119 	andseq	r0, r3, r9, lsl r1
 440:	00051000 	andeq	r1, r5, r0
 444:	0b3a0e03 	bleq	e83c58 <startup-0x1f17c3a8>
 448:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 44c:	00001802 	andeq	r1, r0, r2, lsl #16
 450:	3f012e11 	svccc	0x00012e11
 454:	3a0e0319 	bcc	3810c0 <startup-0x1fc7ef40>
 458:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 45c:	11134919 	tstne	r3, r9, lsl r9
 460:	40061201 	andmi	r1, r6, r1, lsl #4
 464:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 468:	00001301 	andeq	r1, r0, r1, lsl #6
 46c:	03003412 	movweq	r3, #1042	; 0x412
 470:	3b0b3a08 	blcc	2cec98 <startup-0x1fd31368>
 474:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 478:	13000018 	movwne	r0, #24
 47c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 480:	0b3a0e03 	bleq	e83c94 <startup-0x1f17c36c>
 484:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 488:	1301193c 	movwne	r1, #6460	; 0x193c
 48c:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
 490:	03193f01 	tsteq	r9, #1, 30
 494:	3b0b3a0e 	blcc	2cecd4 <startup-0x1fd3132c>
 498:	1119270b 	tstne	r9, fp, lsl #14
 49c:	40061201 	andmi	r1, r6, r1, lsl #4
 4a0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 4a4:	00001301 	andeq	r1, r0, r1, lsl #6
 4a8:	3f012e15 	svccc	0x00012e15
 4ac:	3a0e0319 	bcc	381118 <startup-0x1fc7eee8>
 4b0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 4b4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 4b8:	97184006 	ldrls	r4, [r8, -r6]
 4bc:	00001942 	andeq	r1, r0, r2, asr #18
 4c0:	01110100 	tsteq	r1, r0, lsl #2
 4c4:	0b130e25 	bleq	4c3d60 <startup-0x1fb3c2a0>
 4c8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 4cc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 4d0:	00001710 	andeq	r1, r0, r0, lsl r7
 4d4:	0b002402 	bleq	94e4 <startup-0x1fff6b1c>
 4d8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 4dc:	0300000e 	movweq	r0, #14
 4e0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 4e4:	0b3a0b0b 	bleq	e83118 <startup-0x1f17cee8>
 4e8:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 4ec:	0d040000 	stceq	0, cr0, [r4, #-0]
 4f0:	3a080300 	bcc	2010f8 <startup-0x1fdfef08>
 4f4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4f8:	000b3813 	andeq	r3, fp, r3, lsl r8
 4fc:	00160500 	andseq	r0, r6, r0, lsl #10
 500:	0b3a0e03 	bleq	e83d14 <startup-0x1f17c2ec>
 504:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 508:	0d060000 	stceq	0, cr0, [r6, #-0]
 50c:	3a0e0300 	bcc	381114 <startup-0x1fc7eeec>
 510:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 514:	000b3813 	andeq	r3, fp, r3, lsl r8
 518:	00240700 	eoreq	r0, r4, r0, lsl #14
 51c:	0b3e0b0b 	bleq	f83150 <startup-0x1f07ceb0>
 520:	00000803 	andeq	r0, r0, r3, lsl #16
 524:	49010108 	stmdbmi	r1, {r3, r8}
 528:	00130113 	andseq	r0, r3, r3, lsl r1
 52c:	00210900 	eoreq	r0, r1, r0, lsl #18
 530:	0b2f1349 	bleq	bc525c <startup-0x1f43ada4>
 534:	0f0a0000 	svceq	0x000a0000
 538:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 53c:	0b000013 	bleq	590 <startup-0x1ffffa70>
 540:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
 544:	00001301 	andeq	r1, r0, r1, lsl #6
 548:	4900050c 	stmdbmi	r0, {r2, r3, r8, sl}
 54c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 550:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 554:	0b3b0b3a 	bleq	ec3244 <startup-0x1f13cdbc>
 558:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 55c:	00001802 	andeq	r1, r0, r2, lsl #16
 560:	3f012e0e 	svccc	0x00012e0e
 564:	3a0e0319 	bcc	3811d0 <startup-0x1fc7ee30>
 568:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 56c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 570:	96184006 	ldrls	r4, [r8], -r6
 574:	00001942 	andeq	r1, r0, r2, asr #18
 578:	0300050f 	movweq	r0, #1295	; 0x50f
 57c:	3b0b3a0e 	blcc	2cedbc <startup-0x1fd31244>
 580:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 584:	00000018 	andeq	r0, r0, r8, lsl r0
 588:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 58c:	030b130e 	movweq	r1, #45838	; 0xb30e
 590:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
 594:	10011117 	andne	r1, r1, r7, lsl r1
 598:	02000017 	andeq	r0, r0, #23
 59c:	0b0b0024 	bleq	2c0634 <startup-0x1fd3f9cc>
 5a0:	0e030b3e 	vmoveq.16	d3[0], r0
 5a4:	24030000 	strcs	r0, [r3], #-0
 5a8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 5ac:	0008030b 	andeq	r0, r8, fp, lsl #6
 5b0:	00350400 	eorseq	r0, r5, r0, lsl #8
 5b4:	00001349 	andeq	r1, r0, r9, asr #6
 5b8:	0b000f05 	bleq	41d4 <startup-0x1fffbe2c>
 5bc:	0600000b 	streq	r0, [r0], -fp
 5c0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 5c4:	0b3b0b3a 	bleq	ec32b4 <startup-0x1f13cd4c>
 5c8:	00001349 	andeq	r1, r0, r9, asr #6
 5cc:	0b000f07 	bleq	41f0 <startup-0x1fffbe10>
 5d0:	0013490b 	andseq	r4, r3, fp, lsl #18
 5d4:	00130800 	andseq	r0, r3, r0, lsl #16
 5d8:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
 5dc:	16090000 	strne	r0, [r9], -r0
 5e0:	3a0e0300 	bcc	3811e8 <startup-0x1fc7ee18>
 5e4:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 5e8:	0a000013 	beq	63c <startup-0x1ffff9c4>
 5ec:	0b0b0117 	bleq	2c0a50 <startup-0x1fd3f5b0>
 5f0:	0b3b0b3a 	bleq	ec32e0 <startup-0x1f13cd20>
 5f4:	00001301 	andeq	r1, r0, r1, lsl #6
 5f8:	03000d0b 	movweq	r0, #3339	; 0xd0b
 5fc:	3b0b3a0e 	blcc	2cee3c <startup-0x1fd311c4>
 600:	0013490b 	andseq	r4, r3, fp, lsl #18
 604:	01010c00 	tsteq	r1, r0, lsl #24
 608:	13011349 	movwne	r1, #4937	; 0x1349
 60c:	210d0000 	mrscs	r0, (UNDEF: 13)
 610:	2f134900 	svccs	0x00134900
 614:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
 618:	0b0b0113 	bleq	2c0a6c <startup-0x1fd3f594>
 61c:	0b3b0b3a 	bleq	ec330c <startup-0x1f13ccf4>
 620:	00001301 	andeq	r1, r0, r1, lsl #6
 624:	03000d0f 	movweq	r0, #3343	; 0xd0f
 628:	3b0b3a0e 	blcc	2cee68 <startup-0x1fd31198>
 62c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 630:	1000000b 	andne	r0, r0, fp
 634:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 638:	0b3a0b0b 	bleq	e8326c <startup-0x1f17cd94>
 63c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 640:	0d110000 	ldceq	0, cr0, [r1, #-0]
 644:	3a080300 	bcc	20124c <startup-0x1fdfedb4>
 648:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 64c:	000b3813 	andeq	r3, fp, r3, lsl r8
 650:	01131200 	tsteq	r3, r0, lsl #4
 654:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 658:	0b3b0b3a 	bleq	ec3348 <startup-0x1f13ccb8>
 65c:	00001301 	andeq	r1, r0, r1, lsl #6
 660:	03000d13 	movweq	r0, #3347	; 0xd13
 664:	3b0b3a0e 	blcc	2ceea4 <startup-0x1fd3115c>
 668:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 66c:	14000005 	strne	r0, [r0], #-5
 670:	19270015 	stmdbne	r7!, {r0, r2, r4}
 674:	15150000 	ldrne	r0, [r5, #-0]
 678:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
 67c:	00130113 	andseq	r0, r3, r3, lsl r1
 680:	00051600 	andeq	r1, r5, r0, lsl #12
 684:	00001349 	andeq	r1, r0, r9, asr #6
 688:	49002617 	stmdbmi	r0, {r0, r1, r2, r4, r9, sl, sp}
 68c:	18000013 	stmdane	r0, {r0, r1, r4}
 690:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 694:	0b3a050b 	bleq	e81ac8 <startup-0x1f17e538>
 698:	1301053b 	movwne	r0, #5435	; 0x153b
 69c:	0d190000 	ldceq	0, cr0, [r9, #-0]
 6a0:	3a0e0300 	bcc	3812a8 <startup-0x1fc7ed58>
 6a4:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 6a8:	000b3813 	andeq	r3, fp, r3, lsl r8
 6ac:	000d1a00 	andeq	r1, sp, r0, lsl #20
 6b0:	0b3a0e03 	bleq	e83ec4 <startup-0x1f17c13c>
 6b4:	1349053b 	movtne	r0, #38203	; 0x953b
 6b8:	00000538 	andeq	r0, r0, r8, lsr r5
 6bc:	0301131b 	movweq	r1, #4891	; 0x131b
 6c0:	3a0b0b0e 	bcc	2c3300 <startup-0x1fd3cd00>
 6c4:	01053b0b 	tsteq	r5, fp, lsl #22
 6c8:	1c000013 	stcne	0, cr0, [r0], {19}
 6cc:	0b0b0113 	bleq	2c0b20 <startup-0x1fd3f4e0>
 6d0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6d4:	00001301 	andeq	r1, r0, r1, lsl #6
 6d8:	0b01171d 	bleq	46354 <startup-0x1ffb9cac>
 6dc:	3b0b3a0b 	blcc	2cef10 <startup-0x1fd310f0>
 6e0:	00130105 	andseq	r0, r3, r5, lsl #2
 6e4:	000d1e00 	andeq	r1, sp, r0, lsl #28
 6e8:	0b3a0e03 	bleq	e83efc <startup-0x1f17c104>
 6ec:	1349053b 	movtne	r0, #38203	; 0x953b
 6f0:	151f0000 	ldrne	r0, [pc, #-0]	; 6f8 <startup-0x1ffff908>
 6f4:	01192701 	tsteq	r9, r1, lsl #14
 6f8:	20000013 	andcs	r0, r0, r3, lsl r0
 6fc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 700:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 704:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 708:	0000193c 	andeq	r1, r0, ip, lsr r9
 70c:	03003421 	movweq	r3, #1057	; 0x421
 710:	3b0b3a0e 	blcc	2cef50 <startup-0x1fd310b0>
 714:	3f13490b 	svccc	0x0013490b
 718:	00180219 	andseq	r0, r8, r9, lsl r2
 71c:	00342200 	eorseq	r2, r4, r0, lsl #4
 720:	0b3a0e03 	bleq	e83f34 <startup-0x1f17c0cc>
 724:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 728:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 72c:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
 730:	03193f01 	tsteq	r9, #1, 30
 734:	3b0b3a0e 	blcc	2cef74 <startup-0x1fd3108c>
 738:	1119270b 	tstne	r9, fp, lsl #14
 73c:	40061201 	andmi	r1, r6, r1, lsl #4
 740:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 744:	00001301 	andeq	r1, r0, r1, lsl #6
 748:	03003424 	movweq	r3, #1060	; 0x424
 74c:	3b0b3a08 	blcc	2cef74 <startup-0x1fd3108c>
 750:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 754:	25000018 	strcs	r0, [r0, #-24]	; 0xffffffe8
 758:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 75c:	0b3a0e03 	bleq	e83f70 <startup-0x1f17c090>
 760:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 764:	1301193c 	movwne	r1, #6460	; 0x193c
 768:	18260000 	stmdane	r6!, {}	; <UNPREDICTABLE>
 76c:	27000000 	strcs	r0, [r0, -r0]
 770:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 774:	0b3b0b3a 	bleq	ec3464 <startup-0x1f13cb9c>
 778:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 77c:	0b280000 	bleq	a00784 <startup-0x1f5ff87c>
 780:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 784:	00130106 	andseq	r0, r3, r6, lsl #2
 788:	010b2900 	tsteq	fp, r0, lsl #18
 78c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 790:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
 794:	03193f01 	tsteq	r9, #1, 30
 798:	3b0b3a0e 	blcc	2cefd8 <startup-0x1fd31028>
 79c:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 7a0:	2b000019 	blcs	80c <startup-0x1ffff7f4>
 7a4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 7a8:	0b3a0e03 	bleq	e83fbc <startup-0x1f17c044>
 7ac:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 7b0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 7b4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 7b8:	00000019 	andeq	r0, r0, r9, lsl r0
 7bc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 7c0:	030b130e 	movweq	r1, #45838	; 0xb30e
 7c4:	110e1b0e 	tstne	lr, lr, lsl #22
 7c8:	10061201 	andne	r1, r6, r1, lsl #4
 7cc:	02000017 	andeq	r0, r0, #23
 7d0:	0b0b0024 	bleq	2c0868 <startup-0x1fd3f798>
 7d4:	0e030b3e 	vmoveq.16	d3[0], r0
 7d8:	13030000 	movwne	r0, #12288	; 0x3000
 7dc:	0b0e0301 	bleq	3813e8 <startup-0x1fc7ec18>
 7e0:	3b0b3a0b 	blcc	2cf014 <startup-0x1fd30fec>
 7e4:	0013010b 	andseq	r0, r3, fp, lsl #2
 7e8:	000d0400 	andeq	r0, sp, r0, lsl #8
 7ec:	0b3a0803 	bleq	e82800 <startup-0x1f17d800>
 7f0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 7f4:	00000b38 	andeq	r0, r0, r8, lsr fp
 7f8:	03001605 	movweq	r1, #1541	; 0x605
 7fc:	3b0b3a0e 	blcc	2cf03c <startup-0x1fd30fc4>
 800:	0013490b 	andseq	r4, r3, fp, lsl #18
 804:	000d0600 	andeq	r0, sp, r0, lsl #12
 808:	0b3a0e03 	bleq	e8401c <startup-0x1f17bfe4>
 80c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 810:	00000b38 	andeq	r0, r0, r8, lsr fp
 814:	0b002407 	bleq	9838 <startup-0x1fff67c8>
 818:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 81c:	08000008 	stmdaeq	r0, {r3}
 820:	13490101 	movtne	r0, #37121	; 0x9101
 824:	00001301 	andeq	r1, r0, r1, lsl #6
 828:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
 82c:	000b2f13 	andeq	r2, fp, r3, lsl pc
 830:	000f0a00 	andeq	r0, pc, r0, lsl #20
 834:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 838:	150b0000 	strne	r0, [fp, #-0]
 83c:	01192701 	tsteq	r9, r1, lsl #14
 840:	0c000013 	stceq	0, cr0, [r0], {19}
 844:	13490005 	movtne	r0, #36869	; 0x9005
 848:	340d0000 	strcc	r0, [sp], #-0
 84c:	3a0e0300 	bcc	381454 <startup-0x1fc7ebac>
 850:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 854:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 858:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
 85c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 860:	0b3a0e03 	bleq	e84074 <startup-0x1f17bf8c>
 864:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 868:	06120111 			; <UNDEFINED> instruction: 0x06120111
 86c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 870:	0f000019 	svceq	0x00000019
 874:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 878:	0b3b0b3a 	bleq	ec3568 <startup-0x1f13ca98>
 87c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 880:	01000000 	mrseq	r0, (UNDEF: 0)
 884:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 888:	0e030b13 	vmoveq.32	d3[0], r0
 88c:	01110e1b 	tsteq	r1, fp, lsl lr
 890:	17100612 			; <UNDEFINED> instruction: 0x17100612
 894:	24020000 	strcs	r0, [r2], #-0
 898:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 89c:	000e030b 	andeq	r0, lr, fp, lsl #6
 8a0:	00240300 	eoreq	r0, r4, r0, lsl #6
 8a4:	0b3e0b0b 	bleq	f834d8 <startup-0x1f07cb28>
 8a8:	00000803 	andeq	r0, r0, r3, lsl #16
 8ac:	0b000f04 	bleq	44c4 <startup-0x1fffbb3c>
 8b0:	0500000b 	streq	r0, [r0, #-11]
 8b4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 8b8:	0b3b0b3a 	bleq	ec35a8 <startup-0x1f13ca58>
 8bc:	00001349 	andeq	r1, r0, r9, asr #6
 8c0:	0b000f06 	bleq	44e0 <startup-0x1fffbb20>
 8c4:	0013490b 	andseq	r4, r3, fp, lsl #18
 8c8:	00130700 	andseq	r0, r3, r0, lsl #14
 8cc:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
 8d0:	16080000 	strne	r0, [r8], -r0
 8d4:	3a0e0300 	bcc	3814dc <startup-0x1fc7eb24>
 8d8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 8dc:	09000013 	stmdbeq	r0, {r0, r1, r4}
 8e0:	0b0b0117 	bleq	2c0d44 <startup-0x1fd3f2bc>
 8e4:	0b3b0b3a 	bleq	ec35d4 <startup-0x1f13ca2c>
 8e8:	00001301 	andeq	r1, r0, r1, lsl #6
 8ec:	03000d0a 	movweq	r0, #3338	; 0xd0a
 8f0:	3b0b3a0e 	blcc	2cf130 <startup-0x1fd30ed0>
 8f4:	0013490b 	andseq	r4, r3, fp, lsl #18
 8f8:	01010b00 	tsteq	r1, r0, lsl #22
 8fc:	13011349 	movwne	r1, #4937	; 0x1349
 900:	210c0000 	mrscs	r0, (UNDEF: 12)
 904:	2f134900 	svccs	0x00134900
 908:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
 90c:	0b0b0113 	bleq	2c0d60 <startup-0x1fd3f2a0>
 910:	0b3b0b3a 	bleq	ec3600 <startup-0x1f13ca00>
 914:	00001301 	andeq	r1, r0, r1, lsl #6
 918:	03000d0e 	movweq	r0, #3342	; 0xd0e
 91c:	3b0b3a0e 	blcc	2cf15c <startup-0x1fd30ea4>
 920:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 924:	0f00000b 	svceq	0x0000000b
 928:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 92c:	0b3a0b0b 	bleq	e83560 <startup-0x1f17caa0>
 930:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 934:	0d100000 	ldceq	0, cr0, [r0, #-0]
 938:	3a080300 	bcc	201540 <startup-0x1fdfeac0>
 93c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 940:	000b3813 	andeq	r3, fp, r3, lsl r8
 944:	01131100 	tsteq	r3, r0, lsl #2
 948:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 94c:	0b3b0b3a 	bleq	ec363c <startup-0x1f13c9c4>
 950:	00001301 	andeq	r1, r0, r1, lsl #6
 954:	03000d12 	movweq	r0, #3346	; 0xd12
 958:	3b0b3a0e 	blcc	2cf198 <startup-0x1fd30e68>
 95c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 960:	13000005 	movwne	r0, #5
 964:	19270015 	stmdbne	r7!, {r0, r2, r4}
 968:	15140000 	ldrne	r0, [r4, #-0]
 96c:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
 970:	00130113 	andseq	r0, r3, r3, lsl r1
 974:	00051500 	andeq	r1, r5, r0, lsl #10
 978:	00001349 	andeq	r1, r0, r9, asr #6
 97c:	49002616 	stmdbmi	r0, {r1, r2, r4, r9, sl, sp}
 980:	17000013 	smladne	r0, r3, r0, r0
 984:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 988:	0b3a050b 	bleq	e81dbc <startup-0x1f17e244>
 98c:	1301053b 	movwne	r0, #5435	; 0x153b
 990:	0d180000 	ldceq	0, cr0, [r8, #-0]
 994:	3a0e0300 	bcc	38159c <startup-0x1fc7ea64>
 998:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 99c:	000b3813 	andeq	r3, fp, r3, lsl r8
 9a0:	000d1900 	andeq	r1, sp, r0, lsl #18
 9a4:	0b3a0e03 	bleq	e841b8 <startup-0x1f17be48>
 9a8:	1349053b 	movtne	r0, #38203	; 0x953b
 9ac:	00000538 	andeq	r0, r0, r8, lsr r5
 9b0:	0301131a 	movweq	r1, #4890	; 0x131a
 9b4:	3a0b0b0e 	bcc	2c35f4 <startup-0x1fd3ca0c>
 9b8:	01053b0b 	tsteq	r5, fp, lsl #22
 9bc:	1b000013 	blne	a10 <startup-0x1ffff5f0>
 9c0:	0b0b0113 	bleq	2c0e14 <startup-0x1fd3f1ec>
 9c4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 9c8:	00001301 	andeq	r1, r0, r1, lsl #6
 9cc:	0b01171c 	bleq	46644 <startup-0x1ffb99bc>
 9d0:	3b0b3a0b 	blcc	2cf204 <startup-0x1fd30dfc>
 9d4:	00130105 	andseq	r0, r3, r5, lsl #2
 9d8:	000d1d00 	andeq	r1, sp, r0, lsl #26
 9dc:	0b3a0e03 	bleq	e841f0 <startup-0x1f17be10>
 9e0:	1349053b 	movtne	r0, #38203	; 0x953b
 9e4:	151e0000 	ldrne	r0, [lr, #-0]
 9e8:	01192701 	tsteq	r9, r1, lsl #14
 9ec:	1f000013 	svcne	0x00000013
 9f0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 9f4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 9f8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 9fc:	0000193c 	andeq	r1, r0, ip, lsr r9
 a00:	3f012e20 	svccc	0x00012e20
 a04:	3a0e0319 	bcc	381670 <startup-0x1fc7e990>
 a08:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 a0c:	11134919 	tstne	r3, r9, lsl r9
 a10:	40061201 	andmi	r1, r6, r1, lsl #4
 a14:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 a18:	00001301 	andeq	r1, r0, r1, lsl #6
 a1c:	03003421 	movweq	r3, #1057	; 0x421
 a20:	3b0b3a08 	blcc	2cf248 <startup-0x1fd30db8>
 a24:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 a28:	22000018 	andcs	r0, r0, #24
 a2c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 a30:	0b3a0e03 	bleq	e84244 <startup-0x1f17bdbc>
 a34:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 a38:	06120111 			; <UNDEFINED> instruction: 0x06120111
 a3c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 a40:	23000019 	movwcs	r0, #25
 a44:	08030005 	stmdaeq	r3, {r0, r2}
 a48:	0b3b0b3a 	bleq	ec3738 <startup-0x1f13c8c8>
 a4c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 a50:	Address 0x0000000000000a50 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000114 	andeq	r0, r0, r4, lsl r1
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	014a0002 	cmpeq	sl, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	20000124 	andcs	r0, r0, r4, lsr #2
  34:	00000574 	andeq	r0, r0, r4, ror r5
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	04b40002 	ldrteq	r0, [r4], #2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	20000698 	mulcs	r0, r8, r6
  54:	000000d8 	ldrdeq	r0, [r0], -r8
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	070d0002 	streq	r0, [sp, -r2]
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	20000770 	andcs	r0, r0, r0, ror r7
  74:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	07e30002 	strbeq	r0, [r3, r2]!
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	200007ac 	andcs	r0, r0, ip, lsr #15
  94:	000002a4 	andeq	r0, r0, r4, lsr #5
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	0bad0002 	bleq	feb400b4 <obstacle+0xdeb3f148>
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	20000a50 	andcs	r0, r0, r0, asr sl
  b4:	000000e8 	andeq	r0, r0, r8, ror #1
	...
  c0:	00000024 	andeq	r0, r0, r4, lsr #32
  c4:	0d860002 	stceq	0, cr0, [r6, #8]
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	20000b38 	andcs	r0, r0, r8, lsr fp
  d4:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  d8:	20000000 	andcs	r0, r0, r0
  dc:	0000000c 	andeq	r0, r0, ip
	...
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	19bb0002 	ldmibne	fp!, {r1}
  f0:	00040000 	andeq	r0, r4, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	20000d08 	andcs	r0, r0, r8, lsl #26
  fc:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	1b940002 	blne	fe50011c <obstacle+0xde4ff1b0>
 110:	00040000 	andeq	r0, r4, r0
 114:	00000000 	andeq	r0, r0, r0
 118:	20000d54 	andcs	r0, r0, r4, asr sp
 11c:	00000174 	andeq	r0, r0, r4, ror r1
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000009b 	muleq	r0, fp, r0
   4:	005b0002 	subseq	r0, fp, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  20:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
  24:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
  28:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
  2c:	616f6c6e 	cmnvs	pc, lr, ror #24
  30:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
  34:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
  38:	2f737265 	svccs	0x00737265
  3c:	2f504f4d 	svccs	0x00504f4d
  40:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
  44:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
  48:	64000035 	strvs	r0, [r0], #-53	; 0xffffffcb
  4c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
  50:	00632e73 	rsbeq	r2, r3, r3, ror lr
  54:	67000001 	strvs	r0, [r0, -r1]
  58:	61626f6c 	cmnvs	r2, ip, ror #30
  5c:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
  60:	00000100 	andeq	r0, r0, r0, lsl #2
  64:	02050000 	andeq	r0, r5, #0
  68:	20000010 	andcs	r0, r0, r0, lsl r0
  6c:	3d3d3015 	ldccc	0, cr3, [sp, #-84]!	; 0xffffffac
  70:	02003d3d 	andeq	r3, r0, #3904	; 0xf40
  74:	20060104 	andcs	r0, r6, r4, lsl #2
  78:	a03d6706 	eorsge	r6, sp, r6, lsl #14
  7c:	3e2f2f2f 	cdpcc	15, 2, cr2, cr15, cr15, {1}
  80:	2f2f224c 	svccs	0x002f224c
  84:	4c5f292f 	mrrcmi	9, 2, r2, pc, cr15	; <UNPREDICTABLE>
  88:	5a57214f 	bpl	15c85cc <startup-0x1ea37a34>
  8c:	3d3d2f4c 	ldccc	15, cr2, [sp, #-304]!	; 0xfffffed0
  90:	ca3e3d3d 	bgt	f8f58c <startup-0x1f070a74>
  94:	3d3d3e4b 	ldccc	14, cr3, [sp, #-300]!	; 0xfffffed4
  98:	07022439 	smladxeq	r2, r9, r4, r2
  9c:	3f010100 	svccc	0x00010100
  a0:	02000001 	andeq	r0, r0, #1
  a4:	00006300 	andeq	r6, r0, r0, lsl #6
  a8:	fb010200 	blx	408b2 <startup-0x1ffbf74e>
  ac:	01000d0e 	tsteq	r0, lr, lsl #26
  b0:	00010101 	andeq	r0, r1, r1, lsl #2
  b4:	00010000 	andeq	r0, r1, r0
  b8:	552f0100 	strpl	r0, [pc, #-256]!	; ffffffc0 <obstacle+0xdffff054>
  bc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  c0:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  c4:	2f6e6176 	svccs	0x006e6176
  c8:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
  cc:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
  d0:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  d4:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
  d8:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; ffffff18 <obstacle+0xdfffefac>
  dc:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; ffffffa8 <obstacle+0xdffff03c>
  e0:	2f356261 	svccs	0x00356261
  e4:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
  e8:	72670000 	rsbvc	r0, r7, #0
  ec:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
  f0:	73696463 	cmnvc	r9, #1660944384	; 0x63000000
  f4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  f8:	0100632e 	tsteq	r0, lr, lsr #6
  fc:	65640000 	strbvs	r0, [r4, #-0]!
 100:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 104:	00682e73 	rsbeq	r2, r8, r3, ror lr
 108:	00000001 	andeq	r0, r0, r1
 10c:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
 110:	14200001 	strtne	r0, [r0], #-1
 114:	6778e567 	ldrbvs	lr, [r8, -r7, ror #10]!
 118:	ca676ad7 	bgt	19dac7c <startup-0x1e625384>
 11c:	3d3d223d 	lfmcc	f2, 4, [sp, #-244]!	; 0xffffff0c
 120:	223d3d22 	eorscs	r3, sp, #2176	; 0x880
 124:	513e223d 	teqpl	lr, sp, lsr r2
 128:	3d3d3e2f 	ldccc	14, cr3, [sp, #-188]!	; 0xffffff44
 12c:	3d21303d 	stccc	0, cr3, [r1, #-244]!	; 0xffffff0c
 130:	6d2a3d2f 	stcvs	13, cr3, [sl, #-188]!	; 0xffffff44
 134:	67943d3d 			; <UNDEFINED> instruction: 0x67943d3d
 138:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
 13c:	2f3d2f59 	svccs	0x003d2f59
 140:	4b3e3d59 	blmi	f8f6ac <startup-0x1f070954>
 144:	3d4b3d3d 	stclcc	13, cr3, [fp, #-244]	; 0xffffff0c
 148:	91af3d30 			; <UNDEFINED> instruction: 0x91af3d30
 14c:	3d2f594b 			; <UNDEFINED> instruction: 0x3d2f594b
 150:	3d593e2f 	ldclcc	14, cr3, [r9, #-188]	; 0xffffff44
 154:	313d593d 	teqcc	sp, sp, lsr r9
 158:	693d3d3d 	ldmdbvs	sp!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
 15c:	3d593d91 	ldclcc	13, cr3, [r9, #-580]	; 0xfffffdbc
 160:	914c833d 	cmpls	ip, sp, lsr r3
 164:	3d3d593d 			; <UNDEFINED> instruction: 0x3d3d593d
 168:	59674c83 	stmdbpl	r7!, {r0, r1, r7, sl, fp, lr}^
 16c:	3d2f4c67 	stccc	12, cr4, [pc, #-412]!	; ffffffd8 <obstacle+0xdffff06c>
 170:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
 174:	4b4b4b4b 	blmi	12d2ea8 <startup-0x1ed2d158>
 178:	3d3e3d4b 	ldccc	13, cr3, [lr, #-300]!	; 0xfffffed4
 17c:	004bad3d 	subeq	sl, fp, sp, lsr sp
 180:	3d030402 	cfstrscc	mvf0, [r3, #-8]
 184:	03040200 	movweq	r0, #16896	; 0x4200
 188:	04020049 	streq	r0, [r2], #-73	; 0xffffffb7
 18c:	003c0601 	eorseq	r0, ip, r1, lsl #12
 190:	06020402 	streq	r0, [r2], -r2, lsl #8
 194:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
 198:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 19c:	00e54c43 	rsceq	r4, r5, r3, asr #24
 1a0:	06010402 	streq	r0, [r1], -r2, lsl #8
 1a4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
 1a8:	02005802 	andeq	r5, r0, #131072	; 0x20000
 1ac:	00580304 	subseq	r0, r8, r4, lsl #6
 1b0:	58040402 	stmdapl	r4, {r1, sl}
 1b4:	08b15c06 	ldmeq	r1!, {r1, r2, sl, fp, ip, lr}
 1b8:	4b224b22 	blmi	892e48 <startup-0x1f76d1b8>
 1bc:	4b224b22 	blmi	892e4c <startup-0x1f76d1b4>
 1c0:	4b224b22 	blmi	892e50 <startup-0x1f76d1b0>
 1c4:	4b224b22 	blmi	892e54 <startup-0x1f76d1ac>
 1c8:	4b694b23 	blmi	1a52e5c <startup-0x1e5ad1a4>
 1cc:	694b764b 	stmdbvs	fp, {r0, r1, r3, r6, r9, sl, ip, sp, lr}^
 1d0:	af91c9c9 	svcge	0x0091c9c9
 1d4:	0393a04b 	orrseq	sl, r3, #75	; 0x4b
 1d8:	3c03ac45 	stccc	12, cr10, [r3], {69}	; 0x45
 1dc:	00070220 	andeq	r0, r7, r0, lsr #4
 1e0:	009e0101 	addseq	r0, lr, r1, lsl #2
 1e4:	00020000 	andeq	r0, r2, r0
 1e8:	0000005e 	andeq	r0, r0, lr, asr r0
 1ec:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 1f0:	0101000d 	tsteq	r1, sp
 1f4:	00000101 	andeq	r0, r0, r1, lsl #2
 1f8:	00000100 	andeq	r0, r0, r0, lsl #2
 1fc:	73552f01 	cmpvc	r5, #1, 30
 200:	2f737265 	svccs	0x00737265
 204:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 208:	442f6e61 	strtmi	r6, [pc], #-3681	; 210 <startup-0x1ffffdf0>
 20c:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 210:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 214:	6168432f 	cmnvs	r8, pc, lsr #6
 218:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 21c:	4f4d2f73 	svcmi	0x004d2f73
 220:	616c2f50 	cmnvs	ip, r0, asr pc
 224:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; a4 <startup-0x1fffff5c>
 228:	00356261 	eorseq	r6, r5, r1, ror #4
 22c:	6e657200 	cdpvs	2, 6, cr7, cr5, cr0, {0}
 230:	69726564 	ldmdbvs	r2!, {r2, r5, r6, r8, sl, sp, lr}^
 234:	632e676e 			; <UNDEFINED> instruction: 0x632e676e
 238:	00000100 	andeq	r0, r0, r0, lsl #2
 23c:	75727473 	ldrbvc	r7, [r2, #-1139]!	; 0xfffffb8d
 240:	2e737463 	cdpcs	4, 7, cr7, cr3, cr3, {3}
 244:	00010068 	andeq	r0, r1, r8, rrx
 248:	05000000 	streq	r0, [r0, #-0]
 24c:	00069802 	andeq	r9, r6, r2, lsl #16
 250:	3d671420 	cfstrdcc	mvd1, [r7, #-128]!	; 0xffffff80
 254:	004b4c3d 	subeq	r4, fp, sp, lsr ip
 258:	3d030402 	cfstrscc	mvf0, [r3, #-8]
 25c:	03040200 	movweq	r0, #16896	; 0x4200
 260:	02008f08 	andeq	r8, r0, #8, 30
 264:	3c060104 	stfccs	f0, [r6], {4}
 268:	4b4c6906 	blmi	131a688 <startup-0x1ece5978>
 26c:	03040200 	movweq	r0, #16896	; 0x4200
 270:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 274:	008f0803 	addeq	r0, pc, r3, lsl #16
 278:	06010402 	streq	r0, [r1], -r2, lsl #8
 27c:	0269063c 	rsbeq	r0, r9, #60, 12	; 0x3c00000
 280:	01010004 	tsteq	r1, r4
 284:	00000072 	andeq	r0, r0, r2, ror r0
 288:	00580002 	subseq	r0, r8, r2
 28c:	01020000 	mrseq	r0, (UNDEF: 2)
 290:	000d0efb 	strdeq	r0, [sp], -fp
 294:	01010101 	tsteq	r1, r1, lsl #2
 298:	01000000 	mrseq	r0, (UNDEF: 0)
 29c:	2f010000 	svccs	0x00010000
 2a0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 2a4:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
 2a8:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
 2ac:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 2b0:	616f6c6e 	cmnvs	pc, lr, ror #24
 2b4:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
 2b8:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 2bc:	2f737265 	svccs	0x00737265
 2c0:	2f504f4d 	svccs	0x00504f4d
 2c4:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 2c8:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 2cc:	49000035 	stmdbmi	r0, {r0, r2, r4, r5}
 2d0:	632e5152 			; <UNDEFINED> instruction: 0x632e5152
 2d4:	00000100 	andeq	r0, r0, r0, lsl #2
 2d8:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 2dc:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
 2e0:	00010068 	andeq	r0, r1, r8, rrx
 2e4:	05000000 	streq	r0, [r0, #-0]
 2e8:	00077002 	andeq	r7, r7, r2
 2ec:	3d311620 	ldccc	6, cr1, [r1, #-128]!	; 0xffffff80
 2f0:	1e324b59 			; <UNDEFINED> instruction: 0x1e324b59
 2f4:	000a023e 	andeq	r0, sl, lr, lsr r2
 2f8:	00d30101 	sbcseq	r0, r3, r1, lsl #2
 2fc:	00020000 	andeq	r0, r2, r0
 300:	00000067 	andeq	r0, r0, r7, rrx
 304:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 308:	0101000d 	tsteq	r1, sp
 30c:	00000101 	andeq	r0, r0, r1, lsl #2
 310:	00000100 	andeq	r0, r0, r0, lsl #2
 314:	73552f01 	cmpvc	r5, #1, 30
 318:	2f737265 	svccs	0x00737265
 31c:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 320:	442f6e61 	strtmi	r6, [pc], #-3681	; 328 <startup-0x1ffffcd8>
 324:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 328:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 32c:	6168432f 	cmnvs	r8, pc, lsr #6
 330:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 334:	4f4d2f73 	svcmi	0x004d2f73
 338:	616c2f50 	cmnvs	ip, r0, asr pc
 33c:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 1bc <startup-0x1ffffe44>
 340:	00356261 	eorseq	r6, r5, r1, ror #4
 344:	63736100 	cmnvs	r3, #0, 2
 348:	632e6969 			; <UNDEFINED> instruction: 0x632e6969
 34c:	00000100 	andeq	r0, r0, r0, lsl #2
 350:	69666564 	stmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 354:	2e73656e 	cdpcs	5, 7, cr6, cr3, cr14, {3}
 358:	00010068 	andeq	r0, r1, r8, rrx
 35c:	6f6c6700 	svcvs	0x006c6700
 360:	736c6162 	cmnvc	ip, #-2147483624	; 0x80000018
 364:	0100682e 	tsteq	r0, lr, lsr #16
 368:	00000000 	andeq	r0, r0, r0
 36c:	07ac0205 	streq	r0, [ip, r5, lsl #4]!
 370:	67162000 	ldrvs	r2, [r6, -r0]
 374:	086768bb 	stmdaeq	r7!, {r0, r1, r3, r4, r5, r7, fp, sp, lr}^
 378:	2f677613 	svccs	0x00677613
 37c:	3d2f4b3d 	fstmdbxcc	pc!, {d4-d33}	;@ Deprecated
 380:	3d3d682f 	ldccc	8, cr6, [sp, #-188]!	; 0xffffff44
 384:	3d4b2f2f 	stclcc	15, cr2, [fp, #-188]	; 0xffffff44
 388:	3d67762f 	stclcc	6, cr7, [r7, #-188]!	; 0xffffff44
 38c:	3d674c59 	stclcc	12, cr4, [r7, #-356]!	; 0xfffffe9c
 390:	3d4c593d 	vstrcc.16	s11, [ip, #-122]	; 0xffffff86	; <UNPREDICTABLE>
 394:	593d3d3d 	ldmdbpl	sp!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
 398:	3d3dae3d 	ldccc	14, cr10, [sp, #-244]!	; 0xffffff0c
 39c:	ae3d593d 			; <UNDEFINED> instruction: 0xae3d593d
 3a0:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
 3a4:	06200601 	strteq	r0, [r0], -r1, lsl #12
 3a8:	4c593d83 	mrrcmi	13, 8, r3, r9, cr3
 3ac:	3e3d3d2f 	cdpcc	13, 3, cr3, cr13, cr15, {1}
 3b0:	3e3d3d2f 	cdpcc	13, 3, cr3, cr13, cr15, {1}
 3b4:	3e3d3d2f 	cdpcc	13, 3, cr3, cr13, cr15, {1}
 3b8:	3e3d3d2f 	cdpcc	13, 3, cr3, cr13, cr15, {1}
 3bc:	2f2f2f2f 	svccs	0x002f2f2f
 3c0:	3d593e2f 	ldclcc	14, cr3, [r9, #-188]	; 0xffffff44
 3c4:	3d913e3d 	ldccc	14, cr3, [r1, #244]	; 0xf4
 3c8:	3d59674c 	ldclcc	7, cr6, [r9, #-304]	; 0xfffffed0
 3cc:	01000402 	tsteq	r0, r2, lsl #8
 3d0:	00008d01 	andeq	r8, r0, r1, lsl #26
 3d4:	59000200 	stmdbpl	r0, {r9}
 3d8:	02000000 	andeq	r0, r0, #0
 3dc:	0d0efb01 	vstreq	d15, [lr, #-4]
 3e0:	01010100 	mrseq	r0, (UNDEF: 17)
 3e4:	00000001 	andeq	r0, r0, r1
 3e8:	01000001 	tsteq	r0, r1
 3ec:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 3f0:	6b2f7372 	blvs	bdd1c0 <startup-0x1f422e40>
 3f4:	61766965 	cmnvs	r6, r5, ror #18
 3f8:	6f442f6e 	svcvs	0x00442f6e
 3fc:	6f6c6e77 	svcvs	0x006c6e77
 400:	2f736461 	svccs	0x00736461
 404:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 408:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 40c:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 410:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 414:	616c2f35 	cmnvs	ip, r5, lsr pc
 418:	00003562 	andeq	r3, r0, r2, ror #10
 41c:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
 420:	0100632e 	tsteq	r0, lr, lsr #6
 424:	74730000 	ldrbtvc	r0, [r3], #-0
 428:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
 42c:	00682e73 	rsbeq	r2, r8, r3, ror lr
 430:	00000001 	andeq	r0, r0, r1
 434:	50020500 	andpl	r0, r2, r0, lsl #10
 438:	0320000a 			; <UNDEFINED> instruction: 0x0320000a
 43c:	4b4b010f 	blmi	12c0880 <startup-0x1ed3f780>
 440:	4b844b9f 	blmi	fe1132c4 <obstacle+0xde112358>
 444:	4b924b91 	blmi	fe493290 <obstacle+0xde492324>
 448:	02007675 	andeq	r7, r0, #122683392	; 0x7500000
 44c:	4a060104 	bmi	180864 <startup-0x1fe7f79c>
 450:	005b8306 	subseq	r8, fp, r6, lsl #6
 454:	06010402 	streq	r0, [r1], -r2, lsl #8
 458:	5a83064a 	bpl	fe0c1d88 <obstacle+0xde0c0e1c>
 45c:	0004024b 	andeq	r0, r4, fp, asr #4
 460:	01c60101 	biceq	r0, r6, r1, lsl #2
 464:	00020000 	andeq	r0, r2, r0
 468:	00000168 	andeq	r0, r0, r8, ror #2
 46c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 470:	0101000d 	tsteq	r1, sp
 474:	00000101 	andeq	r0, r0, r1, lsl #2
 478:	00000100 	andeq	r0, r0, r0, lsl #2
 47c:	73552f01 	cmpvc	r5, #1, 30
 480:	2f737265 	svccs	0x00737265
 484:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 488:	442f6e61 	strtmi	r6, [pc], #-3681	; 490 <startup-0x1ffffb70>
 48c:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 490:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 494:	6168432f 	cmnvs	r8, pc, lsr #6
 498:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 49c:	4f4d2f73 	svcmi	0x004d2f73
 4a0:	616c2f50 	cmnvs	ip, r0, asr pc
 4a4:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 324 <startup-0x1ffffcdc>
 4a8:	00356261 	eorseq	r6, r5, r1, ror #4
 4ac:	7070412f 	rsbsvc	r4, r0, pc, lsr #2
 4b0:	6163696c 	cmnvs	r3, ip, ror #18
 4b4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 4b8:	6f632f73 	svcvs	0x00632f73
 4bc:	696c6564 	stmdbvs	ip!, {r2, r5, r6, r8, sl, sp, lr}^
 4c0:	612e6574 			; <UNDEFINED> instruction: 0x612e6574
 4c4:	432f7070 			; <UNDEFINED> instruction: 0x432f7070
 4c8:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 4cc:	2f73746e 	svccs	0x0073746e
 4d0:	72616853 	rsbvc	r6, r1, #5439488	; 0x530000
 4d4:	75536465 	ldrbvc	r6, [r3, #-1125]	; 0xfffffb9b
 4d8:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 4dc:	6f742f74 	svcvs	0x00742f74
 4e0:	2f736c6f 	svccs	0x00736c6f
 4e4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
 4e8:	2f6d7261 	svccs	0x006d7261
 4ec:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 4f0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 4f4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 4f8:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
 4fc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 500:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 504:	412f0073 			; <UNDEFINED> instruction: 0x412f0073
 508:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 50c:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 510:	2f736e6f 	svccs	0x00736e6f
 514:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 518:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
 51c:	7070612e 	rsbsvc	r6, r0, lr, lsr #2
 520:	6e6f432f 	cdpvs	3, 6, cr4, cr15, cr15, {1}
 524:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 528:	68532f73 	ldmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 52c:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
 530:	70707553 	rsbsvc	r7, r0, r3, asr r5
 534:	2f74726f 	svccs	0x0074726f
 538:	6c6f6f74 	stclvs	15, cr6, [pc], #-464	; 370 <startup-0x1ffffc90>
 53c:	63672f73 	cmnvs	r7, #460	; 0x1cc
 540:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
 544:	696c2f6d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp}^
 548:	63672f62 	cmnvs	r7, #392	; 0x188
 54c:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
 550:	6f6e2d6d 	svcvs	0x006e2d6d
 554:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 558:	2f696261 	svccs	0x00696261
 55c:	2e322e37 	mrccs	14, 1, r2, cr2, cr7, {1}
 560:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
 564:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 568:	6d000065 	stcvs	0, cr0, [r0, #-404]	; 0xfffffe6c
 56c:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
 570:	00010063 	andeq	r0, r1, r3, rrx
 574:	636f6c00 	cmnvs	pc, #0, 24
 578:	00682e6b 	rsbeq	r2, r8, fp, ror #28
 57c:	5f000002 	svcpl	0x00000002
 580:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 584:	00682e73 	rsbeq	r2, r8, r3, ror lr
 588:	73000002 	movwvc	r0, #2
 58c:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
 590:	00682e66 	rsbeq	r2, r8, r6, ror #28
 594:	72000003 	andvc	r0, r0, #3
 598:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
 59c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 5a0:	65640000 	strbvs	r0, [r4, #-0]!
 5a4:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 5a8:	00682e73 	rsbeq	r2, r8, r3, ror lr
 5ac:	67000001 	strvs	r0, [r0, -r1]
 5b0:	61626f6c 	cmnvs	r2, ip, ror #30
 5b4:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
 5b8:	00000100 	andeq	r0, r0, r0, lsl #2
 5bc:	75727473 	ldrbvc	r7, [r2, #-1139]!	; 0xfffffb8d
 5c0:	2e737463 	cdpcs	4, 7, cr7, cr3, cr3, {3}
 5c4:	00010068 	andeq	r0, r1, r8, rrx
 5c8:	6c616200 	sfmvs	f6, 2, [r1], #-0
 5cc:	00682e6c 	rsbeq	r2, r8, ip, ror #28
 5d0:	00000001 	andeq	r0, r0, r1
 5d4:	00020500 	andeq	r0, r2, r0, lsl #10
 5d8:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
 5dc:	5e130118 	mrcpl	1, 0, r0, cr3, cr8, {0}
 5e0:	01000302 	tsteq	r0, r2, lsl #6
 5e4:	02050001 	andeq	r0, r5, #1
 5e8:	20000b38 	andcs	r0, r0, r8, lsr fp
 5ec:	30012303 	andcc	r2, r1, r3, lsl #6
 5f0:	3f3d753d 	svccc	0x003d753d
 5f4:	3e3d3d3d 	mrccc	13, 1, r3, cr13, cr13, {1}
 5f8:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
 5fc:	1725023d 			; <UNDEFINED> instruction: 0x1725023d
 600:	2f2f2f3e 	svccs	0x002f2f3e
 604:	2f215a2f 	svccs	0x00215a2f
 608:	673d5921 	ldrvs	r5, [sp, -r1, lsr #18]!
 60c:	838375c9 	orrhi	r7, r3, #843055104	; 0x32400000
 610:	03747803 	cmneq	r4, #196608	; 0x30000
 614:	2f594a11 	svccs	0x00594a11
 618:	66036a4b 	strvs	r6, [r3], -fp, asr #20
 61c:	4a20033c 	bmi	801314 <startup-0x1f7fecec>
 620:	4b2f6730 	blmi	bda2e8 <startup-0x1f425d18>
 624:	4d73212f 	ldfmie	f2, [r3, #-188]!	; 0xffffff44
 628:	01010008 	tsteq	r1, r8
 62c:	0000007b 	andeq	r0, r0, fp, ror r0
 630:	005e0002 	subseq	r0, lr, r2
 634:	01020000 	mrseq	r0, (UNDEF: 2)
 638:	000d0efb 	strdeq	r0, [sp], -fp
 63c:	01010101 	tsteq	r1, r1, lsl #2
 640:	01000000 	mrseq	r0, (UNDEF: 0)
 644:	2f010000 	svccs	0x00010000
 648:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 64c:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
 650:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
 654:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 658:	616f6c6e 	cmnvs	pc, lr, ror #24
 65c:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
 660:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 664:	2f737265 	svccs	0x00737265
 668:	2f504f4d 	svccs	0x00504f4d
 66c:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 670:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 674:	4f000035 	svcmi	0x00000035
 678:	61747362 	cmnvs	r4, r2, ror #6
 67c:	73656c63 	cmnvc	r5, #25344	; 0x6300
 680:	0100632e 	tsteq	r0, lr, lsr #6
 684:	74730000 	ldrbtvc	r0, [r3], #-0
 688:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
 68c:	00682e73 	rsbeq	r2, r8, r3, ror lr
 690:	00000001 	andeq	r0, r0, r1
 694:	08020500 	stmdaeq	r2, {r8, sl}
 698:	0320000d 			; <UNDEFINED> instruction: 0x0320000d
 69c:	4b4b010f 	blmi	12c0ae0 <startup-0x1ed3f520>
 6a0:	754b224b 	strbvc	r2, [fp, #-587]	; 0xfffffdb5
 6a4:	03024b75 	movweq	r4, #11125	; 0x2b75
 6a8:	9d010100 	stflss	f0, [r1, #-0]
 6ac:	02000001 	andeq	r0, r0, #1
 6b0:	00014600 	andeq	r4, r1, r0, lsl #12
 6b4:	fb010200 	blx	40ebe <startup-0x1ffbf142>
 6b8:	01000d0e 	tsteq	r0, lr, lsl #26
 6bc:	00010101 	andeq	r0, r1, r1, lsl #2
 6c0:	00010000 	andeq	r0, r1, r0
 6c4:	552f0100 	strpl	r0, [pc, #-256]!	; 5cc <startup-0x1ffffa34>
 6c8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 6cc:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 6d0:	2f6e6176 	svccs	0x006e6176
 6d4:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
 6d8:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
 6dc:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 6e0:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 6e4:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; 524 <startup-0x1ffffadc>
 6e8:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; 5b4 <startup-0x1ffffa4c>
 6ec:	2f356261 	svccs	0x00356261
 6f0:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 6f4:	70412f00 	subvc	r2, r1, r0, lsl #30
 6f8:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
 6fc:	6f697461 	svcvs	0x00697461
 700:	632f736e 			; <UNDEFINED> instruction: 0x632f736e
 704:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	; 0xfffffe44
 708:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
 70c:	2f707061 	svccs	0x00707061
 710:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 714:	73746e65 	cmnvc	r4, #1616	; 0x650
 718:	6168532f 	cmnvs	r8, pc, lsr #6
 71c:	53646572 	cmnpl	r4, #478150656	; 0x1c800000
 720:	6f707075 	svcvs	0x00707075
 724:	742f7472 	strtvc	r7, [pc], #-1138	; 72c <startup-0x1ffff8d4>
 728:	736c6f6f 	cmnvc	ip, #444	; 0x1bc
 72c:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
 730:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
 734:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
 738:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
 73c:	61652d65 	cmnvs	r5, r5, ror #26
 740:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
 744:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 748:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
 74c:	2f007379 	svccs	0x00007379
 750:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
 754:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 758:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 75c:	646f632f 	strbtvs	r6, [pc], #-815	; 764 <startup-0x1ffff89c>
 760:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 764:	70612e65 	rsbvc	r2, r1, r5, ror #28
 768:	6f432f70 	svcvs	0x00432f70
 76c:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 770:	532f7374 			; <UNDEFINED> instruction: 0x532f7374
 774:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
 778:	70755364 	rsbsvc	r5, r5, r4, ror #6
 77c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 780:	6f6f742f 	svcvs	0x006f742f
 784:	672f736c 	strvs	r7, [pc, -ip, ror #6]!
 788:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
 78c:	6c2f6d72 	stcvs	13, cr6, [pc], #-456	; 5cc <startup-0x1ffffa34>
 790:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
 794:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
 798:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 79c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 7a0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 7a4:	322e372f 	eorcc	r3, lr, #12320768	; 0xbc0000
 7a8:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
 7ac:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 7b0:	00006564 	andeq	r6, r0, r4, ror #10
 7b4:	7079656b 	rsbsvc	r6, r9, fp, ror #10
 7b8:	632e6461 			; <UNDEFINED> instruction: 0x632e6461
 7bc:	00000100 	andeq	r0, r0, r0, lsl #2
 7c0:	6b636f6c 	blvs	18dc578 <startup-0x1e723a88>
 7c4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 7c8:	745f0000 	ldrbvc	r0, [pc], #-0	; 7d0 <startup-0x1ffff830>
 7cc:	73657079 	cmnvc	r5, #121	; 0x79
 7d0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 7d4:	74730000 	ldrbtvc	r0, [r3], #-0
 7d8:	66656464 	strbtvs	r6, [r5], -r4, ror #8
 7dc:	0300682e 	movweq	r6, #2094	; 0x82e
 7e0:	65720000 	ldrbvs	r0, [r2, #-0]!
 7e4:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 7e8:	00020068 	andeq	r0, r2, r8, rrx
 7ec:	66656400 	strbtvs	r6, [r5], -r0, lsl #8
 7f0:	73656e69 	cmnvc	r5, #1680	; 0x690
 7f4:	0100682e 	tsteq	r0, lr, lsr #16
 7f8:	00000000 	andeq	r0, r0, r0
 7fc:	0d540205 	lfmeq	f0, 2, [r4, #-20]	; 0xffffffec
 800:	67162000 	ldrvs	r2, [r6, -r0]
 804:	4b4b4bc9 	blmi	12d3730 <startup-0x1ed2c8d0>
 808:	3d6a3f4b 	stclcc	15, cr3, [sl, #-300]!	; 0xfffffed4
 80c:	6859675a 	ldmdavs	r9, {r1, r3, r4, r6, r8, r9, sl, sp, lr}^
 810:	02003e9f 	andeq	r3, r0, #2544	; 0x9f0
 814:	7a030204 	bvc	c102c <startup-0x1ff3efd4>
 818:	040200c8 	streq	r0, [r2], #-200	; 0xffffff38
 81c:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 820:	3d580903 	vldrcc.16	s1, [r8, #-6]	; <UNPREDICTABLE>
 824:	01040200 	mrseq	r0, R12_usr
 828:	673e8521 	ldrvs	r8, [lr, -r1, lsr #10]!
 82c:	3e9f6859 	mrccc	8, 4, r6, cr15, cr9, {2}
 830:	02040200 	andeq	r0, r4, #0, 4
 834:	00c87a03 	sbceq	r7, r8, r3, lsl #20
 838:	06010402 	streq	r0, [r1], -r2, lsl #8
 83c:	09030666 	stmdbeq	r3, {r1, r2, r5, r6, r9, sl}
 840:	02003d58 	andeq	r3, r0, #88, 26	; 0x1600
 844:	02210104 	eoreq	r0, r1, #4, 2
 848:	01010007 	tsteq	r1, r7

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	616c6564 	cmnvs	ip, r4, ror #10
   4:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
   8:	00696c6c 	rsbeq	r6, r9, ip, ror #24
   c:	616c6564 	cmnvs	ip, r4, ror #10
  10:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
  14:	006f726b 	rsbeq	r7, pc, fp, ror #4
  18:	20554e47 	subscs	r4, r5, r7, asr #28
  1c:	20393943 	eorscs	r3, r9, r3, asr #18
  20:	2e322e37 	mrccs	14, 1, r2, cr2, cr7, {1}
  24:	30322031 	eorscc	r2, r2, r1, lsr r0
  28:	39303731 	ldmdbcc	r0!, {r0, r4, r5, r8, r9, sl, ip, sp}
  2c:	28203430 	stmdacs	r0!, {r4, r5, sl, ip, sp}
  30:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  34:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  38:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  3c:	6d652f4d 	stclvs	15, cr2, [r5, #-308]!	; 0xfffffecc
  40:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  44:	372d6465 	strcc	r6, [sp, -r5, ror #8]!
  48:	6172622d 	cmnvs	r2, sp, lsr #4
  4c:	2068636e 	rsbcs	r6, r8, lr, ror #6
  50:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  54:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  58:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
  5c:	5d343032 	ldcpl	0, cr3, [r4, #-200]!	; 0xffffff38
  60:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  64:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  68:	616d2d20 	cmnvs	sp, r0, lsr #26
  6c:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  70:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  74:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  78:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  7c:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  80:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  84:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  88:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  8c:	20304f2d 	eorscs	r4, r0, sp, lsr #30
  90:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
  94:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
  98:	63657300 	cmnvs	r5, #0, 6
  9c:	5f646e6f 	svcpl	0x00646e6f
  a0:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
  a4:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
  a8:	5f79616c 	svcpl	0x0079616c
  ac:	6e303532 	mrcvs	5, 1, r3, cr0, cr2, {1}
  b0:	65640073 	strbvs	r0, [r4, #-115]!	; 0xffffff8d
  b4:	5f79616c 	svcpl	0x0079616c
  b8:	6e303035 	mrcvs	0, 1, r3, cr0, cr5, {1}
  bc:	6e750073 	mrcvs	0, 3, r0, cr5, cr3, {3}
  c0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  c4:	63206465 			; <UNDEFINED> instruction: 0x63206465
  c8:	00726168 	rsbseq	r6, r2, r8, ror #2
  cc:	616c6564 	cmnvs	ip, r4, ror #10
  d0:	6f635f79 	svcvs	0x00635f79
  d4:	00746e75 	rsbseq	r6, r4, r5, ror lr
  d8:	616c6564 	cmnvs	ip, r4, ror #10
  dc:	73315f79 	teqvc	r1, #484	; 0x1e4
  e0:	72756300 	rsbsvc	r6, r5, #0, 6
  e4:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
  e8:	696f705f 	stmdbvs	pc!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^	; <UNPREDICTABLE>
  ec:	0073746e 	rsbseq	r7, r3, lr, ror #8
  f0:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
  f4:	5f6b6369 	svcpl	0x006b6369
  f8:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
  fc:	6e757200 	cdpvs	2, 7, cr7, cr5, cr0, {0}
 100:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
 104:	6f687300 	svcvs	0x00687300
 108:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
 10c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 110:	2064656e 	rsbcs	r6, r4, lr, ror #10
 114:	00746e69 	rsbseq	r6, r4, r9, ror #28
 118:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 11c:	6b2f7372 	blvs	bdceec <startup-0x1f423114>
 120:	61766965 	cmnvs	r6, r5, ror #18
 124:	6f442f6e 	svcvs	0x00442f6e
 128:	6f6c6e77 	svcvs	0x006c6e77
 12c:	2f736461 	svccs	0x00736461
 130:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 134:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 138:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 13c:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 140:	616c2f35 	cmnvs	ip, r5, lsr pc
 144:	2f003562 	svccs	0x00003562
 148:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 14c:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
 150:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
 154:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 158:	616f6c6e 	cmnvs	pc, lr, ror #24
 15c:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
 160:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 164:	2f737265 	svccs	0x00737265
 168:	2f504f4d 	svccs	0x00504f4d
 16c:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 170:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 174:	65642f35 	strbvs	r2, [r4, #-3893]!	; 0xfffff0cb
 178:	7379616c 	cmnvc	r9, #108, 2
 17c:	4400632e 	strmi	r6, [r0], #-814	; 0xfffffcd2
 180:	59414c45 	stmdbpl	r1, {r0, r2, r6, sl, fp, lr}^
 184:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
 188:	64005245 	strvs	r5, [r0], #-581	; 0xfffffdbb
 18c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 190:	6c657300 	stclvs	3, cr7, [r5], #-0
 194:	5f746365 	svcpl	0x00746365
 198:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 19c:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 1a0:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
 1a4:	7379665f 	cmnvc	r9, #99614720	; 0x5f00000
 1a8:	006b7369 	rsbeq	r7, fp, r9, ror #6
 1ac:	7079746f 	rsbsvc	r7, r9, pc, ror #8
 1b0:	67007265 	strvs	r7, [r0, -r5, ror #4]
 1b4:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 1b8:	725f6369 	subsvc	r6, pc, #-1543503871	; 0xa4000001
 1bc:	5f646165 	svcpl	0x00646165
 1c0:	61746164 	cmnvs	r4, r4, ror #2
 1c4:	78697000 	stmdavc	r9!, {ip, sp, lr}^
 1c8:	6f006c65 	svcvs	0x00006c65
 1cc:	69487264 	stmdbvs	r8, {r2, r5, r6, r9, ip, sp, lr}^
 1d0:	67006867 	strvs	r6, [r0, -r7, ror #16]
 1d4:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 1d8:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
 1dc:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 1e0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
 1e4:	50470070 	subpl	r0, r7, r0, ror r0
 1e8:	67004f49 	strvs	r4, [r0, -r9, asr #30]
 1ec:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 1f0:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 1f4:	5f6c7274 	svcpl	0x006c7274
 1f8:	5f746962 	svcpl	0x00746962
 1fc:	61656c63 	cmnvs	r5, r3, ror #24
 200:	64690072 	strbtvs	r0, [r9], #-114	; 0xffffff8e
 204:	73655272 	cmnvc	r5, #536870919	; 0x20000007
 208:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 20c:	746f0064 	strbtvc	r0, [pc], #-100	; 214 <startup-0x1ffffdec>
 210:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
 214:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
 218:	61726700 	cmnvs	r2, r0, lsl #14
 21c:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 220:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 224:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
 228:	00657a69 	rsbeq	r7, r5, r9, ror #20
 22c:	64707570 	ldrbtvs	r7, [r0], #-1392	; 0xfffffa90
 230:	72670072 	rsbvc	r0, r7, #114	; 0x72
 234:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 238:	74635f63 	strbtvc	r5, [r3], #-3939	; 0xfffff09d
 23c:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
 240:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
 244:	62007465 	andvs	r7, r0, #1694498816	; 0x65000000
 248:	616d7469 	cmnvs	sp, r9, ror #8
 24c:	6f006b73 	svcvs	0x00006b73
 250:	65527264 	ldrbvs	r7, [r2, #-612]	; 0xfffffd9c
 254:	76726573 			; <UNDEFINED> instruction: 0x76726573
 258:	6f006465 	svcvs	0x00006465
 25c:	6f4c7264 	svcvs	0x004c7264
 260:	552f0077 	strpl	r0, [pc, #-119]!	; 1f1 <startup-0x1ffffe0f>
 264:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 268:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 26c:	2f6e6176 	svccs	0x006e6176
 270:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
 274:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
 278:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 27c:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 280:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; c0 <startup-0x1fffff40>
 284:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; 150 <startup-0x1ffffeb0>
 288:	2f356261 	svccs	0x00356261
 28c:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 290:	6172672f 	cmnvs	r2, pc, lsr #14
 294:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 298:	70736964 	rsbsvc	r6, r3, r4, ror #18
 29c:	2e79616c 	rpwcsez	f6, f1, #4.0
 2a0:	64690063 	strbtvs	r0, [r9], #-99	; 0xffffff9d
 2a4:	67694872 			; <UNDEFINED> instruction: 0x67694872
 2a8:	736f0068 	cmnvc	pc, #104	; 0x68
 2ac:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 2b0:	64690072 	strbtvs	r0, [r9], #-114	; 0xffffff8e
 2b4:	776f4c72 			; <UNDEFINED> instruction: 0x776f4c72
 2b8:	61726700 	cmnvs	r2, r0, lsl #14
 2bc:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 2c0:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 2c4:	645f6574 	ldrbvs	r6, [pc], #-1396	; 2cc <startup-0x1ffffd34>
 2c8:	00617461 	rsbeq	r7, r1, r1, ror #8
 2cc:	70617267 	rsbvc	r7, r1, r7, ror #4
 2d0:	5f636968 	svcpl	0x00636968
 2d4:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 2d8:	6165725f 	cmnvs	r5, pc, asr r2
 2dc:	69007964 	stmdbvs	r0, {r2, r5, r6, r8, fp, ip, sp, lr}
 2e0:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 2e4:	646f6d00 	strbtvs	r6, [pc], #-3328	; 2ec <startup-0x1ffffd14>
 2e8:	67007265 	strvs	r7, [r0, -r5, ror #4]
 2ec:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 2f0:	725f6369 	subsvc	r6, pc, #-1543503871	; 0xa4000001
 2f4:	00646165 	rsbeq	r6, r4, r5, ror #2
 2f8:	70617267 	rsbvc	r7, r1, r7, ror #4
 2fc:	5f636968 	svcpl	0x00636968
 300:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 304:	6f635f65 	svcvs	0x00635f65
 308:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
 30c:	72670064 	rsbvc	r0, r7, #100	; 0x64
 310:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 314:	6c635f63 	stclvs	15, cr5, [r3], #-396	; 0xfffffe74
 318:	5f726165 	svcpl	0x00726165
 31c:	65726373 	ldrbvs	r6, [r2, #-883]!	; 0xfffffc8d
 320:	50006e65 	andpl	r6, r0, r5, ror #28
 324:	4d4f4547 	cfstr64mi	mvdx4, [pc, #-284]	; 210 <startup-0x1ffffdf0>
 328:	59525445 	ldmdbpl	r2, {r0, r2, r6, sl, ip, lr}^
 32c:	736f7000 	cmnvc	pc, #0
 330:	6f700058 	svcvs	0x00700058
 334:	6d005973 	vstrvs.16	s10, [r0, #-230]	; 0xffffff1a	; <UNPREDICTABLE>
 338:	0065766f 	rsbeq	r7, r5, pc, ror #12
 33c:	696f5074 	stmdbvs	pc!, {r2, r4, r5, r6, ip, lr}^	; <UNPREDICTABLE>
 340:	5000746e 	andpl	r7, r0, lr, ror #8
 344:	544e494f 	strbpl	r4, [lr], #-2383	; 0xfffff6b1
 348:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
 34c:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 350:	73006465 	movwvc	r6, #1125	; 0x465
 354:	58657a69 	stmdapl	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
 358:	7a697300 	bvc	1a5cf60 <startup-0x1e5a30a0>
 35c:	74005965 	strvc	r5, [r0], #-2405	; 0xfffff69b
 360:	6d6f6547 	cfstr64vs	mvdx6, [pc, #-284]!	; 24c <startup-0x1ffffdb4>
 364:	79727465 	ldmdbvc	r2!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 368:	73552f00 	cmpvc	r5, #0, 30
 36c:	2f737265 	svccs	0x00737265
 370:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 374:	442f6e61 	strtmi	r6, [pc], #-3681	; 37c <startup-0x1ffffc84>
 378:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 37c:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 380:	6168432f 	cmnvs	r8, pc, lsr #6
 384:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 388:	4f4d2f73 	svcmi	0x004d2f73
 38c:	616c2f50 	cmnvs	ip, r0, asr pc
 390:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 210 <startup-0x1ffffdf0>
 394:	2f356261 	svccs	0x00356261
 398:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 39c:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
 3a0:	00632e67 	rsbeq	r2, r3, r7, ror #28
 3a4:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 3a8:	73005864 	movwvc	r5, #2148	; 0x864
 3ac:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 3b0:	72640059 	rsbvc	r0, r4, #89	; 0x59
 3b4:	73007761 	movwvc	r7, #1889	; 0x761
 3b8:	6f5f7465 	svcvs	0x005f7465
 3bc:	63656a62 	cmnvs	r5, #401408	; 0x62000
 3c0:	70735f74 	rsbsvc	r5, r3, r4, ror pc
 3c4:	00646565 	rsbeq	r6, r4, r5, ror #10
 3c8:	506d756e 	rsbpl	r7, sp, lr, ror #10
 3cc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
 3d0:	6c630073 	stclvs	0, cr0, [r3], #-460	; 0xfffffe34
 3d4:	5f726165 	svcpl	0x00726165
 3d8:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 3dc:	64007463 	strvs	r7, [r0], #-1123	; 0xfffffb9d
 3e0:	5f776172 	svcpl	0x00776172
 3e4:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 3e8:	64007463 	strvs	r7, [r0], #-1123	; 0xfffffb9d
 3ec:	00587269 	subseq	r7, r8, r9, ror #4
 3f0:	59726964 	ldmdbpl	r2!, {r2, r5, r6, r8, fp, sp, lr}^
 3f4:	624f7400 	subvs	r7, pc, #0, 8
 3f8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 3fc:	424f5000 	submi	r5, pc, #0
 400:	5443454a 	strbpl	r4, [r3], #-1354	; 0xfffffab6
 404:	73797300 	cmnvc	r9, #0, 6
 408:	6b636974 	blvs	18da9e0 <startup-0x1e725620>
 40c:	7172695f 	cmnvc	r2, pc, asr r9
 410:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
 414:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 418:	73552f00 	cmpvc	r5, #0, 30
 41c:	2f737265 	svccs	0x00737265
 420:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 424:	442f6e61 	strtmi	r6, [pc], #-3681	; 42c <startup-0x1ffffbd4>
 428:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 42c:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 430:	6168432f 	cmnvs	r8, pc, lsr #6
 434:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 438:	4f4d2f73 	svcmi	0x004d2f73
 43c:	616c2f50 	cmnvs	ip, r0, asr pc
 440:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 2c0 <startup-0x1ffffd40>
 444:	2f356261 	svccs	0x00356261
 448:	2e515249 	cdpcs	2, 5, cr5, cr1, cr9, {2}
 44c:	69640063 	stmdbvs	r4!, {r0, r1, r5, r6}^
 450:	616c7073 	smcvs	50947	; 0xc703
 454:	6f635f79 	svcvs	0x00635f79
 458:	6f72746e 	svcvs	0x0072746e
 45c:	7361006c 	cmnvc	r1, #108	; 0x6c
 460:	5f696963 	svcpl	0x00696963
 464:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 468:	63736100 	cmnvs	r3, #0, 2
 46c:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 470:	5f646165 	svcpl	0x00646165
 474:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 478:	61007375 	tstvs	r0, r5, ror r3
 47c:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 480:	6d6f635f 	stclvs	3, cr6, [pc, #-380]!	; 30c <startup-0x1ffffcf4>
 484:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
 488:	63736100 	cmnvs	r3, #0, 2
 48c:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 490:	5f646165 	svcpl	0x00646165
 494:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 498:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 49c:	61007265 	tstvs	r0, r5, ror #4
 4a0:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 4a4:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
 4a8:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 4ac:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
 4b0:	6c630074 	stclvs	0, cr0, [r3], #-464	; 0xfffffe30
 4b4:	5f726165 	svcpl	0x00726165
 4b8:	70736964 	rsbsvc	r6, r3, r4, ror #18
 4bc:	0079616c 	rsbseq	r6, r9, ip, ror #2
 4c0:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 4c4:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 4c8:	5f657469 	svcpl	0x00657469
 4cc:	00646d63 	rsbeq	r6, r4, r3, ror #26
 4d0:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 4d4:	00737365 	rsbseq	r7, r3, r5, ror #6
 4d8:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 4dc:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 4e0:	5f657469 	svcpl	0x00657469
 4e4:	61746164 	cmnvs	r4, r4, ror #2
 4e8:	63736100 	cmnvs	r3, #0, 2
 4ec:	675f6969 	ldrbvs	r6, [pc, -r9, ror #18]
 4f0:	786f746f 	stmdavc	pc!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 4f4:	6e650079 	mcrvs	0, 3, r0, cr5, cr9, {3}
 4f8:	5f797274 	svcpl	0x00797274
 4fc:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 500:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
 504:	73552f00 	cmpvc	r5, #0, 30
 508:	2f737265 	svccs	0x00737265
 50c:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 510:	442f6e61 	strtmi	r6, [pc], #-3681	; 518 <startup-0x1ffffae8>
 514:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 518:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 51c:	6168432f 	cmnvs	r8, pc, lsr #6
 520:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 524:	4f4d2f73 	svcmi	0x004d2f73
 528:	616c2f50 	cmnvs	ip, r0, asr pc
 52c:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 3ac <startup-0x1ffffc54>
 530:	2f356261 	svccs	0x00356261
 534:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 538:	00632e69 	rsbeq	r2, r3, r9, ror #28
 53c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 540:	74635f69 	strbtvc	r5, [r3], #-3945	; 0xfffff097
 544:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
 548:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
 54c:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 550:	63736100 	cmnvs	r3, #0, 2
 554:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 558:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 55c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 560:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 398 <startup-0x1ffffc68>
 564:	0072656c 	rsbseq	r6, r2, ip, ror #10
 568:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 56c:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
 570:	645f6461 	ldrbvs	r6, [pc], #-1121	; 578 <startup-0x1ffffa88>
 574:	00617461 	rsbeq	r7, r1, r1, ror #8
 578:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 57c:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 580:	5f657469 	svcpl	0x00657469
 584:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 588:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
 58c:	6f697463 	svcvs	0x00697463
 590:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
 594:	6f6d0074 	svcvs	0x006d0074
 598:	6f5f6576 	svcvs	0x005f6576
 59c:	63656a62 	cmnvs	r5, #401408	; 0x62000
 5a0:	61620074 	smcvs	8196	; 0x2004
 5a4:	675f6c6c 	ldrbvs	r6, [pc, -ip, ror #24]
 5a8:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
 5ac:	00797274 	rsbseq	r7, r9, r4, ror r2
 5b0:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
 5b4:	73552f00 	cmpvc	r5, #0, 30
 5b8:	2f737265 	svccs	0x00737265
 5bc:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 5c0:	442f6e61 	strtmi	r6, [pc], #-3681	; 5c8 <startup-0x1ffffa38>
 5c4:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 5c8:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 5cc:	6168432f 	cmnvs	r8, pc, lsr #6
 5d0:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 5d4:	4f4d2f73 	svcmi	0x004d2f73
 5d8:	616c2f50 	cmnvs	ip, r0, asr pc
 5dc:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 45c <startup-0x1ffffba4>
 5e0:	2f356261 	svccs	0x00356261
 5e4:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
 5e8:	5f00632e 	svcpl	0x0000632e
 5ec:	5f6f7364 	svcpl	0x006f7364
 5f0:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
 5f4:	5f00656c 	svcpl	0x0000656c
 5f8:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 5fc:	61725f00 	cmnvs	r2, r0, lsl #30
 600:	3834646e 	ldmdacc	r4!, {r1, r2, r3, r5, r6, sl, sp, lr}
 604:	6d655f00 	stclvs	15, cr5, [r5, #-0]
 608:	65677265 	strbvs	r7, [r7, #-613]!	; 0xfffffd9b
 60c:	0079636e 	rsbseq	r6, r9, lr, ror #6
 610:	7263775f 	rsbvc	r7, r3, #24903680	; 0x17c0000
 614:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
 618:	6174735f 	cmnvs	r4, pc, asr r3
 61c:	5f006574 	svcpl	0x00006574
 620:	72736377 	rsbsvc	r6, r3, #-603979775	; 0xdc000001
 624:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
 628:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
 62c:	00657461 	rsbeq	r7, r5, r1, ror #8
 630:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 634:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
 638:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
 63c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 640:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 644:	5f00746e 	svcpl	0x0000746e
 648:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
 64c:	00657a69 	rsbeq	r7, r5, r9, ror #20
 650:	6f6c5f5f 	svcvs	0x006c5f5f
 654:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
 658:	5f00745f 	svcpl	0x0000745f
 65c:	7472626d 	ldrbtvc	r6, [r2], #-621	; 0xfffffd93
 660:	5f63776f 	svcpl	0x0063776f
 664:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 668:	5f5f0065 	svcpl	0x005f0065
 66c:	735f6d74 	cmpvc	pc, #116, 26	; 0x1d00
 670:	6c006365 	stcvs	3, cr6, [r0], {101}	; 0x65
 674:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 678:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 67c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 680:	62755f00 	rsbsvs	r5, r5, #0, 30
 684:	5f006675 	svcpl	0x00006675
 688:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 68c:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 694 <startup-0x1ffff96c>
 690:	6f685f6d 	svcvs	0x00685f6d
 694:	5f007275 	svcpl	0x00007275
 698:	0066735f 	rsbeq	r7, r6, pc, asr r3
 69c:	5f6e6f5f 	svcpl	0x006e6f5f
 6a0:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
 6a4:	6772615f 			; <UNDEFINED> instruction: 0x6772615f
 6a8:	635f0073 	cmpvs	pc, #115	; 0x73
 6ac:	696b6f6f 	stmdbvs	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 6b0:	5f5f0065 	svcpl	0x005f0065
 6b4:	756c6773 	strbvc	r6, [ip, #-1907]!	; 0xfffff88d
 6b8:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
 6bc:	7367616c 	cmnvc	r7, #108, 2
 6c0:	73695f00 	cmnvc	r9, #0, 30
 6c4:	6178635f 	cmnvs	r8, pc, asr r3
 6c8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 6cc:	006e6964 	rsbeq	r6, lr, r4, ror #18
 6d0:	6b6c625f 	blvs	1b19054 <startup-0x1e4e6fac>
 6d4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 6d8:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
 6dc:	66756274 			; <UNDEFINED> instruction: 0x66756274
 6e0:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
 6e4:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
 6e8:	626d5f00 	rsbvs	r5, sp, #0, 30
 6ec:	6f747273 	svcvs	0x00747273
 6f0:	5f736377 	svcpl	0x00736377
 6f4:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 6f8:	6d5f0065 	ldclvs	0, cr0, [pc, #-404]	; 56c <startup-0x1ffffa94>
 6fc:	656c7262 	strbvs	r7, [ip, #-610]!	; 0xfffffd9e
 700:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
 704:	00657461 	rsbeq	r7, r5, r1, ror #8
 708:	616e665f 	cmnvs	lr, pc, asr r6
 70c:	00736772 	rsbseq	r6, r3, r2, ror r7
 710:	736e665f 	cmnvc	lr, #99614720	; 0x5f00000
 714:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
 718:	2f006e67 	svccs	0x00006e67
 71c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 720:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
 724:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
 728:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 72c:	616f6c6e 	cmnvs	pc, lr, ror #24
 730:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
 734:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 738:	2f737265 	svccs	0x00737265
 73c:	2f504f4d 	svccs	0x00504f4d
 740:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 744:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 748:	616d2f35 	cmnvs	sp, r5, lsr pc
 74c:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
 750:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 754:	72726564 	rsbsvc	r6, r2, #100, 10	; 0x19000000
 758:	69425f00 	stmdbvs	r2, {r8, r9, sl, fp, ip, lr}^
 75c:	746e6967 	strbtvc	r6, [lr], #-2407	; 0xfffff699
 760:	61675f00 	cmnvs	r7, r0, lsl #30
 764:	5f616d6d 	svcpl	0x00616d6d
 768:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 76c:	006d6167 	rsbeq	r6, sp, r7, ror #2
 770:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
 774:	5f746c75 	svcpl	0x00746c75
 778:	5f5f006b 	svcpl	0x005f006b
 77c:	5f006d74 	svcpl	0x00006d74
 780:	6863775f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 784:	735f0062 	cmpvc	pc, #98	; 0x62
 788:	756f6474 	strbvc	r6, [pc, #-1140]!	; 31c <startup-0x1ffffce4>
 78c:	635f0074 	cmpvs	pc, #116	; 0x74
 790:	656c7476 	strbvs	r7, [ip, #-1142]!	; 0xfffffb8a
 794:	665f006e 	ldrbvs	r0, [pc], -lr, rrx
 798:	00656c69 	rsbeq	r6, r5, r9, ror #24
 79c:	6f696e5f 	svcvs	0x00696e5f
 7a0:	5f007362 	svcpl	0x00007362
 7a4:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 7a8:	00307469 	eorseq	r7, r0, r9, ror #8
 7ac:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
 7b0:	5f6c616e 	svcpl	0x006c616e
 7b4:	00667562 	rsbeq	r7, r6, r2, ror #10
 7b8:	6373615f 	cmnvs	r3, #-1073741801	; 0xc0000017
 7bc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 7c0:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 7c4:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
 7c8:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
 7cc:	775f5f00 	ldrbvc	r5, [pc, -r0, lsl #30]
 7d0:	5f006863 	svcpl	0x00006863
 7d4:	4b434f4c 	blmi	10d450c <startup-0x1ef2baf4>
 7d8:	7700545f 	smlsdvc	r0, pc, r4, r5	; <UNPREDICTABLE>
 7dc:	5f746e69 	svcpl	0x00746e69
 7e0:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
 7e4:	7367616c 	cmnvc	r7, #108, 2
 7e8:	5f5f0032 	svcpl	0x005f0032
 7ec:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 7f0:	00726165 	rsbseq	r6, r2, r5, ror #2
 7f4:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
 7f8:	6b006674 	blvs	1a1d0 <startup-0x1ffe5e30>
 7fc:	00627965 	rsbeq	r7, r2, r5, ror #18
 800:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 804:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
 808:	74615f00 	strbtvc	r5, [r1], #-3840	; 0xfffff100
 80c:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
 810:	735f5f00 	cmpvc	pc, #0, 30
 814:	69646964 	stmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
 818:	0074696e 	rsbseq	r6, r4, lr, ror #18
 81c:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
 820:	5f00745f 	svcpl	0x0000745f
 824:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
 828:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 82c:	63775f00 	cmnvs	r7, #0, 30
 830:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
 834:	6174735f 	cmnvs	r4, pc, asr r3
 838:	5f006574 	svcpl	0x00006574
 83c:	0077656e 	rsbseq	r6, r7, lr, ror #10
 840:	655f685f 	ldrbvs	r6, [pc, #-2143]	; ffffffe9 <obstacle+0xdffff07d>
 844:	6f6e7272 	svcvs	0x006e7272
 848:	6f687300 	svcvs	0x00687300
 84c:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
 850:	5f00746e 	svcpl	0x0000746e
 854:	5f6d745f 	svcpl	0x006d745f
 858:	79616479 	stmdbvc	r1!, {r0, r3, r4, r5, r6, sl, sp, lr}^
 85c:	735f5f00 	cmpvc	pc, #0, 30
 860:	00667562 	rsbeq	r7, r6, r2, ror #10
 864:	626f695f 	rsbvs	r6, pc, #1556480	; 0x17c000
 868:	5f5f0073 	svcpl	0x005f0073
 86c:	454c4946 	strbmi	r4, [ip, #-2374]	; 0xfffff6ba
 870:	626d5f00 	rsbvs	r5, sp, #0, 30
 874:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 878:	00745f65 	rsbseq	r5, r4, r5, ror #30
 87c:	46735f5f 	uhsaxmi	r5, r3, pc	; <UNPREDICTABLE>
 880:	00454c49 	subeq	r4, r5, r9, asr #24
 884:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
 888:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 88c:	61725f00 	cmnvs	r2, r0, lsl #30
 890:	6e5f646e 	cdpvs	4, 5, cr6, cr15, cr14, {3}
 894:	00747865 	rsbseq	r7, r4, r5, ror #16
 898:	6c626d5f 	stclvs	13, cr6, [r2], #-380	; 0xfffffe84
 89c:	735f6e65 	cmpvc	pc, #1616	; 0x650
 8a0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 8a4:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
 8a8:	695f0063 	ldmdbvs	pc, {r0, r1, r5, r6}^	; <UNPREDICTABLE>
 8ac:	5f00646e 	svcpl	0x0000646e
 8b0:	61636f6c 	cmnvs	r3, ip, ror #30
 8b4:	5f00656c 	svcpl	0x0000656c
 8b8:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 8bc:	70756e61 	rsbsvc	r6, r5, r1, ror #28
 8c0:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
 8c4:	63657073 	cmnvs	r5, #115	; 0x73
 8c8:	65696669 	strbvs	r6, [r9, #-1641]!	; 0xfffff997
 8cc:	6f6c5f64 	svcvs	0x006c5f64
 8d0:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
 8d4:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 8d8:	6d5f006f 	ldclvs	0, cr0, [pc, #-444]	; 724 <startup-0x1ffff8dc>
 8dc:	64777861 	ldrbtvs	r7, [r7], #-2145	; 0xfffff79f
 8e0:	725f0073 	subsvc	r0, pc, #115	; 0x73
 8e4:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
 8e8:	65735f00 	ldrbvs	r5, [r3, #-3840]!	; 0xfffff100
 8ec:	5f006465 	svcpl	0x00006465
 8f0:	756f635f 	strbvc	r6, [pc, #-863]!	; 599 <startup-0x1ffffa67>
 8f4:	5f00746e 	svcpl	0x0000746e
 8f8:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 8fc:	5f5f006b 	svcpl	0x005f006b
 900:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 904:	735f0065 	cmpvc	pc, #101	; 0x65
 908:	006b6565 	rsbeq	r6, fp, r5, ror #10
 90c:	6f70665f 	svcvs	0x0070665f
 910:	00745f73 	rsbseq	r5, r4, r3, ror pc
 914:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 918:	6e696d5f 	mcrvs	13, 3, r6, cr9, cr15, {2}
 91c:	61747300 	cmnvs	r4, r0, lsl #6
 920:	70757472 	rsbsvc	r7, r5, r2, ror r4
 924:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
 928:	70615f74 	rsbvc	r5, r1, r4, ror pc
 92c:	6d5f0070 	ldclvs	0, cr0, [pc, #-448]	; 774 <startup-0x1ffff88c>
 930:	00746c75 	rsbseq	r6, r4, r5, ror ip
 934:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
 938:	5f6b6f74 	svcpl	0x006b6f74
 93c:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
 940:	6e665f00 	cdpvs	15, 6, cr5, cr6, cr0, {0}
 944:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 948:	615f0073 	cmpvs	pc, r3, ror r0	; <UNPREDICTABLE>
 94c:	5f006464 	svcpl	0x00006464
 950:	6f4c555f 	svcvs	0x004c555f
 954:	5f00676e 	svcpl	0x0000676e
 958:	64746567 	ldrbtvs	r6, [r4], #-1383	; 0xfffffa99
 95c:	5f657461 	svcpl	0x00657461
 960:	00727265 	rsbseq	r7, r2, r5, ror #4
 964:	6f6c675f 	svcvs	0x006c675f
 968:	5f6c6162 	svcpl	0x006c6162
 96c:	75706d69 	ldrbvc	r6, [r0, #-3433]!	; 0xfffff297
 970:	705f6572 	subsvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
 974:	5f007274 	svcpl	0x00007274
 978:	73756e75 	cmnvc	r5, #1872	; 0x750
 97c:	725f6465 	subsvc	r6, pc, #1694498816	; 0x65000000
 980:	00646e61 	rsbeq	r6, r4, r1, ror #28
 984:	7364775f 	cmnvc	r4, #24903680	; 0x17c0000
 988:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 990 <startup-0x1ffff670>
 98c:	64775f6d 	ldrbtvs	r5, [r7], #-3949	; 0xfffff093
 990:	5f007961 	svcpl	0x00007961
 994:	65756c67 	ldrbvs	r6, [r5, #-3175]!	; 0xfffff399
 998:	6d6e5f00 	stclvs	15, cr5, [lr, #-0]
 99c:	6f6c6c61 	svcvs	0x006c6c61
 9a0:	6c5f0063 	mrrcvs	0, 6, r0, pc, cr3	; <UNPREDICTABLE>
 9a4:	5f613436 	svcpl	0x00613436
 9a8:	00667562 	rsbeq	r7, r6, r2, ror #10
 9ac:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
 9b0:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
 9b4:	665f0063 	ldrbvs	r0, [pc], -r3, rrx
 9b8:	6b636f6c 	blvs	18dc770 <startup-0x1e723890>
 9bc:	5f00745f 	svcpl	0x0000745f
 9c0:	6675626e 	ldrbtvs	r6, [r5], -lr, ror #4
 9c4:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
 9c8:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
 9cc:	6d616700 	stclvs	7, cr6, [r1, #-0]
 9d0:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
 9d4:	6d5f7265 	lfmvs	f7, 2, [pc, #-404]	; 848 <startup-0x1ffff7b8>
 9d8:	5f006773 	svcpl	0x00006773
 9dc:	5f6d745f 	svcpl	0x006d745f
 9e0:	73647369 	cmnvc	r4, #-1543503871	; 0xa4000001
 9e4:	6c5f0074 	mrrcvs	0, 7, r0, pc, cr4	; <UNPREDICTABLE>
 9e8:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 9ec:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 9f0:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 9f4:	6c635f00 	stclvs	15, cr5, [r3], #-0
 9f8:	0065736f 	rsbeq	r7, r5, pc, ror #6
 9fc:	3834725f 	ldmdacc	r4!, {r0, r1, r2, r3, r4, r6, r9, ip, sp, lr}
 a00:	626d5f00 	rsbvs	r5, sp, #0, 30
 a04:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
 a08:	6174735f 	cmnvs	r4, pc, asr r3
 a0c:	5f006574 	svcpl	0x00006574
 a10:	00733570 	rsbseq	r3, r3, r0, ror r5
 a14:	6e69616d 	powvsez	f6, f1, #5.0
 a18:	745f5f00 	ldrbvc	r5, [pc], #-3840	; a20 <startup-0x1ffff5e0>
 a1c:	646d5f6d 	strbtvs	r5, [sp], #-3949	; 0xfffff093
 a20:	6d007961 	vstrvs.16	s14, [r0, #-194]	; 0xffffff3e	; <UNPREDICTABLE>
 a24:	5f65766f 	svcpl	0x0065766f
 a28:	7473626f 	ldrbtvc	r6, [r3], #-623	; 0xfffffd91
 a2c:	656c6361 	strbvs	r6, [ip, #-865]!	; 0xfffffc9f
 a30:	73626f00 	cmnvc	r2, #0, 30
 a34:	6c636174 	stfvse	f6, [r3], #-464	; 0xfffffe30
 a38:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
 a3c:	74656d6f 	strbtvc	r6, [r5], #-3439	; 0xfffff291
 a40:	2f007972 	svccs	0x00007972
 a44:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 a48:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
 a4c:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
 a50:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 a54:	616f6c6e 	cmnvs	pc, lr, ror #24
 a58:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
 a5c:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 a60:	2f737265 	svccs	0x00737265
 a64:	2f504f4d 	svccs	0x00504f4d
 a68:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 a6c:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 a70:	624f2f35 	subvs	r2, pc, #53, 30	; 0xd4
 a74:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 a78:	2e73656c 	cdpcs	5, 7, cr6, cr3, cr12, {3}
 a7c:	626b0063 	rsbvs	r0, fp, #99	; 0x63
 a80:	74654764 	strbtvc	r4, [r5], #-1892	; 0xfffff89c
 a84:	006c6f43 	rsbeq	r6, ip, r3, asr #30
 a88:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 a8c:	6b2f7372 	blvs	bdd85c <startup-0x1f4227a4>
 a90:	61766965 	cmnvs	r6, r5, ror #18
 a94:	6f442f6e 	svcvs	0x00442f6e
 a98:	6f6c6e77 	svcvs	0x006c6e77
 a9c:	2f736461 	svccs	0x00736461
 aa0:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 aa4:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 aa8:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 aac:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 ab0:	616c2f35 	cmnvs	ip, r5, lsr pc
 ab4:	6b2f3562 	blvs	bce044 <startup-0x1f431fbc>
 ab8:	61707965 	cmnvs	r0, r5, ror #18
 abc:	00632e64 	rsbeq	r2, r3, r4, ror #28
 ac0:	4164626b 	cmnmi	r4, fp, ror #4
 ac4:	76697463 	strbtvc	r7, [r9], -r3, ror #8
 ac8:	Address 0x0000000000000ac8 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <obstacle+0xdfffe3a2>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x000000000000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000018 	andeq	r0, r0, r8, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	00000044 	andeq	r0, r0, r4, asr #32
  20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  24:	41018e02 	tstmi	r1, r2, lsl #28
  28:	0000070d 	andeq	r0, r0, sp, lsl #14
  2c:	00000018 	andeq	r0, r0, r8, lsl r0
  30:	00000000 	andeq	r0, r0, r0
  34:	20000054 	andcs	r0, r0, r4, asr r0
  38:	00000012 	andeq	r0, r0, r2, lsl r0
  3c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  40:	41018e02 	tstmi	r1, r2, lsl #28
  44:	0000070d 	andeq	r0, r0, sp, lsl #14
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	20000066 	andcs	r0, r0, r6, rrx
  54:	0000002c 	andeq	r0, r0, ip, lsr #32
  58:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  5c:	41018e02 	tstmi	r1, r2, lsl #28
  60:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  64:	00000007 	andeq	r0, r0, r7
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	20000092 	mulcs	r0, r2, r0
  74:	00000026 	andeq	r0, r0, r6, lsr #32
  78:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  7c:	41018e02 	tstmi	r1, r2, lsl #28
  80:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  84:	00000007 	andeq	r0, r0, r7
  88:	00000018 	andeq	r0, r0, r8, lsl r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	200000b8 	strhcs	r0, [r0], -r8
  94:	0000003c 	andeq	r0, r0, ip, lsr r0
  98:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  9c:	41018e02 	tstmi	r1, r2, lsl #28
  a0:	0000070d 	andeq	r0, r0, sp, lsl #14
  a4:	0000001c 	andeq	r0, r0, ip, lsl r0
  a8:	00000000 	andeq	r0, r0, r0
  ac:	200000f4 	strdcs	r0, [r0], -r4
  b0:	00000030 	andeq	r0, r0, r0, lsr r0
  b4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b8:	41018e02 	tstmi	r1, r2, lsl #28
  bc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  c0:	00000007 	andeq	r0, r0, r7
  c4:	0000000c 	andeq	r0, r0, ip
  c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  cc:	7c020001 	stcvc	0, cr0, [r2], {1}
  d0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  d4:	0000001c 	andeq	r0, r0, ip, lsl r0
  d8:	000000c4 	andeq	r0, r0, r4, asr #1
  dc:	20000124 	andcs	r0, r0, r4, lsr #2
  e0:	00000038 	andeq	r0, r0, r8, lsr r0
  e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  e8:	41018e02 	tstmi	r1, r2, lsl #28
  ec:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  f0:	00000007 	andeq	r0, r0, r7
  f4:	0000001c 	andeq	r0, r0, ip, lsl r0
  f8:	000000c4 	andeq	r0, r0, r4, asr #1
  fc:	2000015c 	andcs	r0, r0, ip, asr r1
 100:	00000034 	andeq	r0, r0, r4, lsr r0
 104:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 108:	41018e02 	tstmi	r1, r2, lsl #28
 10c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 110:	00000007 	andeq	r0, r0, r7
 114:	0000001c 	andeq	r0, r0, ip, lsl r0
 118:	000000c4 	andeq	r0, r0, r4, asr #1
 11c:	20000190 	mulcs	r0, r0, r1
 120:	00000060 	andeq	r0, r0, r0, rrx
 124:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 128:	41018e02 	tstmi	r1, r2, lsl #28
 12c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 130:	00000007 	andeq	r0, r0, r7
 134:	00000018 	andeq	r0, r0, r8, lsl r0
 138:	000000c4 	andeq	r0, r0, r4, asr #1
 13c:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 140:	00000060 	andeq	r0, r0, r0, rrx
 144:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 148:	41018e02 	tstmi	r1, r2, lsl #28
 14c:	0000070d 	andeq	r0, r0, sp, lsl #14
 150:	0000001c 	andeq	r0, r0, ip, lsl r0
 154:	000000c4 	andeq	r0, r0, r4, asr #1
 158:	20000250 	andcs	r0, r0, r0, asr r2
 15c:	00000094 	muleq	r0, r4, r0
 160:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 164:	41018e02 	tstmi	r1, r2, lsl #28
 168:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 16c:	00000007 	andeq	r0, r0, r7
 170:	0000001c 	andeq	r0, r0, ip, lsl r0
 174:	000000c4 	andeq	r0, r0, r4, asr #1
 178:	200002e4 	andcs	r0, r0, r4, ror #5
 17c:	00000080 	andeq	r0, r0, r0, lsl #1
 180:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 184:	41018e02 	tstmi	r1, r2, lsl #28
 188:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 18c:	00000007 	andeq	r0, r0, r7
 190:	0000001c 	andeq	r0, r0, ip, lsl r0
 194:	000000c4 	andeq	r0, r0, r4, asr #1
 198:	20000364 	andcs	r0, r0, r4, ror #6
 19c:	00000046 	andeq	r0, r0, r6, asr #32
 1a0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1a4:	41018e02 	tstmi	r1, r2, lsl #28
 1a8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1ac:	00000007 	andeq	r0, r0, r7
 1b0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1b4:	000000c4 	andeq	r0, r0, r4, asr #1
 1b8:	200003aa 	andcs	r0, r0, sl, lsr #7
 1bc:	00000046 	andeq	r0, r0, r6, asr #32
 1c0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1c4:	41018e02 	tstmi	r1, r2, lsl #28
 1c8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1cc:	00000007 	andeq	r0, r0, r7
 1d0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d4:	000000c4 	andeq	r0, r0, r4, asr #1
 1d8:	200003f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 1dc:	0000002a 	andeq	r0, r0, sl, lsr #32
 1e0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1e4:	41018e02 	tstmi	r1, r2, lsl #28
 1e8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1ec:	00000007 	andeq	r0, r0, r7
 1f0:	00000018 	andeq	r0, r0, r8, lsl r0
 1f4:	000000c4 	andeq	r0, r0, r4, asr #1
 1f8:	2000041a 	andcs	r0, r0, sl, lsl r4
 1fc:	00000056 	andeq	r0, r0, r6, asr r0
 200:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 204:	41018e02 	tstmi	r1, r2, lsl #28
 208:	0000070d 	andeq	r0, r0, sp, lsl #14
 20c:	0000001c 	andeq	r0, r0, ip, lsl r0
 210:	000000c4 	andeq	r0, r0, r4, asr #1
 214:	20000470 	andcs	r0, r0, r0, ror r4
 218:	00000058 	andeq	r0, r0, r8, asr r0
 21c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 220:	41018e02 	tstmi	r1, r2, lsl #28
 224:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 228:	00000007 	andeq	r0, r0, r7
 22c:	00000020 	andeq	r0, r0, r0, lsr #32
 230:	000000c4 	andeq	r0, r0, r4, asr #1
 234:	200004c8 	andcs	r0, r0, r8, asr #9
 238:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 23c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 240:	86048505 	strhi	r8, [r4], -r5, lsl #10
 244:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 248:	280e4101 	stmdacs	lr, {r0, r8, lr}
 24c:	00070d41 	andeq	r0, r7, r1, asr #26
 250:	0000000c 	andeq	r0, r0, ip
 254:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 258:	7c020001 	stcvc	0, cr0, [r2], {1}
 25c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 260:	0000001c 	andeq	r0, r0, ip, lsl r0
 264:	00000250 	andeq	r0, r0, r0, asr r2
 268:	20000698 	mulcs	r0, r8, r6
 26c:	00000020 	andeq	r0, r0, r0, lsr #32
 270:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 274:	41018e02 	tstmi	r1, r2, lsl #28
 278:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 27c:	00000007 	andeq	r0, r0, r7
 280:	0000001c 	andeq	r0, r0, ip, lsl r0
 284:	00000250 	andeq	r0, r0, r0, asr r2
 288:	200006b8 			; <UNDEFINED> instruction: 0x200006b8
 28c:	0000005c 	andeq	r0, r0, ip, asr r0
 290:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 294:	41018e02 	tstmi	r1, r2, lsl #28
 298:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 29c:	00000007 	andeq	r0, r0, r7
 2a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2a4:	00000250 	andeq	r0, r0, r0, asr r2
 2a8:	20000714 	andcs	r0, r0, r4, lsl r7
 2ac:	0000005c 	andeq	r0, r0, ip, asr r0
 2b0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2b4:	41018e02 	tstmi	r1, r2, lsl #28
 2b8:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 2bc:	00000007 	andeq	r0, r0, r7
 2c0:	0000000c 	andeq	r0, r0, ip
 2c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2c8:	7c020001 	stcvc	0, cr0, [r2], {1}
 2cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2d0:	00000018 	andeq	r0, r0, r8, lsl r0
 2d4:	000002c0 	andeq	r0, r0, r0, asr #5
 2d8:	20000770 	andcs	r0, r0, r0, ror r7
 2dc:	0000003c 	andeq	r0, r0, ip, lsr r0
 2e0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2e4:	41018e02 	tstmi	r1, r2, lsl #28
 2e8:	0000070d 	andeq	r0, r0, sp, lsl #14
 2ec:	0000000c 	andeq	r0, r0, ip
 2f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2f4:	7c020001 	stcvc	0, cr0, [r2], {1}
 2f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 300:	000002ec 	andeq	r0, r0, ip, ror #5
 304:	200007ac 	andcs	r0, r0, ip, lsr #15
 308:	00000030 	andeq	r0, r0, r0, lsr r0
 30c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 310:	41018e02 	tstmi	r1, r2, lsl #28
 314:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 318:	00000007 	andeq	r0, r0, r7
 31c:	0000001c 	andeq	r0, r0, ip, lsl r0
 320:	000002ec 	andeq	r0, r0, ip, ror #5
 324:	200007dc 	ldrdcs	r0, [r0], -ip
 328:	0000003c 	andeq	r0, r0, ip, lsr r0
 32c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 330:	41018e02 	tstmi	r1, r2, lsl #28
 334:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 338:	00000007 	andeq	r0, r0, r7
 33c:	0000001c 	andeq	r0, r0, ip, lsl r0
 340:	000002ec 	andeq	r0, r0, ip, ror #5
 344:	20000818 	andcs	r0, r0, r8, lsl r8
 348:	00000038 	andeq	r0, r0, r8, lsr r0
 34c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 350:	41018e02 	tstmi	r1, r2, lsl #28
 354:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 358:	00000007 	andeq	r0, r0, r7
 35c:	0000001c 	andeq	r0, r0, ip, lsl r0
 360:	000002ec 	andeq	r0, r0, ip, ror #5
 364:	20000850 	andcs	r0, r0, r0, asr r8
 368:	00000034 	andeq	r0, r0, r4, lsr r0
 36c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 370:	41018e02 	tstmi	r1, r2, lsl #28
 374:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 378:	00000007 	andeq	r0, r0, r7
 37c:	0000001c 	andeq	r0, r0, ip, lsl r0
 380:	000002ec 	andeq	r0, r0, ip, ror #5
 384:	20000884 	andcs	r0, r0, r4, lsl #17
 388:	00000024 	andeq	r0, r0, r4, lsr #32
 38c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 390:	41018e02 	tstmi	r1, r2, lsl #28
 394:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 398:	00000007 	andeq	r0, r0, r7
 39c:	0000001c 	andeq	r0, r0, ip, lsl r0
 3a0:	000002ec 	andeq	r0, r0, ip, ror #5
 3a4:	200008a8 	andcs	r0, r0, r8, lsr #17
 3a8:	0000002a 	andeq	r0, r0, sl, lsr #32
 3ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 3b0:	41018e02 	tstmi	r1, r2, lsl #28
 3b4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 3b8:	00000007 	andeq	r0, r0, r7
 3bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 3c0:	000002ec 	andeq	r0, r0, ip, ror #5
 3c4:	200008d2 	ldrdcs	r0, [r0], -r2
 3c8:	0000003e 	andeq	r0, r0, lr, lsr r0
 3cc:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 3d0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 3d4:	180e4101 	stmdane	lr, {r0, r8, lr}
 3d8:	00070d41 	andeq	r0, r7, r1, asr #26
 3dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 3e0:	000002ec 	andeq	r0, r0, ip, ror #5
 3e4:	20000910 	andcs	r0, r0, r0, lsl r9
 3e8:	00000038 	andeq	r0, r0, r8, lsr r0
 3ec:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 3f0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 3f4:	180e4101 	stmdane	lr, {r0, r8, lr}
 3f8:	00070d41 	andeq	r0, r7, r1, asr #26
 3fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 400:	000002ec 	andeq	r0, r0, ip, ror #5
 404:	20000948 	andcs	r0, r0, r8, asr #18
 408:	00000036 	andeq	r0, r0, r6, lsr r0
 40c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 410:	41018e02 	tstmi	r1, r2, lsl #28
 414:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 418:	00000007 	andeq	r0, r0, r7
 41c:	00000018 	andeq	r0, r0, r8, lsl r0
 420:	000002ec 	andeq	r0, r0, ip, ror #5
 424:	2000097e 	andcs	r0, r0, lr, ror r9
 428:	00000016 	andeq	r0, r0, r6, lsl r0
 42c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 430:	41018e02 	tstmi	r1, r2, lsl #28
 434:	0000070d 	andeq	r0, r0, sp, lsl #14
 438:	00000018 	andeq	r0, r0, r8, lsl r0
 43c:	000002ec 	andeq	r0, r0, ip, ror #5
 440:	20000994 	mulcs	r0, r4, r9
 444:	00000016 	andeq	r0, r0, r6, lsl r0
 448:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 44c:	41018e02 	tstmi	r1, r2, lsl #28
 450:	0000070d 	andeq	r0, r0, sp, lsl #14
 454:	00000018 	andeq	r0, r0, r8, lsl r0
 458:	000002ec 	andeq	r0, r0, ip, ror #5
 45c:	200009aa 	andcs	r0, r0, sl, lsr #19
 460:	00000016 	andeq	r0, r0, r6, lsl r0
 464:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 468:	41018e02 	tstmi	r1, r2, lsl #28
 46c:	0000070d 	andeq	r0, r0, sp, lsl #14
 470:	00000018 	andeq	r0, r0, r8, lsl r0
 474:	000002ec 	andeq	r0, r0, ip, ror #5
 478:	200009c0 	andcs	r0, r0, r0, asr #19
 47c:	00000016 	andeq	r0, r0, r6, lsl r0
 480:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 484:	41018e02 	tstmi	r1, r2, lsl #28
 488:	0000070d 	andeq	r0, r0, sp, lsl #14
 48c:	00000018 	andeq	r0, r0, r8, lsl r0
 490:	000002ec 	andeq	r0, r0, ip, ror #5
 494:	200009d6 	ldrdcs	r0, [r0], -r6
 498:	0000001a 	andeq	r0, r0, sl, lsl r0
 49c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4a0:	41018e02 	tstmi	r1, r2, lsl #28
 4a4:	0000070d 	andeq	r0, r0, sp, lsl #14
 4a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4ac:	000002ec 	andeq	r0, r0, ip, ror #5
 4b0:	200009f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 4b4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4b8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4bc:	41018e02 	tstmi	r1, r2, lsl #28
 4c0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 4c4:	00000007 	andeq	r0, r0, r7
 4c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4cc:	000002ec 	andeq	r0, r0, ip, ror #5
 4d0:	20000a2c 	andcs	r0, r0, ip, lsr #20
 4d4:	00000024 	andeq	r0, r0, r4, lsr #32
 4d8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4dc:	41018e02 	tstmi	r1, r2, lsl #28
 4e0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 4e4:	00000007 	andeq	r0, r0, r7
 4e8:	0000000c 	andeq	r0, r0, ip
 4ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4f0:	7c020001 	stcvc	0, cr0, [r2], {1}
 4f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 4f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4fc:	000004e8 	andeq	r0, r0, r8, ror #9
 500:	20000a50 	andcs	r0, r0, r0, asr sl
 504:	000000e8 	andeq	r0, r0, r8, ror #1
 508:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 50c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 510:	180e4101 	stmdane	lr, {r0, r8, lr}
 514:	00070d41 	andeq	r0, r7, r1, asr #26
 518:	0000000c 	andeq	r0, r0, ip
 51c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 520:	7c020001 	stcvc	0, cr0, [r2], {1}
 524:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 528:	0000000c 	andeq	r0, r0, ip
 52c:	00000518 	andeq	r0, r0, r8, lsl r5
 530:	20000000 	andcs	r0, r0, r0
 534:	0000000c 	andeq	r0, r0, ip
 538:	00000018 	andeq	r0, r0, r8, lsl r0
 53c:	00000518 	andeq	r0, r0, r8, lsl r5
 540:	20000b38 	andcs	r0, r0, r8, lsr fp
 544:	000000a4 	andeq	r0, r0, r4, lsr #1
 548:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 54c:	41018e02 	tstmi	r1, r2, lsl #28
 550:	0000070d 	andeq	r0, r0, sp, lsl #14
 554:	0000001c 	andeq	r0, r0, ip, lsl r0
 558:	00000518 	andeq	r0, r0, r8, lsl r5
 55c:	20000bdc 	ldrdcs	r0, [r0], -ip
 560:	0000012c 	andeq	r0, r0, ip, lsr #2
 564:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 568:	41018e02 	tstmi	r1, r2, lsl #28
 56c:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
 570:	00000007 	andeq	r0, r0, r7
 574:	0000000c 	andeq	r0, r0, ip
 578:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 57c:	7c020001 	stcvc	0, cr0, [r2], {1}
 580:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 584:	0000001c 	andeq	r0, r0, ip, lsl r0
 588:	00000574 	andeq	r0, r0, r4, ror r5
 58c:	20000d08 	andcs	r0, r0, r8, lsl #26
 590:	0000004c 	andeq	r0, r0, ip, asr #32
 594:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 598:	41018e02 	tstmi	r1, r2, lsl #28
 59c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 5a0:	00000007 	andeq	r0, r0, r7
 5a4:	0000000c 	andeq	r0, r0, ip
 5a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 5ac:	7c020001 	stcvc	0, cr0, [r2], {1}
 5b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 5b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 5b8:	000005a4 	andeq	r0, r0, r4, lsr #11
 5bc:	20000d54 	andcs	r0, r0, r4, asr sp
 5c0:	00000058 	andeq	r0, r0, r8, asr r0
 5c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 5c8:	41018e02 	tstmi	r1, r2, lsl #28
 5cc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 5d0:	00000007 	andeq	r0, r0, r7
 5d4:	00000020 	andeq	r0, r0, r0, lsr #32
 5d8:	000005a4 	andeq	r0, r0, r4, lsr #11
 5dc:	20000dac 	andcs	r0, r0, ip, lsr #27
 5e0:	00000094 	muleq	r0, r4, r0
 5e4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 5e8:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 5ec:	41018e02 	tstmi	r1, r2, lsl #28
 5f0:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
 5f4:	00000007 	andeq	r0, r0, r7
 5f8:	00000020 	andeq	r0, r0, r0, lsr #32
 5fc:	000005a4 	andeq	r0, r0, r4, lsr #11
 600:	20000e40 	andcs	r0, r0, r0, asr #28
 604:	00000088 	andeq	r0, r0, r8, lsl #1
 608:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 60c:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 610:	41018e02 	tstmi	r1, r2, lsl #28
 614:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
 618:	00000007 	andeq	r0, r0, r7

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000b38 	andcs	r0, r0, r8, lsr fp
   4:	20000d08 	andcs	r0, r0, r8, lsl #26
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
