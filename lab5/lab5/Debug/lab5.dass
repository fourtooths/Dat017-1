
./Debug/lab5.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
//Startup
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 fd68 	bl	20000ad8 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <move_obstacle>:
		{6, 0}, {6, 10}, {7, 0}, {7, 10}, {8, 0}, {8, 10}, {9, 0}, {9, 10}, {10, 0}, {10, 10},  
		{0, 10}, {1, 10}, {2, 10}, {3, 10}, {4, 10}, {5, 10}, {6, 10}, {7, 10}, {8, 10}, {9, 10}, {10, 10}  
	}
};

void move_obstacle(POBJECT object){
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
20000016:	6078      	str	r0, [r7, #4]
	if(object->posX < 1){     //om utanför skärmen, radera
20000018:	687b      	ldr	r3, [r7, #4]
2000001a:	68db      	ldr	r3, [r3, #12]
2000001c:	2b00      	cmp	r3, #0
2000001e:	dc04      	bgt.n	2000002a <move_obstacle+0x1a>
		clear_object(object);
20000020:	687b      	ldr	r3, [r7, #4]
20000022:	0018      	movs	r0, r3
20000024:	f000 f99c 	bl	20000360 <clear_object>
		return;
20000028:	e015      	b.n	20000056 <move_obstacle+0x46>
	}
	clear_object(object);
2000002a:	687b      	ldr	r3, [r7, #4]
2000002c:	0018      	movs	r0, r3
2000002e:	f000 f997 	bl	20000360 <clear_object>
	object->posX += object->dirX;
20000032:	687b      	ldr	r3, [r7, #4]
20000034:	68da      	ldr	r2, [r3, #12]
20000036:	687b      	ldr	r3, [r7, #4]
20000038:	685b      	ldr	r3, [r3, #4]
2000003a:	18d2      	adds	r2, r2, r3
2000003c:	687b      	ldr	r3, [r7, #4]
2000003e:	60da      	str	r2, [r3, #12]
	object->posY += object->dirY;
20000040:	687b      	ldr	r3, [r7, #4]
20000042:	691a      	ldr	r2, [r3, #16]
20000044:	687b      	ldr	r3, [r7, #4]
20000046:	689b      	ldr	r3, [r3, #8]
20000048:	18d2      	adds	r2, r2, r3
2000004a:	687b      	ldr	r3, [r7, #4]
2000004c:	611a      	str	r2, [r3, #16]
	draw_object(object);
2000004e:	687b      	ldr	r3, [r7, #4]
20000050:	0018      	movs	r0, r3
20000052:	f000 f957 	bl	20000304 <draw_object>
}
20000056:	46bd      	mov	sp, r7
20000058:	b002      	add	sp, #8
2000005a:	bd80      	pop	{r7, pc}

2000005c <kbdActive>:
#include <stdio.h>
#include "defines.h"

void kbdActive(unsigned char row)
{
2000005c:	b580      	push	{r7, lr}
2000005e:	b082      	sub	sp, #8
20000060:	af00      	add	r7, sp, #0
20000062:	0002      	movs	r2, r0
20000064:	1dfb      	adds	r3, r7, #7
20000066:	701a      	strb	r2, [r3, #0]
	switch(row){
20000068:	1dfb      	adds	r3, r7, #7
2000006a:	781b      	ldrb	r3, [r3, #0]
2000006c:	2b02      	cmp	r3, #2
2000006e:	d00c      	beq.n	2000008a <kbdActive+0x2e>
20000070:	dc02      	bgt.n	20000078 <kbdActive+0x1c>
20000072:	2b01      	cmp	r3, #1
20000074:	d005      	beq.n	20000082 <kbdActive+0x26>
20000076:	e014      	b.n	200000a2 <kbdActive+0x46>
20000078:	2b03      	cmp	r3, #3
2000007a:	d00a      	beq.n	20000092 <kbdActive+0x36>
2000007c:	2b04      	cmp	r3, #4
2000007e:	d00c      	beq.n	2000009a <kbdActive+0x3e>
20000080:	e00f      	b.n	200000a2 <kbdActive+0x46>
		case 1: GPIO_D.odrHigh = 0x10; break;
20000082:	4b0b      	ldr	r3, [pc, #44]	; (200000b0 <kbdActive+0x54>)
20000084:	2210      	movs	r2, #16
20000086:	755a      	strb	r2, [r3, #21]
20000088:	e00e      	b.n	200000a8 <kbdActive+0x4c>
		case 2: GPIO_D.odrHigh = 0x20; break;
2000008a:	4b09      	ldr	r3, [pc, #36]	; (200000b0 <kbdActive+0x54>)
2000008c:	2220      	movs	r2, #32
2000008e:	755a      	strb	r2, [r3, #21]
20000090:	e00a      	b.n	200000a8 <kbdActive+0x4c>
		case 3: GPIO_D.odrHigh = 0x40; break;
20000092:	4b07      	ldr	r3, [pc, #28]	; (200000b0 <kbdActive+0x54>)
20000094:	2240      	movs	r2, #64	; 0x40
20000096:	755a      	strb	r2, [r3, #21]
20000098:	e006      	b.n	200000a8 <kbdActive+0x4c>
		case 4: GPIO_D.odrHigh = 0x80; break;
2000009a:	4b05      	ldr	r3, [pc, #20]	; (200000b0 <kbdActive+0x54>)
2000009c:	2280      	movs	r2, #128	; 0x80
2000009e:	755a      	strb	r2, [r3, #21]
200000a0:	e002      	b.n	200000a8 <kbdActive+0x4c>
		default: GPIO_D.odrHigh = 0;
200000a2:	4b03      	ldr	r3, [pc, #12]	; (200000b0 <kbdActive+0x54>)
200000a4:	2200      	movs	r2, #0
200000a6:	755a      	strb	r2, [r3, #21]

	}
}
200000a8:	46c0      	nop			; (mov r8, r8)
200000aa:	46bd      	mov	sp, r7
200000ac:	b002      	add	sp, #8
200000ae:	bd80      	pop	{r7, pc}
200000b0:	40020c00 	andmi	r0, r2, r0, lsl #24

200000b4 <kbdGetCol>:


unsigned char kbdGetCol(void)
{
200000b4:	b5b0      	push	{r4, r5, r7, lr}
200000b6:	b086      	sub	sp, #24
200000b8:	af00      	add	r7, sp, #0
	unsigned char c = GPIO_D.idrHigh;
200000ba:	4a21      	ldr	r2, [pc, #132]	; (20000140 <kbdGetCol+0x8c>)
200000bc:	2316      	movs	r3, #22
200000be:	18fb      	adds	r3, r7, r3
200000c0:	7c52      	ldrb	r2, [r2, #17]
200000c2:	701a      	strb	r2, [r3, #0]
	unsigned char row, col;
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE, 0, 0xF, 0xD};
200000c4:	1d3b      	adds	r3, r7, #4
200000c6:	4a1f      	ldr	r2, [pc, #124]	; (20000144 <kbdGetCol+0x90>)
200000c8:	ca13      	ldmia	r2!, {r0, r1, r4}
200000ca:	c313      	stmia	r3!, {r0, r1, r4}
200000cc:	6812      	ldr	r2, [r2, #0]
200000ce:	601a      	str	r2, [r3, #0]
	for(row=1; row<=4; row++){
200000d0:	2317      	movs	r3, #23
200000d2:	18fb      	adds	r3, r7, r3
200000d4:	2201      	movs	r2, #1
200000d6:	701a      	strb	r2, [r3, #0]
200000d8:	e025      	b.n	20000126 <kbdGetCol+0x72>
		kbdActive(row);
200000da:	2317      	movs	r3, #23
200000dc:	18fb      	adds	r3, r7, r3
200000de:	781b      	ldrb	r3, [r3, #0]
200000e0:	0018      	movs	r0, r3
200000e2:	f7ff ffbb 	bl	2000005c <kbdActive>
		
		if(col=kbdGetCol()){
200000e6:	2515      	movs	r5, #21
200000e8:	197c      	adds	r4, r7, r5
200000ea:	f7ff ffe3 	bl	200000b4 <kbdGetCol>
200000ee:	0003      	movs	r3, r0
200000f0:	7023      	strb	r3, [r4, #0]
200000f2:	197b      	adds	r3, r7, r5
200000f4:	781b      	ldrb	r3, [r3, #0]
200000f6:	2b00      	cmp	r3, #0
200000f8:	d00f      	beq.n	2000011a <kbdGetCol+0x66>
			kbdActive(0);
200000fa:	2000      	movs	r0, #0
200000fc:	f7ff ffae 	bl	2000005c <kbdActive>
			
			return key[(row-1)*4+(col-1)];
20000100:	2317      	movs	r3, #23
20000102:	18fb      	adds	r3, r7, r3
20000104:	781b      	ldrb	r3, [r3, #0]
20000106:	3b01      	subs	r3, #1
20000108:	009a      	lsls	r2, r3, #2
2000010a:	2315      	movs	r3, #21
2000010c:	18fb      	adds	r3, r7, r3
2000010e:	781b      	ldrb	r3, [r3, #0]
20000110:	3b01      	subs	r3, #1
20000112:	18d3      	adds	r3, r2, r3
20000114:	1d3a      	adds	r2, r7, #4
20000116:	5cd3      	ldrb	r3, [r2, r3]
20000118:	e00e      	b.n	20000138 <kbdGetCol+0x84>
	for(row=1; row<=4; row++){
2000011a:	2117      	movs	r1, #23
2000011c:	187b      	adds	r3, r7, r1
2000011e:	781a      	ldrb	r2, [r3, #0]
20000120:	187b      	adds	r3, r7, r1
20000122:	3201      	adds	r2, #1
20000124:	701a      	strb	r2, [r3, #0]
20000126:	2317      	movs	r3, #23
20000128:	18fb      	adds	r3, r7, r3
2000012a:	781b      	ldrb	r3, [r3, #0]
2000012c:	2b04      	cmp	r3, #4
2000012e:	d9d4      	bls.n	200000da <kbdGetCol+0x26>
		}
	}
	kbdActive(0);
20000130:	2000      	movs	r0, #0
20000132:	f7ff ff93 	bl	2000005c <kbdActive>
	return 0xff;
20000136:	23ff      	movs	r3, #255	; 0xff
}
20000138:	0018      	movs	r0, r3
2000013a:	46bd      	mov	sp, r7
2000013c:	b006      	add	sp, #24
2000013e:	bdb0      	pop	{r4, r5, r7, pc}
20000140:	40020c00 	andmi	r0, r2, r0, lsl #24
20000144:	20000c20 	andcs	r0, r0, r0, lsr #24

20000148 <keyb>:

unsigned char keyb(void)
{
20000148:	b5b0      	push	{r4, r5, r7, lr}
2000014a:	b086      	sub	sp, #24
2000014c:	af00      	add	r7, sp, #0
	unsigned char row, col;
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE, 0, 0xF, 0xD};
2000014e:	1d3b      	adds	r3, r7, #4
20000150:	4a1e      	ldr	r2, [pc, #120]	; (200001cc <keyb+0x84>)
20000152:	ca13      	ldmia	r2!, {r0, r1, r4}
20000154:	c313      	stmia	r3!, {r0, r1, r4}
20000156:	6812      	ldr	r2, [r2, #0]
20000158:	601a      	str	r2, [r3, #0]
	for(row=1; row<=4; row++){
2000015a:	2317      	movs	r3, #23
2000015c:	18fb      	adds	r3, r7, r3
2000015e:	2201      	movs	r2, #1
20000160:	701a      	strb	r2, [r3, #0]
20000162:	e025      	b.n	200001b0 <keyb+0x68>
		kbdActive(row);
20000164:	2317      	movs	r3, #23
20000166:	18fb      	adds	r3, r7, r3
20000168:	781b      	ldrb	r3, [r3, #0]
2000016a:	0018      	movs	r0, r3
2000016c:	f7ff ff76 	bl	2000005c <kbdActive>
		
		if(col=kbdGetCol()){
20000170:	2516      	movs	r5, #22
20000172:	197c      	adds	r4, r7, r5
20000174:	f7ff ff9e 	bl	200000b4 <kbdGetCol>
20000178:	0003      	movs	r3, r0
2000017a:	7023      	strb	r3, [r4, #0]
2000017c:	197b      	adds	r3, r7, r5
2000017e:	781b      	ldrb	r3, [r3, #0]
20000180:	2b00      	cmp	r3, #0
20000182:	d00f      	beq.n	200001a4 <keyb+0x5c>
			kbdActive(0);
20000184:	2000      	movs	r0, #0
20000186:	f7ff ff69 	bl	2000005c <kbdActive>
			
			return key[(row-1)*4+(col-1)];
2000018a:	2317      	movs	r3, #23
2000018c:	18fb      	adds	r3, r7, r3
2000018e:	781b      	ldrb	r3, [r3, #0]
20000190:	3b01      	subs	r3, #1
20000192:	009a      	lsls	r2, r3, #2
20000194:	2316      	movs	r3, #22
20000196:	18fb      	adds	r3, r7, r3
20000198:	781b      	ldrb	r3, [r3, #0]
2000019a:	3b01      	subs	r3, #1
2000019c:	18d3      	adds	r3, r2, r3
2000019e:	1d3a      	adds	r2, r7, #4
200001a0:	5cd3      	ldrb	r3, [r2, r3]
200001a2:	e00e      	b.n	200001c2 <keyb+0x7a>
	for(row=1; row<=4; row++){
200001a4:	2117      	movs	r1, #23
200001a6:	187b      	adds	r3, r7, r1
200001a8:	781a      	ldrb	r2, [r3, #0]
200001aa:	187b      	adds	r3, r7, r1
200001ac:	3201      	adds	r2, #1
200001ae:	701a      	strb	r2, [r3, #0]
200001b0:	2317      	movs	r3, #23
200001b2:	18fb      	adds	r3, r7, r3
200001b4:	781b      	ldrb	r3, [r3, #0]
200001b6:	2b04      	cmp	r3, #4
200001b8:	d9d4      	bls.n	20000164 <keyb+0x1c>
		}
	}
	kbdActive(0);
200001ba:	2000      	movs	r0, #0
200001bc:	f7ff ff4e 	bl	2000005c <kbdActive>
	return 0xff;
200001c0:	23ff      	movs	r3, #255	; 0xff
200001c2:	0018      	movs	r0, r3
200001c4:	46bd      	mov	sp, r7
200001c6:	b006      	add	sp, #24
200001c8:	bdb0      	pop	{r4, r5, r7, pc}
200001ca:	46c0      	nop			; (mov r8, r8)
200001cc:	20000c20 	andcs	r0, r0, r0, lsr #24

200001d0 <delay_250ns>:
#include "defines.h"
#include "globals.h"

void delay_250ns(void){
200001d0:	b580      	push	{r7, lr}
200001d2:	af00      	add	r7, sp, #0
	
	*STK_CTRL = 0;
200001d4:	4b0c      	ldr	r3, [pc, #48]	; (20000208 <delay_250ns+0x38>)
200001d6:	2200      	movs	r2, #0
200001d8:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1 );
200001da:	4b0c      	ldr	r3, [pc, #48]	; (2000020c <delay_250ns+0x3c>)
200001dc:	2229      	movs	r2, #41	; 0x29
200001de:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
200001e0:	4b0b      	ldr	r3, [pc, #44]	; (20000210 <delay_250ns+0x40>)
200001e2:	2200      	movs	r2, #0
200001e4:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
200001e6:	4b08      	ldr	r3, [pc, #32]	; (20000208 <delay_250ns+0x38>)
200001e8:	2205      	movs	r2, #5
200001ea:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000 )== 0 ) {}
200001ec:	46c0      	nop			; (mov r8, r8)
200001ee:	4b06      	ldr	r3, [pc, #24]	; (20000208 <delay_250ns+0x38>)
200001f0:	681a      	ldr	r2, [r3, #0]
200001f2:	2380      	movs	r3, #128	; 0x80
200001f4:	025b      	lsls	r3, r3, #9
200001f6:	4013      	ands	r3, r2
200001f8:	d0f9      	beq.n	200001ee <delay_250ns+0x1e>
	*STK_CTRL = 0;
200001fa:	4b03      	ldr	r3, [pc, #12]	; (20000208 <delay_250ns+0x38>)
200001fc:	2200      	movs	r2, #0
200001fe:	601a      	str	r2, [r3, #0]
}
20000200:	46c0      	nop			; (mov r8, r8)
20000202:	46bd      	mov	sp, r7
20000204:	bd80      	pop	{r7, pc}
20000206:	46c0      	nop			; (mov r8, r8)
20000208:	e000e010 	and	lr, r0, r0, lsl r0
2000020c:	e000e014 	and	lr, r0, r4, lsl r0
20000210:	e000e018 	and	lr, r0, r8, lsl r0

20000214 <delay_500ns>:

void delay_500ns(void){
20000214:	b580      	push	{r7, lr}
20000216:	af00      	add	r7, sp, #0
	delay_250ns();
20000218:	f7ff ffda 	bl	200001d0 <delay_250ns>
	delay_250ns();
2000021c:	f7ff ffd8 	bl	200001d0 <delay_250ns>
}
20000220:	46c0      	nop			; (mov r8, r8)
20000222:	46bd      	mov	sp, r7
20000224:	bd80      	pop	{r7, pc}

20000226 <delay_mikro>:

void delay_mikro(unsigned int us){
20000226:	b580      	push	{r7, lr}
20000228:	b082      	sub	sp, #8
2000022a:	af00      	add	r7, sp, #0
2000022c:	6078      	str	r0, [r7, #4]
	
	while(us--) 
2000022e:	e007      	b.n	20000240 <delay_mikro+0x1a>
	{
		delay_250ns();
20000230:	f7ff ffce 	bl	200001d0 <delay_250ns>
		delay_250ns();
20000234:	f7ff ffcc 	bl	200001d0 <delay_250ns>
		delay_250ns();
20000238:	f7ff ffca 	bl	200001d0 <delay_250ns>
		delay_250ns();
2000023c:	f7ff ffc8 	bl	200001d0 <delay_250ns>
	while(us--) 
20000240:	687b      	ldr	r3, [r7, #4]
20000242:	1e5a      	subs	r2, r3, #1
20000244:	607a      	str	r2, [r7, #4]
20000246:	2b00      	cmp	r3, #0
20000248:	d1f2      	bne.n	20000230 <delay_mikro+0xa>
	}
}
2000024a:	46c0      	nop			; (mov r8, r8)
2000024c:	46bd      	mov	sp, r7
2000024e:	b002      	add	sp, #8
20000250:	bd80      	pop	{r7, pc}

20000252 <delay_milli>:

void delay_milli(unsigned int ms){
20000252:	b580      	push	{r7, lr}
20000254:	b082      	sub	sp, #8
20000256:	af00      	add	r7, sp, #0
20000258:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		ms=ms/1000;
		ms++;
	#endif
	while( ms-- )
2000025a:	e004      	b.n	20000266 <delay_milli+0x14>
		delay_mikro(1000);
2000025c:	23fa      	movs	r3, #250	; 0xfa
2000025e:	009b      	lsls	r3, r3, #2
20000260:	0018      	movs	r0, r3
20000262:	f7ff ffe0 	bl	20000226 <delay_mikro>
	while( ms-- )
20000266:	687b      	ldr	r3, [r7, #4]
20000268:	1e5a      	subs	r2, r3, #1
2000026a:	607a      	str	r2, [r7, #4]
2000026c:	2b00      	cmp	r3, #0
2000026e:	d1f5      	bne.n	2000025c <delay_milli+0xa>
}
20000270:	46c0      	nop			; (mov r8, r8)
20000272:	46bd      	mov	sp, r7
20000274:	b002      	add	sp, #8
20000276:	bd80      	pop	{r7, pc}

20000278 <delay_1s>:

void delay_1s(void){
20000278:	b580      	push	{r7, lr}
2000027a:	af00      	add	r7, sp, #0
	systick_flag=0;
2000027c:	4b08      	ldr	r3, [pc, #32]	; (200002a0 <delay_1s+0x28>)
2000027e:	2200      	movs	r2, #0
20000280:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 0;
20000282:	4b08      	ldr	r3, [pc, #32]	; (200002a4 <delay_1s+0x2c>)
20000284:	2200      	movs	r2, #0
20000286:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( 1680000000 -1 );
20000288:	4b07      	ldr	r3, [pc, #28]	; (200002a8 <delay_1s+0x30>)
2000028a:	4a08      	ldr	r2, [pc, #32]	; (200002ac <delay_1s+0x34>)
2000028c:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
2000028e:	4b08      	ldr	r3, [pc, #32]	; (200002b0 <delay_1s+0x38>)
20000290:	2200      	movs	r2, #0
20000292:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 7;
20000294:	4b03      	ldr	r3, [pc, #12]	; (200002a4 <delay_1s+0x2c>)
20000296:	2207      	movs	r2, #7
20000298:	601a      	str	r2, [r3, #0]

}
2000029a:	46c0      	nop			; (mov r8, r8)
2000029c:	46bd      	mov	sp, r7
2000029e:	bd80      	pop	{r7, pc}
200002a0:	20000b6c 	andcs	r0, r0, ip, ror #22
200002a4:	e000e010 	and	lr, r0, r0, lsl r0
200002a8:	e000e014 	and	lr, r0, r4, lsl r0
200002ac:	6422c3ff 	strtvs	ip, [r2], #-1023	; 0xfffffc01
200002b0:	e000e018 	and	lr, r0, r8, lsl r0

200002b4 <delay>:

void delay(unsigned int count){
200002b4:	b580      	push	{r7, lr}
200002b6:	b082      	sub	sp, #8
200002b8:	af00      	add	r7, sp, #0
200002ba:	6078      	str	r0, [r7, #4]
	if( count == 0)
200002bc:	687b      	ldr	r3, [r7, #4]
200002be:	2b00      	cmp	r3, #0
200002c0:	d008      	beq.n	200002d4 <delay+0x20>
	return;
	delay_count = count;
200002c2:	687a      	ldr	r2, [r7, #4]
200002c4:	4b05      	ldr	r3, [pc, #20]	; (200002dc <delay+0x28>)
200002c6:	601a      	str	r2, [r3, #0]
	systick_flag = 0;	
200002c8:	4b05      	ldr	r3, [pc, #20]	; (200002e0 <delay+0x2c>)
200002ca:	2200      	movs	r2, #0
200002cc:	601a      	str	r2, [r3, #0]
	delay_1s();
200002ce:	f7ff ffd3 	bl	20000278 <delay_1s>
200002d2:	e000      	b.n	200002d6 <delay+0x22>
	return;
200002d4:	46c0      	nop			; (mov r8, r8)
200002d6:	46bd      	mov	sp, r7
200002d8:	b002      	add	sp, #8
200002da:	bd80      	pop	{r7, pc}
200002dc:	20000b68 	andcs	r0, r0, r8, ror #22
200002e0:	20000b6c 	andcs	r0, r0, ip, ror #22

200002e4 <set_object_speed>:
#include "rendering.h"

void set_object_speed(POBJECT o, int speedX, int speedY){
200002e4:	b580      	push	{r7, lr}
200002e6:	b084      	sub	sp, #16
200002e8:	af00      	add	r7, sp, #0
200002ea:	60f8      	str	r0, [r7, #12]
200002ec:	60b9      	str	r1, [r7, #8]
200002ee:	607a      	str	r2, [r7, #4]
	o->dirX = speedX;
200002f0:	68fb      	ldr	r3, [r7, #12]
200002f2:	68ba      	ldr	r2, [r7, #8]
200002f4:	605a      	str	r2, [r3, #4]
	o->dirY = speedY;
200002f6:	68fb      	ldr	r3, [r7, #12]
200002f8:	687a      	ldr	r2, [r7, #4]
200002fa:	609a      	str	r2, [r3, #8]
}
200002fc:	46c0      	nop			; (mov r8, r8)
200002fe:	46bd      	mov	sp, r7
20000300:	b004      	add	sp, #16
20000302:	bd80      	pop	{r7, pc}

20000304 <draw_object>:

void draw_object(POBJECT o){
20000304:	b580      	push	{r7, lr}
20000306:	b084      	sub	sp, #16
20000308:	af00      	add	r7, sp, #0
2000030a:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < o->geo->numPoints; i++){
2000030c:	2300      	movs	r3, #0
2000030e:	60fb      	str	r3, [r7, #12]
20000310:	e01c      	b.n	2000034c <draw_object+0x48>
		pixel(o->posX + o->geo->px[i].x, o->posY + o->geo->px[i].y, 1);
20000312:	687b      	ldr	r3, [r7, #4]
20000314:	68da      	ldr	r2, [r3, #12]
20000316:	687b      	ldr	r3, [r7, #4]
20000318:	6819      	ldr	r1, [r3, #0]
2000031a:	68fb      	ldr	r3, [r7, #12]
2000031c:	3304      	adds	r3, #4
2000031e:	005b      	lsls	r3, r3, #1
20000320:	18cb      	adds	r3, r1, r3
20000322:	3304      	adds	r3, #4
20000324:	781b      	ldrb	r3, [r3, #0]
20000326:	18d0      	adds	r0, r2, r3
20000328:	687b      	ldr	r3, [r7, #4]
2000032a:	691a      	ldr	r2, [r3, #16]
2000032c:	687b      	ldr	r3, [r7, #4]
2000032e:	6819      	ldr	r1, [r3, #0]
20000330:	68fb      	ldr	r3, [r7, #12]
20000332:	3304      	adds	r3, #4
20000334:	005b      	lsls	r3, r3, #1
20000336:	18cb      	adds	r3, r1, r3
20000338:	3305      	adds	r3, #5
2000033a:	781b      	ldrb	r3, [r3, #0]
2000033c:	18d3      	adds	r3, r2, r3
2000033e:	2201      	movs	r2, #1
20000340:	0019      	movs	r1, r3
20000342:	f000 fa2b 	bl	2000079c <pixel>
	for(int i = 0; i < o->geo->numPoints; i++){
20000346:	68fb      	ldr	r3, [r7, #12]
20000348:	3301      	adds	r3, #1
2000034a:	60fb      	str	r3, [r7, #12]
2000034c:	687b      	ldr	r3, [r7, #4]
2000034e:	681b      	ldr	r3, [r3, #0]
20000350:	681b      	ldr	r3, [r3, #0]
20000352:	68fa      	ldr	r2, [r7, #12]
20000354:	429a      	cmp	r2, r3
20000356:	dbdc      	blt.n	20000312 <draw_object+0xe>
	}
}
20000358:	46c0      	nop			; (mov r8, r8)
2000035a:	46bd      	mov	sp, r7
2000035c:	b004      	add	sp, #16
2000035e:	bd80      	pop	{r7, pc}

20000360 <clear_object>:

void clear_object(POBJECT o){
20000360:	b580      	push	{r7, lr}
20000362:	b084      	sub	sp, #16
20000364:	af00      	add	r7, sp, #0
20000366:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < o->geo->numPoints; i++){
20000368:	2300      	movs	r3, #0
2000036a:	60fb      	str	r3, [r7, #12]
2000036c:	e01c      	b.n	200003a8 <clear_object+0x48>
		pixel(o->posX + o->geo->px[i].x, o->posY + o->geo->px[i].y, 0);
2000036e:	687b      	ldr	r3, [r7, #4]
20000370:	68da      	ldr	r2, [r3, #12]
20000372:	687b      	ldr	r3, [r7, #4]
20000374:	6819      	ldr	r1, [r3, #0]
20000376:	68fb      	ldr	r3, [r7, #12]
20000378:	3304      	adds	r3, #4
2000037a:	005b      	lsls	r3, r3, #1
2000037c:	18cb      	adds	r3, r1, r3
2000037e:	3304      	adds	r3, #4
20000380:	781b      	ldrb	r3, [r3, #0]
20000382:	18d0      	adds	r0, r2, r3
20000384:	687b      	ldr	r3, [r7, #4]
20000386:	691a      	ldr	r2, [r3, #16]
20000388:	687b      	ldr	r3, [r7, #4]
2000038a:	6819      	ldr	r1, [r3, #0]
2000038c:	68fb      	ldr	r3, [r7, #12]
2000038e:	3304      	adds	r3, #4
20000390:	005b      	lsls	r3, r3, #1
20000392:	18cb      	adds	r3, r1, r3
20000394:	3305      	adds	r3, #5
20000396:	781b      	ldrb	r3, [r3, #0]
20000398:	18d3      	adds	r3, r2, r3
2000039a:	2200      	movs	r2, #0
2000039c:	0019      	movs	r1, r3
2000039e:	f000 f9fd 	bl	2000079c <pixel>
	for(int i = 0; i < o->geo->numPoints; i++){
200003a2:	68fb      	ldr	r3, [r7, #12]
200003a4:	3301      	adds	r3, #1
200003a6:	60fb      	str	r3, [r7, #12]
200003a8:	687b      	ldr	r3, [r7, #4]
200003aa:	681b      	ldr	r3, [r3, #0]
200003ac:	681b      	ldr	r3, [r3, #0]
200003ae:	68fa      	ldr	r2, [r7, #12]
200003b0:	429a      	cmp	r2, r3
200003b2:	dbdc      	blt.n	2000036e <clear_object+0xe>
	}
200003b4:	46c0      	nop			; (mov r8, r8)
200003b6:	46bd      	mov	sp, r7
200003b8:	b004      	add	sp, #16
200003ba:	bd80      	pop	{r7, pc}

200003bc <systick_irq_handler>:
#include "defines.h"
#include "globals.h"

void systick_irq_handler (void)
{
200003bc:	b580      	push	{r7, lr}
200003be:	af00      	add	r7, sp, #0
	
	//Öka second_count, 
	*STK_CTRL = 0;
200003c0:	4b0a      	ldr	r3, [pc, #40]	; (200003ec <systick_irq_handler+0x30>)
200003c2:	2200      	movs	r2, #0
200003c4:	601a      	str	r2, [r3, #0]
	delay_count -- ;
200003c6:	4b0a      	ldr	r3, [pc, #40]	; (200003f0 <systick_irq_handler+0x34>)
200003c8:	681b      	ldr	r3, [r3, #0]
200003ca:	1e5a      	subs	r2, r3, #1
200003cc:	4b08      	ldr	r3, [pc, #32]	; (200003f0 <systick_irq_handler+0x34>)
200003ce:	601a      	str	r2, [r3, #0]
	if( delay_count > 0 )
200003d0:	4b07      	ldr	r3, [pc, #28]	; (200003f0 <systick_irq_handler+0x34>)
200003d2:	681b      	ldr	r3, [r3, #0]
200003d4:	2b00      	cmp	r3, #0
200003d6:	dd02      	ble.n	200003de <systick_irq_handler+0x22>
	delay_1s();
200003d8:	f7ff ff4e 	bl	20000278 <delay_1s>
	else
	systick_flag = 1;
	
200003dc:	e002      	b.n	200003e4 <systick_irq_handler+0x28>
	systick_flag = 1;
200003de:	4b05      	ldr	r3, [pc, #20]	; (200003f4 <systick_irq_handler+0x38>)
200003e0:	2201      	movs	r2, #1
200003e2:	601a      	str	r2, [r3, #0]
200003e4:	46c0      	nop			; (mov r8, r8)
200003e6:	46bd      	mov	sp, r7
200003e8:	bd80      	pop	{r7, pc}
200003ea:	46c0      	nop			; (mov r8, r8)
200003ec:	e000e010 	and	lr, r0, r0, lsl r0
200003f0:	20000b68 	andcs	r0, r0, r8, ror #22
200003f4:	20000b6c 	andcs	r0, r0, ip, ror #22

200003f8 <graphic_ctrl_bit_set>:
#include "defines.h"

void graphic_ctrl_bit_set(unsigned char x){
200003f8:	b580      	push	{r7, lr}
200003fa:	b082      	sub	sp, #8
200003fc:	af00      	add	r7, sp, #0
200003fe:	0002      	movs	r2, r0
20000400:	1dfb      	adds	r3, r7, #7
20000402:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow |= x & ~B_SELECT;
20000404:	4b09      	ldr	r3, [pc, #36]	; (2000042c <graphic_ctrl_bit_set+0x34>)
20000406:	7d1b      	ldrb	r3, [r3, #20]
20000408:	b2db      	uxtb	r3, r3
2000040a:	b25a      	sxtb	r2, r3
2000040c:	1dfb      	adds	r3, r7, #7
2000040e:	781b      	ldrb	r3, [r3, #0]
20000410:	b25b      	sxtb	r3, r3
20000412:	2104      	movs	r1, #4
20000414:	438b      	bics	r3, r1
20000416:	b25b      	sxtb	r3, r3
20000418:	4313      	orrs	r3, r2
2000041a:	b25a      	sxtb	r2, r3
2000041c:	4b03      	ldr	r3, [pc, #12]	; (2000042c <graphic_ctrl_bit_set+0x34>)
2000041e:	b2d2      	uxtb	r2, r2
20000420:	751a      	strb	r2, [r3, #20]
}
20000422:	46c0      	nop			; (mov r8, r8)
20000424:	46bd      	mov	sp, r7
20000426:	b002      	add	sp, #8
20000428:	bd80      	pop	{r7, pc}
2000042a:	46c0      	nop			; (mov r8, r8)
2000042c:	40021000 	andmi	r1, r2, r0

20000430 <graphic_ctrl_bit_clear>:


//Välj grafisk display och nollställ de bitar som är 1 i x
void graphic_ctrl_bit_clear(unsigned char x){
20000430:	b580      	push	{r7, lr}
20000432:	b082      	sub	sp, #8
20000434:	af00      	add	r7, sp, #0
20000436:	0002      	movs	r2, r0
20000438:	1dfb      	adds	r3, r7, #7
2000043a:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow &= (~x & ~B_SELECT);
2000043c:	4b08      	ldr	r3, [pc, #32]	; (20000460 <graphic_ctrl_bit_clear+0x30>)
2000043e:	7d1b      	ldrb	r3, [r3, #20]
20000440:	b2db      	uxtb	r3, r3
20000442:	1dfa      	adds	r2, r7, #7
20000444:	7812      	ldrb	r2, [r2, #0]
20000446:	43d2      	mvns	r2, r2
20000448:	b2d2      	uxtb	r2, r2
2000044a:	4013      	ands	r3, r2
2000044c:	b2db      	uxtb	r3, r3
2000044e:	4a04      	ldr	r2, [pc, #16]	; (20000460 <graphic_ctrl_bit_clear+0x30>)
20000450:	2104      	movs	r1, #4
20000452:	438b      	bics	r3, r1
20000454:	b2db      	uxtb	r3, r3
20000456:	7513      	strb	r3, [r2, #20]
}
20000458:	46c0      	nop			; (mov r8, r8)
2000045a:	46bd      	mov	sp, r7
2000045c:	b002      	add	sp, #8
2000045e:	bd80      	pop	{r7, pc}
20000460:	40021000 	andmi	r1, r2, r0

20000464 <select_controller>:


//Konfigurera CS-signalerna
void select_controller(unsigned char controller){
20000464:	b580      	push	{r7, lr}
20000466:	b082      	sub	sp, #8
20000468:	af00      	add	r7, sp, #0
2000046a:	0002      	movs	r2, r0
2000046c:	1dfb      	adds	r3, r7, #7
2000046e:	701a      	strb	r2, [r3, #0]
    switch(controller){
20000470:	1dfb      	adds	r3, r7, #7
20000472:	781b      	ldrb	r3, [r3, #0]
20000474:	2b08      	cmp	r3, #8
20000476:	d00c      	beq.n	20000492 <select_controller+0x2e>
20000478:	dc02      	bgt.n	20000480 <select_controller+0x1c>
2000047a:	2b00      	cmp	r3, #0
2000047c:	d005      	beq.n	2000048a <select_controller+0x26>
2000047e:	e01a      	b.n	200004b6 <select_controller+0x52>
20000480:	2b10      	cmp	r3, #16
20000482:	d00d      	beq.n	200004a0 <select_controller+0x3c>
20000484:	2b18      	cmp	r3, #24
20000486:	d012      	beq.n	200004ae <select_controller+0x4a>
20000488:	e015      	b.n	200004b6 <select_controller+0x52>
        case 0:
            graphic_ctrl_bit_clear(B_CS1 | B_CS2);
2000048a:	2018      	movs	r0, #24
2000048c:	f7ff ffd0 	bl	20000430 <graphic_ctrl_bit_clear>
            break;
20000490:	e014      	b.n	200004bc <select_controller+0x58>
        case B_CS1:
            graphic_ctrl_bit_set(B_CS1);
20000492:	2008      	movs	r0, #8
20000494:	f7ff ffb0 	bl	200003f8 <graphic_ctrl_bit_set>
            graphic_ctrl_bit_clear(B_CS2);
20000498:	2010      	movs	r0, #16
2000049a:	f7ff ffc9 	bl	20000430 <graphic_ctrl_bit_clear>
            break;
2000049e:	e00d      	b.n	200004bc <select_controller+0x58>
        case B_CS2:
            graphic_ctrl_bit_set(B_CS2);
200004a0:	2010      	movs	r0, #16
200004a2:	f7ff ffa9 	bl	200003f8 <graphic_ctrl_bit_set>
            graphic_ctrl_bit_clear(B_CS1);
200004a6:	2008      	movs	r0, #8
200004a8:	f7ff ffc2 	bl	20000430 <graphic_ctrl_bit_clear>
            break;
200004ac:	e006      	b.n	200004bc <select_controller+0x58>
        case (B_CS1 | B_CS2):
            graphic_ctrl_bit_set(B_CS1 | B_CS2);
200004ae:	2018      	movs	r0, #24
200004b0:	f7ff ffa2 	bl	200003f8 <graphic_ctrl_bit_set>
			break;
200004b4:	e002      	b.n	200004bc <select_controller+0x58>
        default:
            graphic_ctrl_bit_clear(B_CS1 | B_CS2);
200004b6:	2018      	movs	r0, #24
200004b8:	f7ff ffba 	bl	20000430 <graphic_ctrl_bit_clear>
    }
}
200004bc:	46c0      	nop			; (mov r8, r8)
200004be:	46bd      	mov	sp, r7
200004c0:	b002      	add	sp, #8
200004c2:	bd80      	pop	{r7, pc}

200004c4 <graphic_wait_ready>:




//Undersök ''busy'' flaggan, och returnera från funktion när den blir 0
void graphic_wait_ready(void){
200004c4:	b580      	push	{r7, lr}
200004c6:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_clear(B_E);
200004c8:	2040      	movs	r0, #64	; 0x40
200004ca:	f7ff ffb1 	bl	20000430 <graphic_ctrl_bit_clear>
	
	GPIO_E.moder = 0x00005555;  //15-8 utgång, 7-0 ingång
200004ce:	4b12      	ldr	r3, [pc, #72]	; (20000518 <graphic_wait_ready+0x54>)
200004d0:	4a12      	ldr	r2, [pc, #72]	; (2000051c <graphic_wait_ready+0x58>)
200004d2:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_RS);
200004d4:	2001      	movs	r0, #1
200004d6:	f7ff ffab 	bl	20000430 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_set(B_RW); //Gör så vi kollar status
200004da:	2002      	movs	r0, #2
200004dc:	f7ff ff8c 	bl	200003f8 <graphic_ctrl_bit_set>
	delay_500ns();
200004e0:	f7ff fe98 	bl	20000214 <delay_500ns>
	
	while(GPIO_E.idrHigh & 1<<7){ //gör detta medan busy-flaggan inte är 0
200004e4:	e009      	b.n	200004fa <graphic_wait_ready+0x36>
		graphic_ctrl_bit_set(B_E);
200004e6:	2040      	movs	r0, #64	; 0x40
200004e8:	f7ff ff86 	bl	200003f8 <graphic_ctrl_bit_set>
		delay_500ns();
200004ec:	f7ff fe92 	bl	20000214 <delay_500ns>
		graphic_ctrl_bit_clear(B_E);
200004f0:	2040      	movs	r0, #64	; 0x40
200004f2:	f7ff ff9d 	bl	20000430 <graphic_ctrl_bit_clear>
		delay_500ns();
200004f6:	f7ff fe8d 	bl	20000214 <delay_500ns>
	while(GPIO_E.idrHigh & 1<<7){ //gör detta medan busy-flaggan inte är 0
200004fa:	4b07      	ldr	r3, [pc, #28]	; (20000518 <graphic_wait_ready+0x54>)
200004fc:	7c5b      	ldrb	r3, [r3, #17]
200004fe:	b2db      	uxtb	r3, r3
20000500:	b25b      	sxtb	r3, r3
20000502:	2b00      	cmp	r3, #0
20000504:	dbef      	blt.n	200004e6 <graphic_wait_ready+0x22>
	}
	
	graphic_ctrl_bit_set(B_E);
20000506:	2040      	movs	r0, #64	; 0x40
20000508:	f7ff ff76 	bl	200003f8 <graphic_ctrl_bit_set>
	GPIO_E.moder = 0x55555555; //15-0 utgång
2000050c:	4b02      	ldr	r3, [pc, #8]	; (20000518 <graphic_wait_ready+0x54>)
2000050e:	4a04      	ldr	r2, [pc, #16]	; (20000520 <graphic_wait_ready+0x5c>)
20000510:	601a      	str	r2, [r3, #0]
}
20000512:	46c0      	nop			; (mov r8, r8)
20000514:	46bd      	mov	sp, r7
20000516:	bd80      	pop	{r7, pc}
20000518:	40021000 	andmi	r1, r2, r0
2000051c:	00005555 	andeq	r5, r0, r5, asr r5
20000520:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000524 <graphic_read>:



unsigned char graphic_read(unsigned char controller){
20000524:	b580      	push	{r7, lr}
20000526:	b084      	sub	sp, #16
20000528:	af00      	add	r7, sp, #0
2000052a:	0002      	movs	r2, r0
2000052c:	1dfb      	adds	r3, r7, #7
2000052e:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20000530:	2040      	movs	r0, #64	; 0x40
20000532:	f7ff ff7d 	bl	20000430 <graphic_ctrl_bit_clear>
	
	GPIO_E.moder = 0x00005555;  //15-8 utgång, 7-0 ingång
20000536:	4b1d      	ldr	r3, [pc, #116]	; (200005ac <graphic_read+0x88>)
20000538:	4a1d      	ldr	r2, [pc, #116]	; (200005b0 <graphic_read+0x8c>)
2000053a:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_set(B_RS);
2000053c:	2001      	movs	r0, #1
2000053e:	f7ff ff5b 	bl	200003f8 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_set(B_RW); //Gör så vi kan läsa data
20000542:	2002      	movs	r0, #2
20000544:	f7ff ff58 	bl	200003f8 <graphic_ctrl_bit_set>
	select_controller(controller);
20000548:	1dfb      	adds	r3, r7, #7
2000054a:	781b      	ldrb	r3, [r3, #0]
2000054c:	0018      	movs	r0, r3
2000054e:	f7ff ff89 	bl	20000464 <select_controller>
	delay_500ns();
20000552:	f7ff fe5f 	bl	20000214 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
20000556:	2040      	movs	r0, #64	; 0x40
20000558:	f7ff ff4e 	bl	200003f8 <graphic_ctrl_bit_set>
	delay_500ns();
2000055c:	f7ff fe5a 	bl	20000214 <delay_500ns>
	unsigned char RV = GPIO_E.idrHigh;
20000560:	4a12      	ldr	r2, [pc, #72]	; (200005ac <graphic_read+0x88>)
20000562:	230f      	movs	r3, #15
20000564:	18fb      	adds	r3, r7, r3
20000566:	7c52      	ldrb	r2, [r2, #17]
20000568:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
2000056a:	2040      	movs	r0, #64	; 0x40
2000056c:	f7ff ff60 	bl	20000430 <graphic_ctrl_bit_clear>
	GPIO_E.moder = 0x55555555; //15-0 utgång
20000570:	4b0e      	ldr	r3, [pc, #56]	; (200005ac <graphic_read+0x88>)
20000572:	4a10      	ldr	r2, [pc, #64]	; (200005b4 <graphic_read+0x90>)
20000574:	601a      	str	r2, [r3, #0]
	
	if (controller == B_CS1){
20000576:	1dfb      	adds	r3, r7, #7
20000578:	781b      	ldrb	r3, [r3, #0]
2000057a:	2b08      	cmp	r3, #8
2000057c:	d105      	bne.n	2000058a <graphic_read+0x66>
		select_controller(B_CS1);
2000057e:	2008      	movs	r0, #8
20000580:	f7ff ff70 	bl	20000464 <select_controller>
		graphic_wait_ready();
20000584:	f7ff ff9e 	bl	200004c4 <graphic_wait_ready>
20000588:	e008      	b.n	2000059c <graphic_read+0x78>
	} else if (controller == B_CS2){
2000058a:	1dfb      	adds	r3, r7, #7
2000058c:	781b      	ldrb	r3, [r3, #0]
2000058e:	2b10      	cmp	r3, #16
20000590:	d104      	bne.n	2000059c <graphic_read+0x78>
		select_controller(B_CS2);
20000592:	2010      	movs	r0, #16
20000594:	f7ff ff66 	bl	20000464 <select_controller>
		graphic_wait_ready();
20000598:	f7ff ff94 	bl	200004c4 <graphic_wait_ready>
	}
	return RV;
2000059c:	230f      	movs	r3, #15
2000059e:	18fb      	adds	r3, r7, r3
200005a0:	781b      	ldrb	r3, [r3, #0]
}
200005a2:	0018      	movs	r0, r3
200005a4:	46bd      	mov	sp, r7
200005a6:	b004      	add	sp, #16
200005a8:	bd80      	pop	{r7, pc}
200005aa:	46c0      	nop			; (mov r8, r8)
200005ac:	40021000 	andmi	r1, r2, r0
200005b0:	00005555 	andeq	r5, r0, r5, asr r5
200005b4:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200005b8 <graphic_write>:


void graphic_write(unsigned char value, unsigned char controller){
200005b8:	b580      	push	{r7, lr}
200005ba:	b082      	sub	sp, #8
200005bc:	af00      	add	r7, sp, #0
200005be:	0002      	movs	r2, r0
200005c0:	1dfb      	adds	r3, r7, #7
200005c2:	701a      	strb	r2, [r3, #0]
200005c4:	1dbb      	adds	r3, r7, #6
200005c6:	1c0a      	adds	r2, r1, #0
200005c8:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrHigh = value;
200005ca:	4a1a      	ldr	r2, [pc, #104]	; (20000634 <graphic_write+0x7c>)
200005cc:	1dfb      	adds	r3, r7, #7
200005ce:	781b      	ldrb	r3, [r3, #0]
200005d0:	7553      	strb	r3, [r2, #21]
	select_controller(controller);
200005d2:	1dbb      	adds	r3, r7, #6
200005d4:	781b      	ldrb	r3, [r3, #0]
200005d6:	0018      	movs	r0, r3
200005d8:	f7ff ff44 	bl	20000464 <select_controller>
	delay_500ns();
200005dc:	f7ff fe1a 	bl	20000214 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
200005e0:	2040      	movs	r0, #64	; 0x40
200005e2:	f7ff ff09 	bl	200003f8 <graphic_ctrl_bit_set>
	delay_500ns();
200005e6:	f7ff fe15 	bl	20000214 <delay_500ns>
	graphic_ctrl_bit_clear(B_E);
200005ea:	2040      	movs	r0, #64	; 0x40
200005ec:	f7ff ff20 	bl	20000430 <graphic_ctrl_bit_clear>
	
	if (controller & B_CS1){
200005f0:	1dbb      	adds	r3, r7, #6
200005f2:	781b      	ldrb	r3, [r3, #0]
200005f4:	2208      	movs	r2, #8
200005f6:	4013      	ands	r3, r2
200005f8:	d005      	beq.n	20000606 <graphic_write+0x4e>
		select_controller(B_CS1);
200005fa:	2008      	movs	r0, #8
200005fc:	f7ff ff32 	bl	20000464 <select_controller>
		graphic_wait_ready();
20000600:	f7ff ff60 	bl	200004c4 <graphic_wait_ready>
20000604:	e009      	b.n	2000061a <graphic_write+0x62>
	} else if (controller & B_CS2){
20000606:	1dbb      	adds	r3, r7, #6
20000608:	781b      	ldrb	r3, [r3, #0]
2000060a:	2210      	movs	r2, #16
2000060c:	4013      	ands	r3, r2
2000060e:	d004      	beq.n	2000061a <graphic_write+0x62>
		select_controller(B_CS2);
20000610:	2010      	movs	r0, #16
20000612:	f7ff ff27 	bl	20000464 <select_controller>
		graphic_wait_ready();
20000616:	f7ff ff55 	bl	200004c4 <graphic_wait_ready>
	}
	
	GPIO_E.odrHigh = 0;
2000061a:	4b06      	ldr	r3, [pc, #24]	; (20000634 <graphic_write+0x7c>)
2000061c:	2200      	movs	r2, #0
2000061e:	755a      	strb	r2, [r3, #21]
	graphic_ctrl_bit_set(B_E);
20000620:	2040      	movs	r0, #64	; 0x40
20000622:	f7ff fee9 	bl	200003f8 <graphic_ctrl_bit_set>
	select_controller(0);
20000626:	2000      	movs	r0, #0
20000628:	f7ff ff1c 	bl	20000464 <select_controller>
}
2000062c:	46c0      	nop			; (mov r8, r8)
2000062e:	46bd      	mov	sp, r7
20000630:	b002      	add	sp, #8
20000632:	bd80      	pop	{r7, pc}
20000634:	40021000 	andmi	r1, r2, r0

20000638 <graphic_write_command>:


void graphic_write_command(unsigned char command, unsigned char controller){
20000638:	b580      	push	{r7, lr}
2000063a:	b082      	sub	sp, #8
2000063c:	af00      	add	r7, sp, #0
2000063e:	0002      	movs	r2, r0
20000640:	1dfb      	adds	r3, r7, #7
20000642:	701a      	strb	r2, [r3, #0]
20000644:	1dbb      	adds	r3, r7, #6
20000646:	1c0a      	adds	r2, r1, #0
20000648:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
2000064a:	2040      	movs	r0, #64	; 0x40
2000064c:	f7ff fef0 	bl	20000430 <graphic_ctrl_bit_clear>
	select_controller(controller);
20000650:	1dbb      	adds	r3, r7, #6
20000652:	781b      	ldrb	r3, [r3, #0]
20000654:	0018      	movs	r0, r3
20000656:	f7ff ff05 	bl	20000464 <select_controller>
	graphic_ctrl_bit_clear(B_RS);
2000065a:	2001      	movs	r0, #1
2000065c:	f7ff fee8 	bl	20000430 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RW);
20000660:	2002      	movs	r0, #2
20000662:	f7ff fee5 	bl	20000430 <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20000666:	1dbb      	adds	r3, r7, #6
20000668:	781a      	ldrb	r2, [r3, #0]
2000066a:	1dfb      	adds	r3, r7, #7
2000066c:	781b      	ldrb	r3, [r3, #0]
2000066e:	0011      	movs	r1, r2
20000670:	0018      	movs	r0, r3
20000672:	f7ff ffa1 	bl	200005b8 <graphic_write>
}
20000676:	46c0      	nop			; (mov r8, r8)
20000678:	46bd      	mov	sp, r7
2000067a:	b002      	add	sp, #8
2000067c:	bd80      	pop	{r7, pc}

2000067e <graphic_write_data>:

void graphic_write_data(unsigned char data, unsigned char controller){
2000067e:	b580      	push	{r7, lr}
20000680:	b082      	sub	sp, #8
20000682:	af00      	add	r7, sp, #0
20000684:	0002      	movs	r2, r0
20000686:	1dfb      	adds	r3, r7, #7
20000688:	701a      	strb	r2, [r3, #0]
2000068a:	1dbb      	adds	r3, r7, #6
2000068c:	1c0a      	adds	r2, r1, #0
2000068e:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20000690:	2040      	movs	r0, #64	; 0x40
20000692:	f7ff fecd 	bl	20000430 <graphic_ctrl_bit_clear>
	select_controller(controller);
20000696:	1dbb      	adds	r3, r7, #6
20000698:	781b      	ldrb	r3, [r3, #0]
2000069a:	0018      	movs	r0, r3
2000069c:	f7ff fee2 	bl	20000464 <select_controller>
	graphic_ctrl_bit_set(B_RS);
200006a0:	2001      	movs	r0, #1
200006a2:	f7ff fea9 	bl	200003f8 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_clear(B_RW);
200006a6:	2002      	movs	r0, #2
200006a8:	f7ff fec2 	bl	20000430 <graphic_ctrl_bit_clear>
	graphic_write(data, controller);
200006ac:	1dbb      	adds	r3, r7, #6
200006ae:	781a      	ldrb	r2, [r3, #0]
200006b0:	1dfb      	adds	r3, r7, #7
200006b2:	781b      	ldrb	r3, [r3, #0]
200006b4:	0011      	movs	r1, r2
200006b6:	0018      	movs	r0, r3
200006b8:	f7ff ff7e 	bl	200005b8 <graphic_write>
}
200006bc:	46c0      	nop			; (mov r8, r8)
200006be:	46bd      	mov	sp, r7
200006c0:	b002      	add	sp, #8
200006c2:	bd80      	pop	{r7, pc}

200006c4 <graphic_read_data>:

unsigned char graphic_read_data(unsigned char controller){
200006c4:	b580      	push	{r7, lr}
200006c6:	b082      	sub	sp, #8
200006c8:	af00      	add	r7, sp, #0
200006ca:	0002      	movs	r2, r0
200006cc:	1dfb      	adds	r3, r7, #7
200006ce:	701a      	strb	r2, [r3, #0]
	graphic_read(controller); //Nonsens
200006d0:	1dfb      	adds	r3, r7, #7
200006d2:	781b      	ldrb	r3, [r3, #0]
200006d4:	0018      	movs	r0, r3
200006d6:	f7ff ff25 	bl	20000524 <graphic_read>
	return graphic_read(controller); //korrekt data
200006da:	1dfb      	adds	r3, r7, #7
200006dc:	781b      	ldrb	r3, [r3, #0]
200006de:	0018      	movs	r0, r3
200006e0:	f7ff ff20 	bl	20000524 <graphic_read>
200006e4:	0003      	movs	r3, r0
}
200006e6:	0018      	movs	r0, r3
200006e8:	46bd      	mov	sp, r7
200006ea:	b002      	add	sp, #8
200006ec:	bd80      	pop	{r7, pc}

200006ee <graphic_initialize>:

void graphic_initialize(void){
200006ee:	b580      	push	{r7, lr}
200006f0:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_set(B_E);
200006f2:	2040      	movs	r0, #64	; 0x40
200006f4:	f7ff fe80 	bl	200003f8 <graphic_ctrl_bit_set>
	delay_mikro(10);
200006f8:	200a      	movs	r0, #10
200006fa:	f7ff fd94 	bl	20000226 <delay_mikro>
	graphic_ctrl_bit_clear(B_CS1 | B_CS2 | B_RST | B_E);
200006fe:	2078      	movs	r0, #120	; 0x78
20000700:	f7ff fe96 	bl	20000430 <graphic_ctrl_bit_clear>
	delay_milli(30);
20000704:	201e      	movs	r0, #30
20000706:	f7ff fda4 	bl	20000252 <delay_milli>
	graphic_ctrl_bit_set(B_RST);
2000070a:	2020      	movs	r0, #32
2000070c:	f7ff fe74 	bl	200003f8 <graphic_ctrl_bit_set>
	graphic_write_command(LCD_OFF, B_CS1|B_CS2);
20000710:	2118      	movs	r1, #24
20000712:	203e      	movs	r0, #62	; 0x3e
20000714:	f7ff ff90 	bl	20000638 <graphic_write_command>
	graphic_write_command(LCD_ON, B_CS1|B_CS2);         //toggla display
20000718:	2118      	movs	r1, #24
2000071a:	203f      	movs	r0, #63	; 0x3f
2000071c:	f7ff ff8c 	bl	20000638 <graphic_write_command>
	graphic_write_command(LCD_DISP_START, B_CS1|B_CS2); //start=0
20000720:	2118      	movs	r1, #24
20000722:	20c0      	movs	r0, #192	; 0xc0
20000724:	f7ff ff88 	bl	20000638 <graphic_write_command>
	graphic_write_command(LCD_SET_ADD, B_CS1|B_CS2);    //add=0
20000728:	2118      	movs	r1, #24
2000072a:	2040      	movs	r0, #64	; 0x40
2000072c:	f7ff ff84 	bl	20000638 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE, B_CS1|B_CS2);   //page=0
20000730:	2118      	movs	r1, #24
20000732:	20b8      	movs	r0, #184	; 0xb8
20000734:	f7ff ff80 	bl	20000638 <graphic_write_command>
	select_controller(0);                               //deaktivera båda CS-signalerna
20000738:	2000      	movs	r0, #0
2000073a:	f7ff fe93 	bl	20000464 <select_controller>
}
2000073e:	46c0      	nop			; (mov r8, r8)
20000740:	46bd      	mov	sp, r7
20000742:	bd80      	pop	{r7, pc}

20000744 <graphic_clear_screen>:

void graphic_clear_screen(void){
20000744:	b580      	push	{r7, lr}
20000746:	b082      	sub	sp, #8
20000748:	af00      	add	r7, sp, #0
	for (int i = 0; i<=7; i++){
2000074a:	2300      	movs	r3, #0
2000074c:	607b      	str	r3, [r7, #4]
2000074e:	e01e      	b.n	2000078e <graphic_clear_screen+0x4a>
		graphic_write_command(LCD_SET_PAGE | i, B_CS1|B_CS2);
20000750:	687b      	ldr	r3, [r7, #4]
20000752:	b25b      	sxtb	r3, r3
20000754:	2248      	movs	r2, #72	; 0x48
20000756:	4252      	negs	r2, r2
20000758:	4313      	orrs	r3, r2
2000075a:	b25b      	sxtb	r3, r3
2000075c:	b2db      	uxtb	r3, r3
2000075e:	2118      	movs	r1, #24
20000760:	0018      	movs	r0, r3
20000762:	f7ff ff69 	bl	20000638 <graphic_write_command>
		graphic_write_command(LCD_SET_ADD | 0, B_CS1|B_CS2);
20000766:	2118      	movs	r1, #24
20000768:	2040      	movs	r0, #64	; 0x40
2000076a:	f7ff ff65 	bl	20000638 <graphic_write_command>
		for(int w = 0; w<=63; w++){
2000076e:	2300      	movs	r3, #0
20000770:	603b      	str	r3, [r7, #0]
20000772:	e006      	b.n	20000782 <graphic_clear_screen+0x3e>
			graphic_write_data(0, B_CS1|B_CS2);
20000774:	2118      	movs	r1, #24
20000776:	2000      	movs	r0, #0
20000778:	f7ff ff81 	bl	2000067e <graphic_write_data>
		for(int w = 0; w<=63; w++){
2000077c:	683b      	ldr	r3, [r7, #0]
2000077e:	3301      	adds	r3, #1
20000780:	603b      	str	r3, [r7, #0]
20000782:	683b      	ldr	r3, [r7, #0]
20000784:	2b3f      	cmp	r3, #63	; 0x3f
20000786:	ddf5      	ble.n	20000774 <graphic_clear_screen+0x30>
	for (int i = 0; i<=7; i++){
20000788:	687b      	ldr	r3, [r7, #4]
2000078a:	3301      	adds	r3, #1
2000078c:	607b      	str	r3, [r7, #4]
2000078e:	687b      	ldr	r3, [r7, #4]
20000790:	2b07      	cmp	r3, #7
20000792:	dddd      	ble.n	20000750 <graphic_clear_screen+0xc>
		}
	}
}
20000794:	46c0      	nop			; (mov r8, r8)
20000796:	46bd      	mov	sp, r7
20000798:	b002      	add	sp, #8
2000079a:	bd80      	pop	{r7, pc}

2000079c <pixel>:

void pixel(unsigned char x, unsigned char y, unsigned char set){
2000079c:	b5f0      	push	{r4, r5, r6, r7, lr}
2000079e:	b085      	sub	sp, #20
200007a0:	af00      	add	r7, sp, #0
200007a2:	0004      	movs	r4, r0
200007a4:	0008      	movs	r0, r1
200007a6:	0011      	movs	r1, r2
200007a8:	1dfb      	adds	r3, r7, #7
200007aa:	1c22      	adds	r2, r4, #0
200007ac:	701a      	strb	r2, [r3, #0]
200007ae:	1dbb      	adds	r3, r7, #6
200007b0:	1c02      	adds	r2, r0, #0
200007b2:	701a      	strb	r2, [r3, #0]
200007b4:	1d7b      	adds	r3, r7, #5
200007b6:	1c0a      	adds	r2, r1, #0
200007b8:	701a      	strb	r2, [r3, #0]
	if(x < 1 || x > 128 || y < 1 || y > 64 || set < 0 || set > 1){  //kolla så värdena är tillåtna
200007ba:	1dfb      	adds	r3, r7, #7
200007bc:	781b      	ldrb	r3, [r3, #0]
200007be:	2b00      	cmp	r3, #0
200007c0:	d100      	bne.n	200007c4 <pixel+0x28>
200007c2:	e0cb      	b.n	2000095c <pixel+0x1c0>
200007c4:	1dfb      	adds	r3, r7, #7
200007c6:	781b      	ldrb	r3, [r3, #0]
200007c8:	2b80      	cmp	r3, #128	; 0x80
200007ca:	d900      	bls.n	200007ce <pixel+0x32>
200007cc:	e0c6      	b.n	2000095c <pixel+0x1c0>
200007ce:	1dbb      	adds	r3, r7, #6
200007d0:	781b      	ldrb	r3, [r3, #0]
200007d2:	2b00      	cmp	r3, #0
200007d4:	d100      	bne.n	200007d8 <pixel+0x3c>
200007d6:	e0c1      	b.n	2000095c <pixel+0x1c0>
200007d8:	1dbb      	adds	r3, r7, #6
200007da:	781b      	ldrb	r3, [r3, #0]
200007dc:	2b40      	cmp	r3, #64	; 0x40
200007de:	d900      	bls.n	200007e2 <pixel+0x46>
200007e0:	e0bc      	b.n	2000095c <pixel+0x1c0>
200007e2:	1d7b      	adds	r3, r7, #5
200007e4:	781b      	ldrb	r3, [r3, #0]
200007e6:	2b01      	cmp	r3, #1
200007e8:	d900      	bls.n	200007ec <pixel+0x50>
200007ea:	e0b7      	b.n	2000095c <pixel+0x1c0>
		return;
	}
	
	unsigned char index = (y-1)/8;
200007ec:	1dbb      	adds	r3, r7, #6
200007ee:	781b      	ldrb	r3, [r3, #0]
200007f0:	3b01      	subs	r3, #1
200007f2:	2b00      	cmp	r3, #0
200007f4:	da00      	bge.n	200007f8 <pixel+0x5c>
200007f6:	3307      	adds	r3, #7
200007f8:	10db      	asrs	r3, r3, #3
200007fa:	001a      	movs	r2, r3
200007fc:	230c      	movs	r3, #12
200007fe:	18fb      	adds	r3, r7, r3
20000800:	701a      	strb	r2, [r3, #0]
	unsigned char bitmask;
	unsigned char controller;
	unsigned char x_fysisk;
	
	switch((y-1) % 8){
20000802:	1dbb      	adds	r3, r7, #6
20000804:	781b      	ldrb	r3, [r3, #0]
20000806:	3b01      	subs	r3, #1
20000808:	4a56      	ldr	r2, [pc, #344]	; (20000964 <pixel+0x1c8>)
2000080a:	4013      	ands	r3, r2
2000080c:	d504      	bpl.n	20000818 <pixel+0x7c>
2000080e:	3b01      	subs	r3, #1
20000810:	2208      	movs	r2, #8
20000812:	4252      	negs	r2, r2
20000814:	4313      	orrs	r3, r2
20000816:	3301      	adds	r3, #1
20000818:	2b07      	cmp	r3, #7
2000081a:	d82c      	bhi.n	20000876 <pixel+0xda>
2000081c:	009a      	lsls	r2, r3, #2
2000081e:	4b52      	ldr	r3, [pc, #328]	; (20000968 <pixel+0x1cc>)
20000820:	18d3      	adds	r3, r2, r3
20000822:	681b      	ldr	r3, [r3, #0]
20000824:	469f      	mov	pc, r3
		case 0:
			bitmask = 1;
20000826:	230f      	movs	r3, #15
20000828:	18fb      	adds	r3, r7, r3
2000082a:	2201      	movs	r2, #1
2000082c:	701a      	strb	r2, [r3, #0]
			break;
2000082e:	e022      	b.n	20000876 <pixel+0xda>
		case 1:
			bitmask = 2;
20000830:	230f      	movs	r3, #15
20000832:	18fb      	adds	r3, r7, r3
20000834:	2202      	movs	r2, #2
20000836:	701a      	strb	r2, [r3, #0]
			break;
20000838:	e01d      	b.n	20000876 <pixel+0xda>
		case 2:
			bitmask = 4;
2000083a:	230f      	movs	r3, #15
2000083c:	18fb      	adds	r3, r7, r3
2000083e:	2204      	movs	r2, #4
20000840:	701a      	strb	r2, [r3, #0]
			break;
20000842:	e018      	b.n	20000876 <pixel+0xda>
		case 3:
			bitmask = 8;
20000844:	230f      	movs	r3, #15
20000846:	18fb      	adds	r3, r7, r3
20000848:	2208      	movs	r2, #8
2000084a:	701a      	strb	r2, [r3, #0]
			break;
2000084c:	e013      	b.n	20000876 <pixel+0xda>
		case 4:
			bitmask = 0x10;
2000084e:	230f      	movs	r3, #15
20000850:	18fb      	adds	r3, r7, r3
20000852:	2210      	movs	r2, #16
20000854:	701a      	strb	r2, [r3, #0]
			break;
20000856:	e00e      	b.n	20000876 <pixel+0xda>
		case 5:
			bitmask = 0x20;
20000858:	230f      	movs	r3, #15
2000085a:	18fb      	adds	r3, r7, r3
2000085c:	2220      	movs	r2, #32
2000085e:	701a      	strb	r2, [r3, #0]
			break;
20000860:	e009      	b.n	20000876 <pixel+0xda>
		case 6:
			bitmask = 0x40;
20000862:	230f      	movs	r3, #15
20000864:	18fb      	adds	r3, r7, r3
20000866:	2240      	movs	r2, #64	; 0x40
20000868:	701a      	strb	r2, [r3, #0]
			break;
2000086a:	e004      	b.n	20000876 <pixel+0xda>
		case 7:
			bitmask = 0x80;
2000086c:	230f      	movs	r3, #15
2000086e:	18fb      	adds	r3, r7, r3
20000870:	2280      	movs	r2, #128	; 0x80
20000872:	701a      	strb	r2, [r3, #0]
			break;
20000874:	46c0      	nop			; (mov r8, r8)
	}
	
	if(set == 0){
20000876:	1d7b      	adds	r3, r7, #5
20000878:	781b      	ldrb	r3, [r3, #0]
2000087a:	2b00      	cmp	r3, #0
2000087c:	d105      	bne.n	2000088a <pixel+0xee>
		bitmask = ~bitmask;
2000087e:	220f      	movs	r2, #15
20000880:	18bb      	adds	r3, r7, r2
20000882:	18ba      	adds	r2, r7, r2
20000884:	7812      	ldrb	r2, [r2, #0]
20000886:	43d2      	mvns	r2, r2
20000888:	701a      	strb	r2, [r3, #0]
	}
	
	if(x > 64){
2000088a:	1dfb      	adds	r3, r7, #7
2000088c:	781b      	ldrb	r3, [r3, #0]
2000088e:	2b40      	cmp	r3, #64	; 0x40
20000890:	d90a      	bls.n	200008a8 <pixel+0x10c>
		controller = B_CS2;
20000892:	230e      	movs	r3, #14
20000894:	18fb      	adds	r3, r7, r3
20000896:	2210      	movs	r2, #16
20000898:	701a      	strb	r2, [r3, #0]
		x_fysisk = x - 65;
2000089a:	230d      	movs	r3, #13
2000089c:	18fb      	adds	r3, r7, r3
2000089e:	1dfa      	adds	r2, r7, #7
200008a0:	7812      	ldrb	r2, [r2, #0]
200008a2:	3a41      	subs	r2, #65	; 0x41
200008a4:	701a      	strb	r2, [r3, #0]
200008a6:	e009      	b.n	200008bc <pixel+0x120>
	} else{
		controller = B_CS1;
200008a8:	230e      	movs	r3, #14
200008aa:	18fb      	adds	r3, r7, r3
200008ac:	2208      	movs	r2, #8
200008ae:	701a      	strb	r2, [r3, #0]
		x_fysisk = x - 1;
200008b0:	230d      	movs	r3, #13
200008b2:	18fb      	adds	r3, r7, r3
200008b4:	1dfa      	adds	r2, r7, #7
200008b6:	7812      	ldrb	r2, [r2, #0]
200008b8:	3a01      	subs	r2, #1
200008ba:	701a      	strb	r2, [r3, #0]
	}
	
	graphic_write_command(LCD_SET_ADD | x_fysisk, controller);
200008bc:	260d      	movs	r6, #13
200008be:	19bb      	adds	r3, r7, r6
200008c0:	781b      	ldrb	r3, [r3, #0]
200008c2:	2240      	movs	r2, #64	; 0x40
200008c4:	4313      	orrs	r3, r2
200008c6:	b2da      	uxtb	r2, r3
200008c8:	250e      	movs	r5, #14
200008ca:	197b      	adds	r3, r7, r5
200008cc:	781b      	ldrb	r3, [r3, #0]
200008ce:	0019      	movs	r1, r3
200008d0:	0010      	movs	r0, r2
200008d2:	f7ff feb1 	bl	20000638 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE | index, controller);
200008d6:	230c      	movs	r3, #12
200008d8:	18fb      	adds	r3, r7, r3
200008da:	781b      	ldrb	r3, [r3, #0]
200008dc:	2248      	movs	r2, #72	; 0x48
200008de:	4252      	negs	r2, r2
200008e0:	4313      	orrs	r3, r2
200008e2:	b2da      	uxtb	r2, r3
200008e4:	197b      	adds	r3, r7, r5
200008e6:	781b      	ldrb	r3, [r3, #0]
200008e8:	0019      	movs	r1, r3
200008ea:	0010      	movs	r0, r2
200008ec:	f7ff fea4 	bl	20000638 <graphic_write_command>
	unsigned char temp = graphic_read_data(controller);
200008f0:	230b      	movs	r3, #11
200008f2:	18fc      	adds	r4, r7, r3
200008f4:	197b      	adds	r3, r7, r5
200008f6:	781b      	ldrb	r3, [r3, #0]
200008f8:	0018      	movs	r0, r3
200008fa:	f7ff fee3 	bl	200006c4 <graphic_read_data>
200008fe:	0003      	movs	r3, r0
20000900:	7023      	strb	r3, [r4, #0]
	graphic_write_command(LCD_SET_ADD | x_fysisk, controller);
20000902:	19bb      	adds	r3, r7, r6
20000904:	781b      	ldrb	r3, [r3, #0]
20000906:	2240      	movs	r2, #64	; 0x40
20000908:	4313      	orrs	r3, r2
2000090a:	b2da      	uxtb	r2, r3
2000090c:	197b      	adds	r3, r7, r5
2000090e:	781b      	ldrb	r3, [r3, #0]
20000910:	0019      	movs	r1, r3
20000912:	0010      	movs	r0, r2
20000914:	f7ff fe90 	bl	20000638 <graphic_write_command>
	
	
	if(set == 1){
20000918:	1d7b      	adds	r3, r7, #5
2000091a:	781b      	ldrb	r3, [r3, #0]
2000091c:	2b01      	cmp	r3, #1
2000091e:	d109      	bne.n	20000934 <pixel+0x198>
		bitmask = (bitmask | temp);
20000920:	220f      	movs	r2, #15
20000922:	18bb      	adds	r3, r7, r2
20000924:	18b9      	adds	r1, r7, r2
20000926:	220b      	movs	r2, #11
20000928:	18ba      	adds	r2, r7, r2
2000092a:	7809      	ldrb	r1, [r1, #0]
2000092c:	7812      	ldrb	r2, [r2, #0]
2000092e:	430a      	orrs	r2, r1
20000930:	701a      	strb	r2, [r3, #0]
20000932:	e008      	b.n	20000946 <pixel+0x1aa>
	} else{
		bitmask = (bitmask & temp);
20000934:	220f      	movs	r2, #15
20000936:	18bb      	adds	r3, r7, r2
20000938:	18ba      	adds	r2, r7, r2
2000093a:	210b      	movs	r1, #11
2000093c:	1879      	adds	r1, r7, r1
2000093e:	7812      	ldrb	r2, [r2, #0]
20000940:	7809      	ldrb	r1, [r1, #0]
20000942:	400a      	ands	r2, r1
20000944:	701a      	strb	r2, [r3, #0]
	}
	
	graphic_write_data(bitmask, controller);
20000946:	230e      	movs	r3, #14
20000948:	18fb      	adds	r3, r7, r3
2000094a:	781a      	ldrb	r2, [r3, #0]
2000094c:	230f      	movs	r3, #15
2000094e:	18fb      	adds	r3, r7, r3
20000950:	781b      	ldrb	r3, [r3, #0]
20000952:	0011      	movs	r1, r2
20000954:	0018      	movs	r0, r3
20000956:	f7ff fe92 	bl	2000067e <graphic_write_data>
2000095a:	e000      	b.n	2000095e <pixel+0x1c2>
		return;
2000095c:	46c0      	nop			; (mov r8, r8)
}
2000095e:	46bd      	mov	sp, r7
20000960:	b005      	add	sp, #20
20000962:	bdf0      	pop	{r4, r5, r6, r7, pc}
20000964:	80000007 	andhi	r0, r0, r7
20000968:	20000c30 	andcs	r0, r0, r0, lsr ip

2000096c <move_object>:
		{3, 2}
	}
};


void move_object(POBJECT object){
2000096c:	b590      	push	{r4, r7, lr}
2000096e:	b083      	sub	sp, #12
20000970:	af00      	add	r7, sp, #0
20000972:	6078      	str	r0, [r7, #4]
	if(object->posX >118){
20000974:	687b      	ldr	r3, [r7, #4]
20000976:	68db      	ldr	r3, [r3, #12]
20000978:	2b76      	cmp	r3, #118	; 0x76
2000097a:	dd09      	ble.n	20000990 <move_object+0x24>
		object->set_speed(object, -2, object->dirY);
2000097c:	687b      	ldr	r3, [r7, #4]
2000097e:	6a1c      	ldr	r4, [r3, #32]
20000980:	687b      	ldr	r3, [r7, #4]
20000982:	689a      	ldr	r2, [r3, #8]
20000984:	2302      	movs	r3, #2
20000986:	4259      	negs	r1, r3
20000988:	687b      	ldr	r3, [r7, #4]
2000098a:	0018      	movs	r0, r3
2000098c:	47a0      	blx	r4
2000098e:	e00b      	b.n	200009a8 <move_object+0x3c>
	} else if (object->posX <10){
20000990:	687b      	ldr	r3, [r7, #4]
20000992:	68db      	ldr	r3, [r3, #12]
20000994:	2b09      	cmp	r3, #9
20000996:	dc07      	bgt.n	200009a8 <move_object+0x3c>
		object->set_speed(object, 2, object->dirY);
20000998:	687b      	ldr	r3, [r7, #4]
2000099a:	6a1c      	ldr	r4, [r3, #32]
2000099c:	687b      	ldr	r3, [r7, #4]
2000099e:	689a      	ldr	r2, [r3, #8]
200009a0:	687b      	ldr	r3, [r7, #4]
200009a2:	2102      	movs	r1, #2
200009a4:	0018      	movs	r0, r3
200009a6:	47a0      	blx	r4
	}
	if (object->posY <10){
200009a8:	687b      	ldr	r3, [r7, #4]
200009aa:	691b      	ldr	r3, [r3, #16]
200009ac:	2b09      	cmp	r3, #9
200009ae:	dc08      	bgt.n	200009c2 <move_object+0x56>
		object->set_speed(object, object->dirX, 2);
200009b0:	687b      	ldr	r3, [r7, #4]
200009b2:	6a1c      	ldr	r4, [r3, #32]
200009b4:	687b      	ldr	r3, [r7, #4]
200009b6:	6859      	ldr	r1, [r3, #4]
200009b8:	687b      	ldr	r3, [r7, #4]
200009ba:	2202      	movs	r2, #2
200009bc:	0018      	movs	r0, r3
200009be:	47a0      	blx	r4
200009c0:	e00c      	b.n	200009dc <move_object+0x70>
	} else if (object->posY >54){
200009c2:	687b      	ldr	r3, [r7, #4]
200009c4:	691b      	ldr	r3, [r3, #16]
200009c6:	2b36      	cmp	r3, #54	; 0x36
200009c8:	dd08      	ble.n	200009dc <move_object+0x70>
		object->set_speed(object, object->dirX, -2);
200009ca:	687b      	ldr	r3, [r7, #4]
200009cc:	6a1c      	ldr	r4, [r3, #32]
200009ce:	687b      	ldr	r3, [r7, #4]
200009d0:	6859      	ldr	r1, [r3, #4]
200009d2:	2302      	movs	r3, #2
200009d4:	425a      	negs	r2, r3
200009d6:	687b      	ldr	r3, [r7, #4]
200009d8:	0018      	movs	r0, r3
200009da:	47a0      	blx	r4
	}
	clear_object(object);
200009dc:	687b      	ldr	r3, [r7, #4]
200009de:	0018      	movs	r0, r3
200009e0:	f7ff fcbe 	bl	20000360 <clear_object>
	object->posX += object->dirX;
200009e4:	687b      	ldr	r3, [r7, #4]
200009e6:	68da      	ldr	r2, [r3, #12]
200009e8:	687b      	ldr	r3, [r7, #4]
200009ea:	685b      	ldr	r3, [r3, #4]
200009ec:	18d2      	adds	r2, r2, r3
200009ee:	687b      	ldr	r3, [r7, #4]
200009f0:	60da      	str	r2, [r3, #12]
	object->posY += object->dirY;
200009f2:	687b      	ldr	r3, [r7, #4]
200009f4:	691a      	ldr	r2, [r3, #16]
200009f6:	687b      	ldr	r3, [r7, #4]
200009f8:	689b      	ldr	r3, [r3, #8]
200009fa:	18d2      	adds	r2, r2, r3
200009fc:	687b      	ldr	r3, [r7, #4]
200009fe:	611a      	str	r2, [r3, #16]
	
	if(object->posX < 1 || object->posX + object->geo->sizeX > 128){
20000a00:	687b      	ldr	r3, [r7, #4]
20000a02:	68db      	ldr	r3, [r3, #12]
20000a04:	2b00      	cmp	r3, #0
20000a06:	dd07      	ble.n	20000a18 <move_object+0xac>
20000a08:	687b      	ldr	r3, [r7, #4]
20000a0a:	68da      	ldr	r2, [r3, #12]
20000a0c:	687b      	ldr	r3, [r7, #4]
20000a0e:	681b      	ldr	r3, [r3, #0]
20000a10:	685b      	ldr	r3, [r3, #4]
20000a12:	18d3      	adds	r3, r2, r3
20000a14:	2b80      	cmp	r3, #128	; 0x80
20000a16:	dd04      	ble.n	20000a22 <move_object+0xb6>
		object->dirX = -object->dirX;
20000a18:	687b      	ldr	r3, [r7, #4]
20000a1a:	685b      	ldr	r3, [r3, #4]
20000a1c:	425a      	negs	r2, r3
20000a1e:	687b      	ldr	r3, [r7, #4]
20000a20:	605a      	str	r2, [r3, #4]
	}
	
	if(object->posY < 1 || object->posY + object->geo->sizeY > 64){
20000a22:	687b      	ldr	r3, [r7, #4]
20000a24:	691b      	ldr	r3, [r3, #16]
20000a26:	2b00      	cmp	r3, #0
20000a28:	dd07      	ble.n	20000a3a <move_object+0xce>
20000a2a:	687b      	ldr	r3, [r7, #4]
20000a2c:	691a      	ldr	r2, [r3, #16]
20000a2e:	687b      	ldr	r3, [r7, #4]
20000a30:	681b      	ldr	r3, [r3, #0]
20000a32:	689b      	ldr	r3, [r3, #8]
20000a34:	18d3      	adds	r3, r2, r3
20000a36:	2b40      	cmp	r3, #64	; 0x40
20000a38:	dd04      	ble.n	20000a44 <move_object+0xd8>
		object->dirY = -object->dirY;
20000a3a:	687b      	ldr	r3, [r7, #4]
20000a3c:	689b      	ldr	r3, [r3, #8]
20000a3e:	425a      	negs	r2, r3
20000a40:	687b      	ldr	r3, [r7, #4]
20000a42:	609a      	str	r2, [r3, #8]
	}
	draw_object(object);
20000a44:	687b      	ldr	r3, [r7, #4]
20000a46:	0018      	movs	r0, r3
20000a48:	f7ff fc5c 	bl	20000304 <draw_object>
}
20000a4c:	46c0      	nop			; (mov r8, r8)
20000a4e:	46bd      	mov	sp, r7
20000a50:	b003      	add	sp, #12
20000a52:	bd90      	pop	{r4, r7, pc}

20000a54 <init_app>:


//inits
void init_app(void){
20000a54:	b580      	push	{r7, lr}
20000a56:	af00      	add	r7, sp, #0
	//för avbrott
	*((unsigned long *) 0x40023830) =0x18;
20000a58:	4b12      	ldr	r3, [pc, #72]	; (20000aa4 <init_app+0x50>)
20000a5a:	2218      	movs	r2, #24
20000a5c:	601a      	str	r2, [r3, #0]
	*((unsigned long *) 0x40023844) |=0x4000; 
20000a5e:	4b12      	ldr	r3, [pc, #72]	; (20000aa8 <init_app+0x54>)
20000a60:	681a      	ldr	r2, [r3, #0]
20000a62:	4b11      	ldr	r3, [pc, #68]	; (20000aa8 <init_app+0x54>)
20000a64:	2180      	movs	r1, #128	; 0x80
20000a66:	01c9      	lsls	r1, r1, #7
20000a68:	430a      	orrs	r2, r1
20000a6a:	601a      	str	r2, [r3, #0]
	*((unsigned long *) 0xE000ED08) =0x2001C000; //flytta vektortabellen för undantag till adress 0x2001C000 
20000a6c:	4b0f      	ldr	r3, [pc, #60]	; (20000aac <init_app+0x58>)
20000a6e:	4a10      	ldr	r2, [pc, #64]	; (20000ab0 <init_app+0x5c>)
20000a70:	601a      	str	r2, [r3, #0]
	*((void(**)(void))0x2001C03C) = systick_irq_handler; //init med adress till hanteringsrutin
20000a72:	4b10      	ldr	r3, [pc, #64]	; (20000ab4 <init_app+0x60>)
20000a74:	4a10      	ldr	r2, [pc, #64]	; (20000ab8 <init_app+0x64>)
20000a76:	601a      	str	r2, [r3, #0]
	
	//port init
	GPIO_E.moder = 0x55555555; //15-0 utgång. För LCD
20000a78:	4b10      	ldr	r3, [pc, #64]	; (20000abc <init_app+0x68>)
20000a7a:	4a11      	ldr	r2, [pc, #68]	; (20000ac0 <init_app+0x6c>)
20000a7c:	601a      	str	r2, [r3, #0]
	GPIO_D.moder = 0x55005555; //15-12 och 7-0 utgång. För keypad
20000a7e:	4b11      	ldr	r3, [pc, #68]	; (20000ac4 <init_app+0x70>)
20000a80:	4a11      	ldr	r2, [pc, #68]	; (20000ac8 <init_app+0x74>)
20000a82:	601a      	str	r2, [r3, #0]
	GPIO_D.otyper = 0x0000; //onödig tilldelning?
20000a84:	4b0f      	ldr	r3, [pc, #60]	; (20000ac4 <init_app+0x70>)
20000a86:	2200      	movs	r2, #0
20000a88:	809a      	strh	r2, [r3, #4]
	GPIO_D.pupdr = 0x55aa0000; 
20000a8a:	4b0e      	ldr	r3, [pc, #56]	; (20000ac4 <init_app+0x70>)
20000a8c:	4a0f      	ldr	r2, [pc, #60]	; (20000acc <init_app+0x78>)
20000a8e:	60da      	str	r2, [r3, #12]
	
	systick_flag = 0;
20000a90:	4b0f      	ldr	r3, [pc, #60]	; (20000ad0 <init_app+0x7c>)
20000a92:	2200      	movs	r2, #0
20000a94:	601a      	str	r2, [r3, #0]
	second_count = 0;
20000a96:	4b0f      	ldr	r3, [pc, #60]	; (20000ad4 <init_app+0x80>)
20000a98:	2200      	movs	r2, #0
20000a9a:	601a      	str	r2, [r3, #0]
}
20000a9c:	46c0      	nop			; (mov r8, r8)
20000a9e:	46bd      	mov	sp, r7
20000aa0:	bd80      	pop	{r7, pc}
20000aa2:	46c0      	nop			; (mov r8, r8)
20000aa4:	40023830 	andmi	r3, r2, r0, lsr r8
20000aa8:	40023844 	andmi	r3, r2, r4, asr #16
20000aac:	e000ed08 	and	lr, r0, r8, lsl #26
20000ab0:	2001c000 	andcs	ip, r1, r0
20000ab4:	2001c03c 	andcs	ip, r1, ip, lsr r0
20000ab8:	200003bd 			; <UNDEFINED> instruction: 0x200003bd
20000abc:	40021000 	andmi	r1, r2, r0
20000ac0:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000ac4:	40020c00 	andmi	r0, r2, r0, lsl #24
20000ac8:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000acc:	55aa0000 	strpl	r0, [sl, #0]!
20000ad0:	20000b6c 	andcs	r0, r0, ip, ror #22
20000ad4:	20000b64 	andcs	r0, r0, r4, ror #22

20000ad8 <main>:



void main(void)
{
20000ad8:	b580      	push	{r7, lr}
20000ada:	b082      	sub	sp, #8
20000adc:	af00      	add	r7, sp, #0
	char c;
	POBJECT p = &ball;
20000ade:	4b20      	ldr	r3, [pc, #128]	; (20000b60 <main+0x88>)
20000ae0:	607b      	str	r3, [r7, #4]
	init_app();
20000ae2:	f7ff ffb7 	bl	20000a54 <init_app>
	graphic_initialize();
20000ae6:	f7ff fe02 	bl	200006ee <graphic_initialize>
	graphic_clear_screen();
20000aea:	f7ff fe2b 	bl	20000744 <graphic_clear_screen>
	
	while (1){
		p->move(p);
20000aee:	687b      	ldr	r3, [r7, #4]
20000af0:	69db      	ldr	r3, [r3, #28]
20000af2:	687a      	ldr	r2, [r7, #4]
20000af4:	0010      	movs	r0, r2
20000af6:	4798      	blx	r3
		delay_milli(40);
20000af8:	2028      	movs	r0, #40	; 0x28
20000afa:	f7ff fbaa 	bl	20000252 <delay_milli>
		c=keyb();
20000afe:	f7ff fb23 	bl	20000148 <keyb>
20000b02:	0002      	movs	r2, r0
20000b04:	1cfb      	adds	r3, r7, #3
20000b06:	701a      	strb	r2, [r3, #0]
		switch(c){
20000b08:	1cfb      	adds	r3, r7, #3
20000b0a:	781b      	ldrb	r3, [r3, #0]
20000b0c:	2b04      	cmp	r3, #4
20000b0e:	d00f      	beq.n	20000b30 <main+0x58>
20000b10:	dc02      	bgt.n	20000b18 <main+0x40>
20000b12:	2b02      	cmp	r3, #2
20000b14:	d014      	beq.n	20000b40 <main+0x68>
20000b16:	e022      	b.n	20000b5e <main+0x86>
20000b18:	2b06      	cmp	r3, #6
20000b1a:	d002      	beq.n	20000b22 <main+0x4a>
20000b1c:	2b08      	cmp	r3, #8
20000b1e:	d017      	beq.n	20000b50 <main+0x78>
20000b20:	e01d      	b.n	20000b5e <main+0x86>
			case 6: p->set_speed(p,2,0); break;
20000b22:	687b      	ldr	r3, [r7, #4]
20000b24:	6a1b      	ldr	r3, [r3, #32]
20000b26:	6878      	ldr	r0, [r7, #4]
20000b28:	2200      	movs	r2, #0
20000b2a:	2102      	movs	r1, #2
20000b2c:	4798      	blx	r3
20000b2e:	e016      	b.n	20000b5e <main+0x86>
			case 4: p->set_speed(p,-2,0); break;
20000b30:	687b      	ldr	r3, [r7, #4]
20000b32:	6a1b      	ldr	r3, [r3, #32]
20000b34:	2202      	movs	r2, #2
20000b36:	4251      	negs	r1, r2
20000b38:	6878      	ldr	r0, [r7, #4]
20000b3a:	2200      	movs	r2, #0
20000b3c:	4798      	blx	r3
20000b3e:	e00e      	b.n	20000b5e <main+0x86>
			case 2: p->set_speed(p,0,-2); break;
20000b40:	687b      	ldr	r3, [r7, #4]
20000b42:	6a1b      	ldr	r3, [r3, #32]
20000b44:	2202      	movs	r2, #2
20000b46:	4252      	negs	r2, r2
20000b48:	6878      	ldr	r0, [r7, #4]
20000b4a:	2100      	movs	r1, #0
20000b4c:	4798      	blx	r3
20000b4e:	e006      	b.n	20000b5e <main+0x86>
			case 8: p->set_speed(p,0,2); break;
20000b50:	687b      	ldr	r3, [r7, #4]
20000b52:	6a1b      	ldr	r3, [r3, #32]
20000b54:	6878      	ldr	r0, [r7, #4]
20000b56:	2202      	movs	r2, #2
20000b58:	2100      	movs	r1, #0
20000b5a:	4798      	blx	r3
20000b5c:	46c0      	nop			; (mov r8, r8)
	while (1){
20000b5e:	e7c6      	b.n	20000aee <main+0x16>
20000b60:	20000bfc 	strdcs	r0, [r0], -ip

20000b64 <second_count>:
20000b64:	00000000 	andeq	r0, r0, r0

20000b68 <delay_count>:
20000b68:	00000000 	andeq	r0, r0, r0

20000b6c <systick_flag>:
20000b6c:	00000000 	andeq	r0, r0, r0

20000b70 <obstacle_geometry>:
20000b70:	00000028 	andeq	r0, r0, r8, lsr #32
20000b74:	0000000a 	andeq	r0, r0, sl
20000b78:	0000000a 	andeq	r0, r0, sl
20000b7c:	00010000 	andeq	r0, r1, r0
20000b80:	00030002 	andeq	r0, r3, r2
20000b84:	00050004 	andeq	r0, r5, r4
20000b88:	00070006 	andeq	r0, r7, r6
20000b8c:	00090008 	andeq	r0, r9, r8
20000b90:	0001000a 	andeq	r0, r1, sl
20000b94:	00020a01 	andeq	r0, r2, r1, lsl #20
20000b98:	00030a02 	andeq	r0, r3, r2, lsl #20
20000b9c:	00040a03 	andeq	r0, r4, r3, lsl #20
20000ba0:	00050a04 	andeq	r0, r5, r4, lsl #20

20000ba4 <obstacle>:
20000ba4:	20000b70 	andcs	r0, r0, r0, ror fp
20000ba8:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20000bac:	00000000 	andeq	r0, r0, r0
20000bb0:	0000006e 	andeq	r0, r0, lr, rrx
20000bb4:	00000000 	andeq	r0, r0, r0
20000bb8:	20000305 	andcs	r0, r0, r5, lsl #6
20000bbc:	20000361 	andcs	r0, r0, r1, ror #6
20000bc0:	20000011 	andcs	r0, r0, r1, lsl r0
20000bc4:	200002e5 	andcs	r0, r0, r5, ror #5

20000bc8 <ball_geometry>:
20000bc8:	0000000c 	andeq	r0, r0, ip
20000bcc:	00000004 	andeq	r0, r0, r4
20000bd0:	00000004 	andeq	r0, r0, r4
20000bd4:	02000100 	andeq	r0, r0, #0, 2
20000bd8:	01010001 	tsteq	r1, r1
20000bdc:	03010201 	movweq	r0, #4609	; 0x1201
20000be0:	01020002 	tsteq	r2, r2
20000be4:	03020202 	movweq	r0, #8706	; 0x2202
20000be8:	00000203 	andeq	r0, r0, r3, lsl #4
	...

20000bfc <ball>:
20000bfc:	20000bc8 	andcs	r0, r0, r8, asr #23
20000c00:	00000000 	andeq	r0, r0, r0
20000c04:	00000002 	andeq	r0, r0, r2
20000c08:	00000001 	andeq	r0, r0, r1
20000c0c:	00000001 	andeq	r0, r0, r1
20000c10:	20000305 	andcs	r0, r0, r5, lsl #6
20000c14:	20000361 	andcs	r0, r0, r1, ror #6
20000c18:	2000096d 	andcs	r0, r0, sp, ror #18
20000c1c:	200002e5 	andcs	r0, r0, r5, ror #5
20000c20:	0a030201 	beq	200c142c <ball+0xc0830>
20000c24:	0b060504 	bleq	2018203c <ball+0x181440>
20000c28:	0c090807 	stceq	8, cr0, [r9], {7}
20000c2c:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000bfc <ball>
20000c30:	20000826 	andcs	r0, r0, r6, lsr #16
20000c34:	20000830 	andcs	r0, r0, r0, lsr r8
20000c38:	2000083a 	andcs	r0, r0, sl, lsr r8
20000c3c:	20000844 	andcs	r0, r0, r4, asr #16
20000c40:	2000084e 	andcs	r0, r0, lr, asr #16
20000c44:	20000858 	andcs	r0, r0, r8, asr r8
20000c48:	20000862 	andcs	r0, r0, r2, ror #16
20000c4c:	2000086c 	andcs	r0, r0, ip, ror #16

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000001d5 	ldrdeq	r0, [r0], -r5
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	000000f6 	strdeq	r0, [r0], -r6
      10:	0000b60c 	andeq	fp, r0, ip, lsl #12
      14:	00002200 	andeq	r2, r0, r0, lsl #4
      18:	00001000 	andeq	r1, r0, r0
      1c:	00004c20 	andeq	r4, r0, r0, lsr #24
      20:	00000000 	andeq	r0, r0, r0
      24:	07040200 	streq	r0, [r4, -r0, lsl #4]
      28:	000001f9 	strdeq	r0, [r0], -r9
      2c:	8d070202 	sfmhi	f0, 4, [r7, #-8]
      30:	02000000 	andeq	r0, r0, #0
      34:	00630801 	rsbeq	r0, r3, r1, lsl #16
      38:	56030000 	strpl	r0, [r3], -r0
      3c:	02000000 	andeq	r0, r0, #0
      40:	005b0402 	subseq	r0, fp, r2, lsl #8
      44:	78040000 	stmdavc	r4, {}	; <UNPREDICTABLE>
      48:	33050200 	movwcc	r0, #20992	; 0x5200
      4c:	00000000 	andeq	r0, r0, r0
      50:	02007904 	andeq	r7, r0, #4, 18	; 0x10000
      54:	00003306 	andeq	r3, r0, r6, lsl #6
      58:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
      5c:	0000005d 	andeq	r0, r0, sp, asr r0
      60:	003a0702 	eorseq	r0, sl, r2, lsl #14
      64:	ac030000 	stcge	0, cr0, [r3], {-0}
      68:	34000000 	strcc	r0, [r0], #-0
      6c:	00a20902 	adceq	r0, r2, r2, lsl #18
      70:	77060000 	strvc	r0, [r6, -r0]
      74:	02000001 	andeq	r0, r0, #1
      78:	0000a20a 	andeq	sl, r0, sl, lsl #4
      7c:	a0060000 	andge	r0, r6, r0
      80:	02000000 	andeq	r0, r0, #0
      84:	0000a20b 	andeq	sl, r0, fp, lsl #4
      88:	a6060400 	strge	r0, [r6], -r0, lsl #8
      8c:	02000000 	andeq	r0, r0, #0
      90:	0000a20c 	andeq	sl, r0, ip, lsl #4
      94:	70040800 	andvc	r0, r4, r0, lsl #16
      98:	0d020078 	stceq	0, cr0, [r2, #-480]	; 0xfffffe20
      9c:	000000a9 	andeq	r0, r0, r9, lsr #1
      a0:	0407000c 	streq	r0, [r7], #-12
      a4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
      a8:	005b0800 	subseq	r0, fp, r0, lsl #16
      ac:	00b90000 	adcseq	r0, r9, r0
      b0:	25090000 	strcs	r0, [r9, #-0]
      b4:	13000000 	movwne	r0, #0
      b8:	00010500 	andeq	r0, r1, r0, lsl #10
      bc:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
      c0:	00000066 	andeq	r0, r0, r6, rrx
      c4:	00000005 	andeq	r0, r0, r5
      c8:	cf0e0200 	svcgt	0x000e0200
      cc:	0a000000 	beq	d4 <startup-0x1fffff2c>
      d0:	00006604 	andeq	r6, r0, r4, lsl #12
      d4:	018b0300 	orreq	r0, fp, r0, lsl #6
      d8:	02240000 	eoreq	r0, r4, #0
      dc:	00014e10 	andeq	r4, r1, r0, lsl lr
      e0:	65670400 	strbvs	r0, [r7, #-1024]!	; 0xfffffc00
      e4:	1102006f 	tstne	r2, pc, rrx
      e8:	000000c4 	andeq	r0, r0, r4, asr #1
      ec:	01810600 	orreq	r0, r1, r0, lsl #12
      f0:	12020000 	andne	r0, r2, #0
      f4:	000000a2 	andeq	r0, r0, r2, lsr #1
      f8:	01860604 	orreq	r0, r6, r4, lsl #12
      fc:	12020000 	andne	r0, r2, #0
     100:	000000a2 	andeq	r0, r0, r2, lsr #1
     104:	00180608 	andseq	r0, r8, r8, lsl #12
     108:	13020000 	movwne	r0, #8192	; 0x2000
     10c:	000000a2 	andeq	r0, r0, r2, lsr #1
     110:	001d060c 	andseq	r0, sp, ip, lsl #12
     114:	13020000 	movwne	r0, #8192	; 0x2000
     118:	000000a2 	andeq	r0, r0, r2, lsr #1
     11c:	00f10610 	rscseq	r0, r1, r0, lsl r6
     120:	14020000 	strne	r0, [r2], #-0
     124:	0000015f 	andeq	r0, r0, pc, asr r1
     128:	07d60614 	bfieq	r0, r4, #12, #11
     12c:	15020000 	strne	r0, [r2, #-0]
     130:	0000015f 	andeq	r0, r0, pc, asr r1
     134:	00510618 	subseq	r0, r1, r8, lsl r6
     138:	16020000 	strne	r0, [r2], -r0
     13c:	0000015f 	andeq	r0, r0, pc, asr r1
     140:	0071061c 	rsbseq	r0, r1, ip, lsl r6
     144:	17020000 	strne	r0, [r2, -r0]
     148:	0000017a 	andeq	r0, r0, sl, ror r1
     14c:	590b0020 	stmdbpl	fp, {r5}
     150:	0c000001 	stceq	0, cr0, [r0], {1}
     154:	00000159 	andeq	r0, r0, r9, asr r1
     158:	d5040a00 	strle	r0, [r4, #-2560]	; 0xfffff600
     15c:	0a000000 	beq	164 <startup-0x1ffffe9c>
     160:	00014e04 	andeq	r4, r1, r4, lsl #28
     164:	017a0b00 	cmneq	sl, r0, lsl #22
     168:	590c0000 	stmdbpl	ip, {}	; <UNPREDICTABLE>
     16c:	0c000001 	stceq	0, cr0, [r0], {1}
     170:	000000a2 	andeq	r0, r0, r2, lsr #1
     174:	0000a20c 	andeq	sl, r0, ip, lsl #4
     178:	040a0000 	streq	r0, [sl], #-0
     17c:	00000165 	andeq	r0, r0, r5, ror #2
     180:	00019405 	andeq	r9, r1, r5, lsl #8
     184:	d5180200 	ldrle	r0, [r8, #-512]	; 0xfffffe00
     188:	05000000 	streq	r0, [r0, #-0]
     18c:	00000193 	muleq	r0, r3, r1
     190:	01591802 	cmpeq	r9, r2, lsl #16
     194:	7b0d0000 	blvc	34019c <startup-0x1fcbfe64>
     198:	01000000 	mrseq	r0, (UNDEF: 0)
     19c:	0000b903 	andeq	fp, r0, r3, lsl #18
     1a0:	70030500 	andvc	r0, r3, r0, lsl #10
     1a4:	0d20000b 	stceq	0, cr0, [r0, #-44]!	; 0xffffffd4
     1a8:	0000000f 	andeq	r0, r0, pc
     1ac:	01801b01 	orreq	r1, r0, r1, lsl #22
     1b0:	03050000 	movweq	r0, #20480	; 0x5000
     1b4:	20000ba4 	andcs	r0, r0, r4, lsr #23
     1b8:	00000a0e 	andeq	r0, r0, lr, lsl #20
     1bc:	10100100 	andsne	r0, r0, r0, lsl #2
     1c0:	4c200000 	stcmi	0, cr0, [r0], #-0
     1c4:	01000000 	mrseq	r0, (UNDEF: 0)
     1c8:	08b50f9c 	ldmeq	r5!, {r2, r3, r4, r7, r8, r9, sl, fp}
     1cc:	10010000 	andne	r0, r1, r0
     1d0:	0000018b 	andeq	r0, r0, fp, lsl #3
     1d4:	00749102 	rsbseq	r9, r4, r2, lsl #2
     1d8:	0009e600 	andeq	lr, r9, r0, lsl #12
     1dc:	c7000400 	strgt	r0, [r0, -r0, lsl #8]
     1e0:	04000000 	streq	r0, [r0], #-0
     1e4:	0000f601 	andeq	pc, r0, r1, lsl #12
     1e8:	04b30c00 	ldrteq	r0, [r3], #3072	; 0xc00
     1ec:	00220000 	eoreq	r0, r2, r0
     1f0:	005c0000 	subseq	r0, ip, r0
     1f4:	01742000 	cmneq	r4, r0
     1f8:	007f0000 	rsbseq	r0, pc, r0
     1fc:	01020000 	mrseq	r0, (UNDEF: 2)
     200:	00006506 	andeq	r6, r0, r6, lsl #10
     204:	08010200 	stmdaeq	r1, {r9}
     208:	00000063 	andeq	r0, r0, r3, rrx
     20c:	1a050202 	bne	140a1c <startup-0x1febf5e4>
     210:	02000004 	andeq	r0, r0, #4
     214:	008d0702 	addeq	r0, sp, r2, lsl #14
     218:	04020000 	streq	r0, [r2], #-0
     21c:	00024505 	andeq	r4, r2, r5, lsl #10
     220:	07040200 	streq	r0, [r4, -r0, lsl #4]
     224:	000001f4 	strdeq	r0, [r0], -r4
     228:	40050802 	andmi	r0, r5, r2, lsl #16
     22c:	02000002 	andeq	r0, r0, #2
     230:	01ef0708 	mvneq	r0, r8, lsl #14
     234:	04030000 	streq	r0, [r3], #-0
     238:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     23c:	07040200 	streq	r0, [r4, -r0, lsl #4]
     240:	000001f9 	strdeq	r0, [r0], -r9
     244:	92050404 	andls	r0, r5, #4, 8	; 0x4000000
     248:	02000003 	andeq	r0, r0, #3
     24c:	00007822 	andeq	r7, r0, r2, lsr #16
     250:	7e040600 	cfmadd32vc	mvax0, mvfx0, mvfx4, mvfx0
     254:	07000000 	streq	r0, [r0, -r0]
     258:	000004f9 	strdeq	r0, [r0], -r9
     25c:	0003e605 	andeq	lr, r3, r5, lsl #12
     260:	412c0300 			; <UNDEFINED> instruction: 0x412c0300
     264:	05000000 	streq	r0, [r0, #-0]
     268:	0000050e 	andeq	r0, r0, lr, lsl #10
     26c:	00417203 	subeq	r7, r1, r3, lsl #4
     270:	9a080000 	bls	200278 <startup-0x1fdffd88>
     274:	04000003 	streq	r0, [r0], #-3
     278:	00640165 	rsbeq	r0, r4, r5, ror #2
     27c:	04090000 	streq	r0, [r9], #-0
     280:	00c4a603 	sbceq	sl, r4, r3, lsl #12
     284:	8c0a0000 	stchi	0, cr0, [sl], {-0}
     288:	03000003 	movweq	r0, #3
     28c:	000099a8 	andeq	r9, r0, r8, lsr #19
     290:	03360a00 	teqeq	r6, #0, 20
     294:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
     298:	000000c4 	andeq	r0, r0, r4, asr #1
     29c:	002c0b00 	eoreq	r0, ip, r0, lsl #22
     2a0:	00d40000 	sbcseq	r0, r4, r0
     2a4:	640c0000 	strvs	r0, [ip], #-0
     2a8:	03000000 	movweq	r0, #0
     2ac:	03080d00 	movweq	r0, #36096	; 0x8d00
     2b0:	0000f5a3 	andeq	pc, r0, r3, lsr #11
     2b4:	04f10e00 	ldrbteq	r0, [r1], #3584	; 0xe00
     2b8:	a5030000 	strge	r0, [r3, #-0]
     2bc:	0000005d 	andeq	r0, r0, sp, asr r0
     2c0:	05000e00 	streq	r0, [r0, #-3584]	; 0xfffff200
     2c4:	aa030000 	bge	c02cc <startup-0x1ff3fd34>
     2c8:	000000a5 	andeq	r0, r0, r5, lsr #1
     2cc:	42050004 	andmi	r0, r5, #4
     2d0:	03000004 	movweq	r0, #4
     2d4:	0000d4ab 	andeq	sp, r0, fp, lsr #9
     2d8:	02ff0500 	rscseq	r0, pc, #0, 10
     2dc:	af030000 	svcge	0x00030000
     2e0:	0000006d 	andeq	r0, r0, sp, rrx
     2e4:	00054c05 	andeq	r4, r5, r5, lsl #24
     2e8:	48160500 	ldmdami	r6, {r8, sl}
     2ec:	0f000000 	svceq	0x00000000
     2f0:	00000310 	andeq	r0, r0, r0, lsl r3
     2f4:	692f0518 	stmdbvs	pc!, {r3, r4, r8, sl}	; <UNPREDICTABLE>
     2f8:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     2fc:	00000463 	andeq	r0, r0, r3, ror #8
     300:	01693105 	cmneq	r9, r5, lsl #2
     304:	10000000 	andne	r0, r0, r0
     308:	05006b5f 	streq	r6, [r0, #-2911]	; 0xfffff4a1
     30c:	00005d32 	andeq	r5, r0, r2, lsr sp
     310:	ab0e0400 	blge	381318 <startup-0x1fc7ece8>
     314:	05000004 	streq	r0, [r0, #-4]
     318:	00005d32 	andeq	r5, r0, r2, lsr sp
     31c:	f30e0800 	vsub.i8	d0, d14, d0
     320:	05000002 	streq	r0, [r0, #-2]
     324:	00005d32 	andeq	r5, r0, r2, lsr sp
     328:	810e0c00 	tsthi	lr, r0, lsl #24
     32c:	05000005 	streq	r0, [r0, #-5]
     330:	00005d32 	andeq	r5, r0, r2, lsr sp
     334:	5f101000 	svcpl	0x00101000
     338:	33050078 	movwcc	r0, #20600	; 0x5078
     33c:	0000016f 	andeq	r0, r0, pc, ror #2
     340:	04060014 	streq	r0, [r6], #-20	; 0xffffffec
     344:	00000116 	andeq	r0, r0, r6, lsl r1
     348:	00010b0b 	andeq	r0, r1, fp, lsl #22
     34c:	00017f00 	andeq	r7, r1, r0, lsl #30
     350:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     354:	00000000 	andeq	r0, r0, r0
     358:	0003310f 	andeq	r3, r3, pc, lsl #2
     35c:	37052400 	strcc	r2, [r5, -r0, lsl #8]
     360:	000001f8 	strdeq	r0, [r0], -r8
     364:	0002370e 	andeq	r3, r2, lr, lsl #14
     368:	5d390500 	cfldr32pl	mvfx0, [r9, #-0]
     36c:	00000000 	andeq	r0, r0, r0
     370:	0005160e 	andeq	r1, r5, lr, lsl #12
     374:	5d3a0500 	cfldr32pl	mvfx0, [sl, #-0]
     378:	04000000 	streq	r0, [r0], #-0
     37c:	0002640e 	andeq	r6, r2, lr, lsl #8
     380:	5d3b0500 	cfldr32pl	mvfx0, [fp, #-0]
     384:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     388:	00061c0e 	andeq	r1, r6, lr, lsl #24
     38c:	5d3c0500 	cfldr32pl	mvfx0, [ip, #-0]
     390:	0c000000 	stceq	0, cr0, [r0], {-0}
     394:	0003ca0e 	andeq	ip, r3, lr, lsl #20
     398:	5d3d0500 	cfldr32pl	mvfx0, [sp, #-0]
     39c:	10000000 	andne	r0, r0, r0
     3a0:	0003a90e 	andeq	sl, r3, lr, lsl #18
     3a4:	5d3e0500 	cfldr32pl	mvfx0, [lr, #-0]
     3a8:	14000000 	strne	r0, [r0], #-0
     3ac:	0005860e 	andeq	r8, r5, lr, lsl #12
     3b0:	5d3f0500 	cfldr32pl	mvfx0, [pc, #-0]	; 3b8 <startup-0x1ffffc48>
     3b4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     3b8:	0004240e 	andeq	r2, r4, lr, lsl #8
     3bc:	5d400500 	cfstr64pl	mvdx0, [r0, #-0]
     3c0:	1c000000 	stcne	0, cr0, [r0], {-0}
     3c4:	0005d20e 	andeq	sp, r5, lr, lsl #4
     3c8:	5d410500 	cfstr64pl	mvdx0, [r1, #-0]
     3cc:	20000000 	andcs	r0, r0, r0
     3d0:	02731100 	rsbseq	r1, r3, #0, 2
     3d4:	01080000 	mrseq	r0, (UNDEF: 8)
     3d8:	02384a05 	eorseq	r4, r8, #20480	; 0x5000
     3dc:	df0e0000 	svcle	0x000e0000
     3e0:	05000002 	streq	r0, [r0, #-2]
     3e4:	0002384b 	andeq	r3, r2, fp, asr #16
     3e8:	9b0e0000 	blls	3803f0 <startup-0x1fc7fc10>
     3ec:	05000001 	streq	r0, [r0, #-1]
     3f0:	0002384c 	andeq	r3, r2, ip, asr #16
     3f4:	3e128000 	cdpcc	0, 1, cr8, cr2, cr0, {0}
     3f8:	05000005 	streq	r0, [r0, #-5]
     3fc:	00010b4e 	andeq	r0, r1, lr, asr #22
     400:	12010000 	andne	r0, r1, #0
     404:	00000298 	muleq	r0, r8, r2
     408:	010b5105 	tsteq	fp, r5, lsl #2
     40c:	01040000 	mrseq	r0, (UNDEF: 4)
     410:	006b0b00 	rsbeq	r0, fp, r0, lsl #22
     414:	02480000 	subeq	r0, r8, #0
     418:	640c0000 	strvs	r0, [ip], #-0
     41c:	1f000000 	svcne	0x00000000
     420:	03d31100 	bicseq	r1, r3, #0, 2
     424:	01900000 	orrseq	r0, r0, r0
     428:	02865d05 	addeq	r5, r6, #320	; 0x140
     42c:	630e0000 	movwvs	r0, #57344	; 0xe000
     430:	05000004 	streq	r0, [r0, #-4]
     434:	0002865e 	andeq	r8, r2, lr, asr r6
     438:	7b0e0000 	blvc	380440 <startup-0x1fc7fbc0>
     43c:	05000004 	streq	r0, [r0, #-4]
     440:	00005d5f 	andeq	r5, r0, pc, asr sp
     444:	ee0e0400 	cfcpys	mvf0, mvf14
     448:	05000002 	streq	r0, [r0, #-2]
     44c:	00028c61 	andeq	r8, r2, r1, ror #24
     450:	730e0800 	movwvc	r0, #59392	; 0xe800
     454:	05000002 	streq	r0, [r0, #-2]
     458:	0001f862 	andeq	pc, r1, r2, ror #16
     45c:	06008800 	streq	r8, [r0], -r0, lsl #16
     460:	00024804 	andeq	r4, r2, r4, lsl #16
     464:	029c0b00 	addseq	r0, ip, #0, 22
     468:	029c0000 	addseq	r0, ip, #0
     46c:	640c0000 	strvs	r0, [ip], #-0
     470:	1f000000 	svcne	0x00000000
     474:	a2040600 	andge	r0, r4, #0, 12
     478:	13000002 	movwne	r0, #2
     47c:	00042e0f 	andeq	r2, r4, pc, lsl #28
     480:	75050800 	strvc	r0, [r5, #-2048]	; 0xfffff800
     484:	000002c8 	andeq	r0, r0, r8, asr #5
     488:	00025e0e 	andeq	r5, r2, lr, lsl #28
     48c:	c8760500 	ldmdagt	r6!, {r8, sl}^
     490:	00000002 	andeq	r0, r0, r2
     494:	0001a70e 	andeq	sl, r1, lr, lsl #14
     498:	5d770500 	cfldr64pl	mvdx0, [r7, #-0]
     49c:	04000000 	streq	r0, [r0], #-0
     4a0:	2c040600 	stccs	6, cr0, [r4], {-0}
     4a4:	0f000000 	svceq	0x00000000
     4a8:	0000044d 	andeq	r0, r0, sp, asr #8
     4ac:	f8b50568 			; <UNDEFINED> instruction: 0xf8b50568
     4b0:	10000003 	andne	r0, r0, r3
     4b4:	0500705f 	streq	r7, [r0, #-95]	; 0xffffffa1
     4b8:	0002c8b6 			; <UNDEFINED> instruction: 0x0002c8b6
     4bc:	5f100000 	svcpl	0x00100000
     4c0:	b7050072 	smlsdxlt	r5, r2, r0, r0
     4c4:	0000005d 	andeq	r0, r0, sp, asr r0
     4c8:	775f1004 	ldrbvc	r1, [pc, -r4]
     4cc:	5db80500 	cfldr32pl	mvfx0, [r8]
     4d0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     4d4:	0002910e 	andeq	r9, r2, lr, lsl #2
     4d8:	33b90500 			; <UNDEFINED> instruction: 0x33b90500
     4dc:	0c000000 	stceq	0, cr0, [r0], {-0}
     4e0:	00034d0e 	andeq	r4, r3, lr, lsl #26
     4e4:	33ba0500 			; <UNDEFINED> instruction: 0x33ba0500
     4e8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     4ec:	66625f10 	uqadd16vs	r5, r2, r0
     4f0:	a3bb0500 			; <UNDEFINED> instruction: 0xa3bb0500
     4f4:	10000002 	andne	r0, r0, r2
     4f8:	0002060e 	andeq	r0, r2, lr, lsl #12
     4fc:	5dbc0500 	cfldr32pl	mvfx0, [ip]
     500:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     504:	0002810e 	andeq	r8, r2, lr, lsl #2
     508:	6bc30500 	blvs	ff0c1910 <ball+0xdf0c0d14>
     50c:	1c000000 	stcne	0, cr0, [r0], {-0}
     510:	00087f0e 	andeq	r7, r8, lr, lsl #30
     514:	65c50500 	strbvs	r0, [r5, #1280]	; 0x500
     518:	20000005 	andcs	r0, r0, r5
     51c:	0007b90e 	andeq	fp, r7, lr, lsl #18
     520:	8fc70500 	svchi	0x00c70500
     524:	24000005 	strcs	r0, [r0], #-5
     528:	0005080e 	andeq	r0, r5, lr, lsl #16
     52c:	b3ca0500 	biclt	r0, sl, #0, 10
     530:	28000005 	stmdacs	r0, {r0, r2}
     534:	0005ec0e 	andeq	lr, r5, lr, lsl #24
     538:	cdcb0500 	cfstr64gt	mvdx0, [fp]
     53c:	2c000005 	stccs	0, cr0, [r0], {5}
     540:	62755f10 	rsbsvs	r5, r5, #16, 30	; 0x40
     544:	a3ce0500 	bicge	r0, lr, #0, 10
     548:	30000002 	andcc	r0, r0, r2
     54c:	70755f10 	rsbsvc	r5, r5, r0, lsl pc
     550:	c8cf0500 	stmiagt	pc, {r8, sl}^	; <UNPREDICTABLE>
     554:	38000002 	stmdacc	r0, {r1}
     558:	72755f10 	rsbsvc	r5, r5, #16, 30	; 0x40
     55c:	5dd00500 	cfldr64pl	mvdx0, [r0]
     560:	3c000000 	stccc	0, cr0, [r0], {-0}
     564:	00024e0e 	andeq	r4, r2, lr, lsl #28
     568:	d3d30500 	bicsle	r0, r3, #0, 10
     56c:	40000005 	andmi	r0, r0, r5
     570:	0005c40e 	andeq	ip, r5, lr, lsl #8
     574:	e3d40500 	bics	r0, r4, #0, 10
     578:	43000005 	movwmi	r0, #5
     57c:	626c5f10 	rsbvs	r5, ip, #16, 30	; 0x40
     580:	a3d70500 	bicsge	r0, r7, #0, 10
     584:	44000002 	strmi	r0, [r0], #-2
     588:	0002a70e 	andeq	sl, r2, lr, lsl #14
     58c:	5dda0500 	cfldr64pl	mvdx0, [sl]
     590:	4c000000 	stcmi	0, cr0, [r0], {-0}
     594:	0002b80e 	andeq	fp, r2, lr, lsl #16
     598:	83db0500 	bicshi	r0, fp, #0, 10
     59c:	50000000 	andpl	r0, r0, r0
     5a0:	0007ac0e 	andeq	sl, r7, lr, lsl #24
     5a4:	16de0500 	ldrbne	r0, [lr], r0, lsl #10
     5a8:	54000004 	strpl	r0, [r0], #-4
     5ac:	0004fa0e 	andeq	pc, r4, lr, lsl #20
     5b0:	00e20500 	rsceq	r0, r2, r0, lsl #10
     5b4:	58000001 	stmdapl	r0, {r0}
     5b8:	0004550e 	andeq	r5, r4, lr, lsl #10
     5bc:	f5e40500 			; <UNDEFINED> instruction: 0xf5e40500
     5c0:	5c000000 	stcpl	0, cr0, [r0], {-0}
     5c4:	0003a10e 	andeq	sl, r3, lr, lsl #2
     5c8:	5de50500 	cfstr64pl	mvdx0, [r5]
     5cc:	64000000 	strvs	r0, [r0], #-0
     5d0:	005d1400 	subseq	r1, sp, r0, lsl #8
     5d4:	04160000 	ldreq	r0, [r6], #-0
     5d8:	16150000 	ldrne	r0, [r5], -r0
     5dc:	15000004 	strne	r0, [r0, #-4]
     5e0:	0000006b 	andeq	r0, r0, fp, rrx
     5e4:	00055315 	andeq	r5, r5, r5, lsl r3
     5e8:	005d1500 	subseq	r1, sp, r0, lsl #10
     5ec:	06000000 	streq	r0, [r0], -r0
     5f0:	00042104 	andeq	r2, r4, r4, lsl #2
     5f4:	04161600 	ldreq	r1, [r6], #-1536	; 0xfffffa00
     5f8:	bd170000 	ldclt	0, cr0, [r7, #-0]
     5fc:	28000005 	stmdacs	r0, {r0, r2}
     600:	02390504 	eorseq	r0, r9, #4, 10	; 0x1000000
     604:	00000553 	andeq	r0, r0, r3, asr r5
     608:	00041318 	andeq	r1, r4, r8, lsl r3
     60c:	023b0500 	eorseq	r0, fp, #0, 10
     610:	0000005d 	andeq	r0, r0, sp, asr r0
     614:	02a01800 	adceq	r1, r0, #0, 16
     618:	40050000 	andmi	r0, r5, r0
     61c:	00063a02 	andeq	r3, r6, r2, lsl #20
     620:	3d180400 	cfldrscc	mvf0, [r8, #-0]
     624:	05000003 	streq	r0, [r0, #-3]
     628:	063a0240 	ldrteq	r0, [sl], -r0, asr #4
     62c:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
     630:	00000308 	andeq	r0, r0, r8, lsl #6
     634:	3a024005 	bcc	90650 <startup-0x1ff6f9b0>
     638:	0c000006 	stceq	0, cr0, [r0], {6}
     63c:	00047618 	andeq	r7, r4, r8, lsl r6
     640:	02420500 	subeq	r0, r2, #0, 10
     644:	0000005d 	andeq	r0, r0, sp, asr r0
     648:	01bd1810 			; <UNDEFINED> instruction: 0x01bd1810
     64c:	43050000 	movwmi	r0, #20480	; 0x5000
     650:	00081c02 	andeq	r1, r8, r2, lsl #24
     654:	92181400 	andsls	r1, r8, #0, 8
     658:	05000004 	streq	r0, [r0, #-4]
     65c:	005d0246 	subseq	r0, sp, r6, asr #4
     660:	18300000 	ldmdane	r0!, {}	; <UNPREDICTABLE>
     664:	00000480 	andeq	r0, r0, r0, lsl #9
     668:	31024705 	tstcc	r2, r5, lsl #14
     66c:	34000008 	strcc	r0, [r0], #-8
     670:	0003db18 	andeq	sp, r3, r8, lsl fp
     674:	02490500 	subeq	r0, r9, #0, 10
     678:	0000005d 	andeq	r0, r0, sp, asr r0
     67c:	04881838 	streq	r1, [r8], #2104	; 0x838
     680:	4b050000 	blmi	140688 <startup-0x1febf978>
     684:	00084202 	andeq	r4, r8, r2, lsl #4
     688:	84183c00 	ldrhi	r3, [r8], #-3072	; 0xfffff400
     68c:	05000003 	streq	r0, [r0, #-3]
     690:	0169024e 	cmneq	r9, lr, asr #4
     694:	18400000 	stmdane	r0, {}^	; <UNPREDICTABLE>
     698:	00000327 	andeq	r0, r0, r7, lsr #6
     69c:	5d024f05 	stcpl	15, cr4, [r2, #-20]	; 0xffffffec
     6a0:	44000000 	strmi	r0, [r0], #-0
     6a4:	00060b18 	andeq	r0, r6, r8, lsl fp
     6a8:	02500500 	subseq	r0, r0, #0, 10
     6ac:	00000169 	andeq	r0, r0, r9, ror #2
     6b0:	03ed1848 	mvneq	r1, #72, 16	; 0x480000
     6b4:	51050000 	mrspl	r0, (UNDEF: 5)
     6b8:	00084802 	andeq	r4, r8, r2, lsl #16
     6bc:	45184c00 	ldrmi	r4, [r8, #-3072]	; 0xfffff400
     6c0:	05000003 	streq	r0, [r0, #-3]
     6c4:	005d0254 	subseq	r0, sp, r4, asr r2
     6c8:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
     6cc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
     6d0:	53025505 	movwpl	r5, #9477	; 0x2505
     6d4:	54000005 	strpl	r0, [r0], #-5
     6d8:	00040c18 	andeq	r0, r4, r8, lsl ip
     6dc:	02780500 	rsbseq	r0, r8, #0, 10
     6e0:	000007fa 	strdeq	r0, [r0], -sl
     6e4:	03d31958 	bicseq	r1, r3, #88, 18	; 0x160000
     6e8:	7c050000 	stcvc	0, cr0, [r5], {-0}
     6ec:	00028602 	andeq	r8, r2, r2, lsl #12
     6f0:	19014800 	stmdbne	r1, {fp, lr}
     6f4:	00000362 	andeq	r0, r0, r2, ror #6
     6f8:	48027d05 	stmdami	r2, {r0, r2, r8, sl, fp, ip, sp, lr}
     6fc:	4c000002 	stcmi	0, cr0, [r0], {2}
     700:	05b31901 	ldreq	r1, [r3, #2305]!	; 0x901
     704:	81050000 	mrshi	r0, (UNDEF: 5)
     708:	00085902 	andeq	r5, r8, r2, lsl #18
     70c:	1902dc00 	stmdbne	r2, {sl, fp, ip, lr, pc}
     710:	00000289 	andeq	r0, r0, r9, lsl #5
     714:	ff028605 			; <UNDEFINED> instruction: 0xff028605
     718:	e0000005 	and	r0, r0, r5
     71c:	026e1902 	rsbeq	r1, lr, #32768	; 0x8000
     720:	88050000 	stmdahi	r5, {}	; <UNPREDICTABLE>
     724:	00086502 	andeq	r6, r8, r2, lsl #10
     728:	0002ec00 	andeq	lr, r2, r0, lsl #24
     72c:	05590406 	ldrbeq	r0, [r9, #-1030]	; 0xfffffbfa
     730:	01020000 	mrseq	r0, (UNDEF: 2)
     734:	00006c08 	andeq	r6, r0, r8, lsl #24
     738:	05591600 	ldrbeq	r1, [r9, #-1536]	; 0xfffffa00
     73c:	04060000 	streq	r0, [r6], #-0
     740:	000003f8 	strdeq	r0, [r0], -r8
     744:	00005d14 	andeq	r5, r0, r4, lsl sp
     748:	00058900 	andeq	r8, r5, r0, lsl #18
     74c:	04161500 	ldreq	r1, [r6], #-1280	; 0xfffffb00
     750:	6b150000 	blvs	540758 <startup-0x1fabf8a8>
     754:	15000000 	strne	r0, [r0, #-0]
     758:	00000589 	andeq	r0, r0, r9, lsl #11
     75c:	00005d15 	andeq	r5, r0, r5, lsl sp
     760:	04060000 	streq	r0, [r6], #-0
     764:	00000560 	andeq	r0, r0, r0, ror #10
     768:	056b0406 	strbeq	r0, [fp, #-1030]!	; 0xfffffbfa
     76c:	8e140000 	cdphi	0, 1, cr0, cr4, cr0, {0}
     770:	b3000000 	movwlt	r0, #0
     774:	15000005 	strne	r0, [r0, #-5]
     778:	00000416 	andeq	r0, r0, r6, lsl r4
     77c:	00006b15 	andeq	r6, r0, r5, lsl fp
     780:	008e1500 	addeq	r1, lr, r0, lsl #10
     784:	5d150000 	ldcpl	0, cr0, [r5, #-0]
     788:	00000000 	andeq	r0, r0, r0
     78c:	05950406 	ldreq	r0, [r5, #1030]	; 0x406
     790:	5d140000 	ldcpl	0, cr0, [r4, #-0]
     794:	cd000000 	stcgt	0, cr0, [r0, #-0]
     798:	15000005 	strne	r0, [r0, #-5]
     79c:	00000416 	andeq	r0, r0, r6, lsl r4
     7a0:	00006b15 	andeq	r6, r0, r5, lsl fp
     7a4:	04060000 	streq	r0, [r6], #-0
     7a8:	000005b9 			; <UNDEFINED> instruction: 0x000005b9
     7ac:	00002c0b 	andeq	r2, r0, fp, lsl #24
     7b0:	0005e300 	andeq	lr, r5, r0, lsl #6
     7b4:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     7b8:	00020000 	andeq	r0, r2, r0
     7bc:	00002c0b 	andeq	r2, r0, fp, lsl #24
     7c0:	0005f300 	andeq	pc, r5, r0, lsl #6
     7c4:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     7c8:	00000000 	andeq	r0, r0, r0
     7cc:	00043b08 	andeq	r3, r4, r8, lsl #22
     7d0:	011f0500 	tsteq	pc, r0, lsl #10
     7d4:	000002ce 	andeq	r0, r0, lr, asr #5
     7d8:	0005901a 	andeq	r9, r5, sl, lsl r0
     7dc:	23050c00 	movwcs	r0, #23552	; 0x5c00
     7e0:	00063401 	andeq	r3, r6, r1, lsl #8
     7e4:	04631800 	strbteq	r1, [r3], #-2048	; 0xfffff800
     7e8:	25050000 	strcs	r0, [r5, #-0]
     7ec:	00063401 	andeq	r3, r6, r1, lsl #8
     7f0:	5b180000 	blpl	6007f8 <startup-0x1f9ff808>
     7f4:	05000003 	streq	r0, [r0, #-3]
     7f8:	005d0126 	subseq	r0, sp, r6, lsr #2
     7fc:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     800:	00000435 	andeq	r0, r0, r5, lsr r4
     804:	3a012705 	bcc	4a420 <startup-0x1ffb5be0>
     808:	08000006 	stmdaeq	r0, {r1, r2}
     80c:	ff040600 			; <UNDEFINED> instruction: 0xff040600
     810:	06000005 	streq	r0, [r0], -r5
     814:	0005f304 	andeq	pc, r5, r4, lsl #6
     818:	01ad1a00 			; <UNDEFINED> instruction: 0x01ad1a00
     81c:	050e0000 	streq	r0, [lr, #-0]
     820:	0675013f 			; <UNDEFINED> instruction: 0x0675013f
     824:	eb180000 	bl	60082c <startup-0x1f9ff7d4>
     828:	05000004 	streq	r0, [r0, #-4]
     82c:	06750140 	ldrbteq	r0, [r5], -r0, asr #2
     830:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     834:	0000052b 	andeq	r0, r0, fp, lsr #10
     838:	75014105 	strvc	r4, [r1, #-261]	; 0xfffffefb
     83c:	06000006 	streq	r0, [r0], -r6
     840:	00054718 	andeq	r4, r5, r8, lsl r7
     844:	01420500 	cmpeq	r2, r0, lsl #10
     848:	0000003a 	andeq	r0, r0, sl, lsr r0
     84c:	3a0b000c 	bcc	2c0884 <startup-0x1fd3f77c>
     850:	85000000 	strhi	r0, [r0, #-0]
     854:	0c000006 	stceq	0, cr0, [r0], {6}
     858:	00000064 	andeq	r0, r0, r4, rrx
     85c:	d01b0002 	andsle	r0, fp, r2
     860:	86025905 	strhi	r5, [r2], -r5, lsl #18
     864:	18000007 	stmdane	r0, {r0, r1, r2}
     868:	00000574 	andeq	r0, r0, r4, ror r5
     86c:	64025b05 	strvs	r5, [r2], #-2821	; 0xfffff4fb
     870:	00000000 	andeq	r0, r0, r0
     874:	00053118 	andeq	r3, r5, r8, lsl r1
     878:	025c0500 	subseq	r0, ip, #0, 10
     87c:	00000553 	andeq	r0, r0, r3, asr r5
     880:	03771804 	cmneq	r7, #4, 16	; 0x40000
     884:	5d050000 	stcpl	0, cr0, [r5, #-0]
     888:	00078602 	andeq	r8, r7, r2, lsl #12
     88c:	dd180800 	ldcle	8, cr0, [r8, #-0]
     890:	05000005 	streq	r0, [r0, #-5]
     894:	017f025e 	cmneq	pc, lr, asr r2	; <UNPREDICTABLE>
     898:	18240000 	stmdane	r4!, {}	; <UNPREDICTABLE>
     89c:	00000318 	andeq	r0, r0, r8, lsl r3
     8a0:	5d025f05 	stcpl	15, cr5, [r2, #-20]	; 0xffffffec
     8a4:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
     8a8:	00045e18 	andeq	r5, r4, r8, lsl lr
     8ac:	02600500 	rsbeq	r0, r0, #0, 10
     8b0:	00000056 	andeq	r0, r0, r6, asr r0
     8b4:	05f31850 	ldrbeq	r1, [r3, #2128]!	; 0x850
     8b8:	61050000 	mrsvs	r0, (UNDEF: 5)
     8bc:	00064002 	andeq	r4, r6, r2
     8c0:	69185800 	ldmdbvs	r8, {fp, ip, lr}
     8c4:	05000004 	streq	r0, [r0, #-4]
     8c8:	00f50262 	rscseq	r0, r5, r2, ror #4
     8cc:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
     8d0:	000005fd 	strdeq	r0, [r0], -sp
     8d4:	f5026305 			; <UNDEFINED> instruction: 0xf5026305
     8d8:	70000000 	andvc	r0, r0, r0
     8dc:	0003fe18 	andeq	pc, r3, r8, lsl lr	; <UNPREDICTABLE>
     8e0:	02640500 	rsbeq	r0, r4, #0, 10
     8e4:	000000f5 	strdeq	r0, [r0], -r5
     8e8:	059f1878 	ldreq	r1, [pc, #2168]	; 1168 <startup-0x1fffee98>
     8ec:	65050000 	strvs	r0, [r5, #-0]
     8f0:	00079602 	andeq	r9, r7, r2, lsl #12
     8f4:	6b188000 	blvs	6208fc <startup-0x1f9df704>
     8f8:	05000003 	streq	r0, [r0, #-3]
     8fc:	07a60266 	streq	r0, [r6, r6, ror #4]!
     900:	18880000 	stmne	r8, {}	; <UNPREDICTABLE>
     904:	00000554 	andeq	r0, r0, r4, asr r5
     908:	5d026705 	stcpl	7, cr6, [r2, #-20]	; 0xffffffec
     90c:	a0000000 	andge	r0, r0, r0
     910:	0002d118 	andeq	sp, r2, r8, lsl r1
     914:	02680500 	rsbeq	r0, r8, #0, 10
     918:	000000f5 	strdeq	r0, [r0], -r5
     91c:	022018a4 	eoreq	r1, r0, #164, 16	; 0xa40000
     920:	69050000 	stmdbvs	r5, {}	; <UNPREDICTABLE>
     924:	0000f502 	andeq	pc, r0, r2, lsl #10
     928:	c018ac00 	andsgt	sl, r8, r0, lsl #24
     92c:	05000002 	streq	r0, [r0, #-2]
     930:	00f5026a 	rscseq	r0, r5, sl, ror #4
     934:	18b40000 	ldmne	r4!, {}	; <UNPREDICTABLE>
     938:	000001cf 	andeq	r0, r0, pc, asr #3
     93c:	f5026b05 			; <UNDEFINED> instruction: 0xf5026b05
     940:	bc000000 	stclt	0, cr0, [r0], {-0}
     944:	0001de18 	andeq	sp, r1, r8, lsl lr
     948:	026c0500 	rsbeq	r0, ip, #0, 10
     94c:	000000f5 	strdeq	r0, [r0], -r5
     950:	041118c4 	ldreq	r1, [r1], #-2244	; 0xfffff73c
     954:	6d050000 	stcvs	0, cr0, [r5, #-0]
     958:	00005d02 	andeq	r5, r0, r2, lsl #26
     95c:	0b00cc00 	bleq	33964 <startup-0x1ffcc69c>
     960:	00000559 	andeq	r0, r0, r9, asr r5
     964:	00000796 	muleq	r0, r6, r7
     968:	0000640c 	andeq	r6, r0, ip, lsl #8
     96c:	0b001900 	bleq	6d74 <startup-0x1fff928c>
     970:	00000559 	andeq	r0, r0, r9, asr r5
     974:	000007a6 	andeq	r0, r0, r6, lsr #15
     978:	0000640c 	andeq	r6, r0, ip, lsl #8
     97c:	0b000700 	bleq	2584 <startup-0x1fffda7c>
     980:	00000559 	andeq	r0, r0, r9, asr r5
     984:	000007b6 			; <UNDEFINED> instruction: 0x000007b6
     988:	0000640c 	andeq	r6, r0, ip, lsl #8
     98c:	1b001700 	blne	6594 <startup-0x1fff9a6c>
     990:	027205f0 	rsbseq	r0, r2, #240, 10	; 0x3c000000
     994:	000007da 	ldrdeq	r0, [r0], -sl
     998:	0003be18 	andeq	fp, r3, r8, lsl lr
     99c:	02750500 	rsbseq	r0, r5, #0, 10
     9a0:	000007da 	ldrdeq	r0, [r0], -sl
     9a4:	05961800 	ldreq	r1, [r6, #2048]	; 0x800
     9a8:	76050000 	strvc	r0, [r5], -r0
     9ac:	0007ea02 	andeq	lr, r7, r2, lsl #20
     9b0:	0b007800 	bleq	1e9b8 <startup-0x1ffe1648>
     9b4:	000002c8 	andeq	r0, r0, r8, asr #5
     9b8:	000007ea 	andeq	r0, r0, sl, ror #15
     9bc:	0000640c 	andeq	r6, r0, ip, lsl #8
     9c0:	0b001d00 	bleq	7dc8 <startup-0x1fff8238>
     9c4:	00000064 	andeq	r0, r0, r4, rrx
     9c8:	000007fa 	strdeq	r0, [r0], -sl
     9cc:	0000640c 	andeq	r6, r0, ip, lsl #8
     9d0:	1c001d00 	stcne	13, cr1, [r0], {-0}
     9d4:	025705f0 	subseq	r0, r7, #240, 10	; 0x3c000000
     9d8:	0000081c 	andeq	r0, r0, ip, lsl r8
     9dc:	0005bd1d 	andeq	fp, r5, sp, lsl sp
     9e0:	026e0500 	rsbeq	r0, lr, #0, 10
     9e4:	00000685 	andeq	r0, r0, r5, lsl #13
     9e8:	0005ca1d 	andeq	ip, r5, sp, lsl sl
     9ec:	02770500 	rsbseq	r0, r7, #0, 10
     9f0:	000007b6 			; <UNDEFINED> instruction: 0x000007b6
     9f4:	05590b00 	ldrbeq	r0, [r9, #-2816]	; 0xfffff500
     9f8:	082c0000 	stmdaeq	ip!, {}	; <UNPREDICTABLE>
     9fc:	640c0000 	strvs	r0, [ip], #-0
     a00:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     a04:	02150700 	andseq	r0, r5, #0, 14
     a08:	04060000 	streq	r0, [r6], #-0
     a0c:	0000082c 	andeq	r0, r0, ip, lsr #16
     a10:	0008421e 	andeq	r4, r8, lr, lsl r2
     a14:	04161500 	ldreq	r1, [r6], #-1280	; 0xfffffb00
     a18:	06000000 	streq	r0, [r0], -r0
     a1c:	00083704 	andeq	r3, r8, r4, lsl #14
     a20:	69040600 	stmdbvs	r4, {r9, sl}
     a24:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
     a28:	00000859 	andeq	r0, r0, r9, asr r8
     a2c:	00005d15 	andeq	r5, r0, r5, lsl sp
     a30:	04060000 	streq	r0, [r6], #-0
     a34:	0000085f 	andeq	r0, r0, pc, asr r8
     a38:	084e0406 	stmdaeq	lr, {r1, r2, sl}^
     a3c:	f30b0000 	vhadd.u8	d0, d11, d0
     a40:	75000005 	strvc	r0, [r0, #-5]
     a44:	0c000008 	stceq	0, cr0, [r0], {8}
     a48:	00000064 	andeq	r0, r0, r4, rrx
     a4c:	681f0002 	ldmdavs	pc, {r1}	; <UNPREDICTABLE>
     a50:	05000005 	streq	r0, [r0, #-5]
     a54:	04160307 	ldreq	r0, [r6], #-775	; 0xfffffcf9
     a58:	611f0000 	tstvs	pc, r0
     a5c:	05000005 	streq	r0, [r0, #-5]
     a60:	041c0308 	ldreq	r0, [ip], #-776	; 0xfffffcf8
     a64:	180d0000 	stmdane	sp, {}	; <UNPREDICTABLE>
     a68:	091a2106 	ldmdbeq	sl, {r1, r2, r8, sp}
     a6c:	f90e0000 			; <UNDEFINED> instruction: 0xf90e0000
     a70:	06000002 	streq	r0, [r0], -r2
     a74:	00006422 	andeq	r6, r0, r2, lsr #8
     a78:	c80e0000 	stmdagt	lr, {}	; <UNPREDICTABLE>
     a7c:	06000001 	streq	r0, [r0], -r1
     a80:	00003a23 	andeq	r3, r0, r3, lsr #20
     a84:	b30e0400 	movwlt	r0, #58368	; 0xe400
     a88:	06000003 	streq	r0, [r0], -r3
     a8c:	00003a24 	andeq	r3, r0, r4, lsr #20
     a90:	530e0600 	movwpl	r0, #58880	; 0xe600
     a94:	06000003 	streq	r0, [r0], -r3
     a98:	00006425 	andeq	r6, r0, r5, lsr #8
     a9c:	0f0e0800 	svceq	0x000e0800
     aa0:	06000002 	streq	r0, [r0], -r2
     aa4:	00006426 	andeq	r6, r0, r6, lsr #8
     aa8:	e70e0c00 	str	r0, [lr, -r0, lsl #24]
     aac:	06000002 	streq	r0, [r0], -r2
     ab0:	00002c27 	andeq	r2, r0, r7, lsr #24
     ab4:	b50e1000 	strlt	r1, [lr, #-0]
     ab8:	06000001 	streq	r0, [r0], -r1
     abc:	00002c28 	andeq	r2, r0, r8, lsr #24
     ac0:	100e1100 	andne	r1, lr, r0, lsl #2
     ac4:	06000006 	streq	r0, [r0], -r6
     ac8:	00003a29 	andeq	r3, r0, r9, lsr #20
     acc:	f70e1200 			; <UNDEFINED> instruction: 0xf70e1200
     ad0:	06000003 	streq	r0, [r0], -r3
     ad4:	00002c2a 	andeq	r2, r0, sl, lsr #24
     ad8:	2f0e1400 	svccs	0x000e1400
     adc:	06000002 	streq	r0, [r0], -r2
     ae0:	00002c2b 	andeq	r2, r0, fp, lsr #24
     ae4:	1f0e1500 	svcne	0x000e1500
     ae8:	06000005 	streq	r0, [r0], -r5
     aec:	00003a2c 	andeq	r3, r0, ip, lsr #20
     af0:	05001600 	streq	r1, [r0, #-1536]	; 0xfffffa00
     af4:	000005f8 	strdeq	r0, [r0], -r8
     af8:	088d2d06 	stmeq	sp, {r1, r2, r8, sl, fp, sp}
     afc:	c5200000 	strgt	r0, [r0, #-0]!
     b00:	01000003 	tsteq	r0, r3
     b04:	00002c23 	andeq	r2, r0, r3, lsr #24
     b08:	00014800 	andeq	r4, r1, r0, lsl #16
     b0c:	00008820 	andeq	r8, r0, r0, lsr #16
     b10:	699c0100 	ldmibvs	ip, {r8}
     b14:	21000009 	tstcs	r0, r9
     b18:	00776f72 	rsbseq	r6, r7, r2, ror pc
     b1c:	002c2501 	eoreq	r2, ip, r1, lsl #10
     b20:	91020000 	mrsls	r0, (UNDEF: 2)
     b24:	6f63216f 	svcvs	0x0063216f
     b28:	2501006c 	strcs	r0, [r1, #-108]	; 0xffffff94
     b2c:	0000002c 	andeq	r0, r0, ip, lsr #32
     b30:	216e9102 	cmncs	lr, r2, lsl #2
     b34:	0079656b 	rsbseq	r6, r9, fp, ror #10
     b38:	09692601 	stmdbeq	r9!, {r0, r9, sl, sp}^
     b3c:	91020000 	mrsls	r0, (UNDEF: 2)
     b40:	2c0b005c 	stccs	0, cr0, [fp], {92}	; 0x5c
     b44:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
     b48:	0c000009 	stceq	0, cr0, [r0], {9}
     b4c:	00000064 	andeq	r0, r0, r4, rrx
     b50:	5420000f 	strtpl	r0, [r0], #-15
     b54:	01000002 	tsteq	r0, r2
     b58:	00002c11 	andeq	r2, r0, r1, lsl ip
     b5c:	0000b400 	andeq	fp, r0, r0, lsl #8
     b60:	00009420 	andeq	r9, r0, r0, lsr #8
     b64:	c99c0100 	ldmibgt	ip, {r8}
     b68:	21000009 	tstcs	r0, r9
     b6c:	13010063 	movwne	r0, #4195	; 0x1063
     b70:	0000002c 	andeq	r0, r0, ip, lsr #32
     b74:	216e9102 	cmncs	lr, r2, lsl #2
     b78:	00776f72 	rsbseq	r6, r7, r2, ror pc
     b7c:	002c1401 	eoreq	r1, ip, r1, lsl #8
     b80:	91020000 	mrsls	r0, (UNDEF: 2)
     b84:	6f63216f 	svcvs	0x0063216f
     b88:	1401006c 	strne	r0, [r1], #-108	; 0xffffff94
     b8c:	0000002c 	andeq	r0, r0, ip, lsr #32
     b90:	216d9102 	cmncs	sp, r2, lsl #2
     b94:	0079656b 	rsbseq	r6, r9, fp, ror #10
     b98:	09691501 	stmdbeq	r9!, {r0, r8, sl, ip}^
     b9c:	91020000 	mrsls	r0, (UNDEF: 2)
     ba0:	a922005c 	stmdbge	r2!, {r2, r3, r4, r6}
     ba4:	01000005 	tsteq	r0, r5
     ba8:	00005c04 	andeq	r5, r0, r4, lsl #24
     bac:	00005820 	andeq	r5, r0, r0, lsr #16
     bb0:	239c0100 	orrscs	r0, ip, #0, 2
     bb4:	00776f72 	rsbseq	r6, r7, r2, ror pc
     bb8:	002c0401 	eoreq	r0, ip, r1, lsl #8
     bbc:	91020000 	mrsls	r0, (UNDEF: 2)
     bc0:	13000077 	movwne	r0, #119	; 0x77
     bc4:	04000001 	streq	r0, [r0], #-1
     bc8:	00029700 	andeq	r9, r2, r0, lsl #14
     bcc:	f6010400 			; <UNDEFINED> instruction: 0xf6010400
     bd0:	0c000000 	stceq	0, cr0, [r0], {-0}
     bd4:	0000067c 	andeq	r0, r0, ip, ror r6
     bd8:	00000022 	andeq	r0, r0, r2, lsr #32
     bdc:	200001d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
     be0:	00000114 	andeq	r0, r0, r4, lsl r1
     be4:	00000220 	andeq	r0, r0, r0, lsr #4
     be8:	f9070402 			; <UNDEFINED> instruction: 0xf9070402
     bec:	02000001 	andeq	r0, r0, #1
     bf0:	008d0702 	addeq	r0, sp, r2, lsl #14
     bf4:	01020000 	mrseq	r0, (UNDEF: 2)
     bf8:	00006308 	andeq	r6, r0, r8, lsl #6
     bfc:	063e0300 	ldrteq	r0, [lr], -r0, lsl #6
     c00:	04020000 	streq	r0, [r2], #-0
     c04:	00000052 	andeq	r0, r0, r2, asr r0
     c08:	0b640305 	bleq	1901824 <startup-0x1e6fe7dc>
     c0c:	04042000 	streq	r2, [r4], #-0
     c10:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     c14:	004b0500 	subeq	r0, fp, r0, lsl #10
     c18:	6f030000 	svcvs	0x00030000
     c1c:	02000006 	andeq	r0, r0, #6
     c20:	00005205 	andeq	r5, r0, r5, lsl #4
     c24:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
     c28:	0320000b 			; <UNDEFINED> instruction: 0x0320000b
     c2c:	00000663 	andeq	r0, r0, r3, ror #12
     c30:	00520602 	subseq	r0, r2, r2, lsl #12
     c34:	03050000 	movweq	r0, #20480	; 0x5000
     c38:	20000b68 	andcs	r0, r0, r8, ror #22
     c3c:	0006bd06 	andeq	fp, r6, r6, lsl #26
     c40:	b4300100 	ldrtlt	r0, [r0], #-256	; 0xffffff00
     c44:	30200002 	eorcc	r0, r0, r2
     c48:	01000000 	mrseq	r0, (UNDEF: 0)
     c4c:	00009d9c 	muleq	r0, ip, sp
     c50:	04f30700 	ldrbteq	r0, [r3], #1792	; 0x700
     c54:	30010000 	andcc	r0, r1, r0
     c58:	00000025 	andeq	r0, r0, r5, lsr #32
     c5c:	00749102 	rsbseq	r9, r4, r2, lsl #2
     c60:	0006b408 	andeq	fp, r6, r8, lsl #8
     c64:	78270100 	stmdavc	r7!, {r8}
     c68:	3c200002 	stccc	0, cr0, [r0], #-8
     c6c:	01000000 	mrseq	r0, (UNDEF: 0)
     c70:	0626069c 			; <UNDEFINED> instruction: 0x0626069c
     c74:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
     c78:	20000252 	andcs	r0, r0, r2, asr r2
     c7c:	00000026 	andeq	r0, r0, r6, lsr #32
     c80:	00d19c01 	sbcseq	r9, r1, r1, lsl #24
     c84:	6d090000 	stcvs	0, cr0, [r9, #-0]
     c88:	1e010073 	mcrne	0, 0, r0, cr1, cr3, {3}
     c8c:	00000025 	andeq	r0, r0, r5, lsr #32
     c90:	00749102 	rsbseq	r9, r4, r2, lsl #2
     c94:	00063206 	andeq	r3, r6, r6, lsl #4
     c98:	26130100 	ldrcs	r0, [r3], -r0, lsl #2
     c9c:	2c200002 	stccs	0, cr0, [r0], #-8
     ca0:	01000000 	mrseq	r0, (UNDEF: 0)
     ca4:	0000f49c 	muleq	r0, ip, r4
     ca8:	73750900 	cmnvc	r5, #0, 18
     cac:	25130100 	ldrcs	r0, [r3, #-256]	; 0xffffff00
     cb0:	02000000 	andeq	r0, r0, #0
     cb4:	0a007491 	beq	1df00 <startup-0x1ffe2100>
     cb8:	00000657 	andeq	r0, r0, r7, asr r6
     cbc:	02140e01 	andseq	r0, r4, #1, 28
     cc0:	00122000 	andseq	r2, r2, r0
     cc4:	9c010000 	stcls	0, cr0, [r1], {-0}
     cc8:	00064b08 	andeq	r4, r6, r8, lsl #22
     ccc:	d0040100 	andle	r0, r4, r0, lsl #2
     cd0:	44200001 	strtmi	r0, [r0], #-1
     cd4:	01000000 	mrseq	r0, (UNDEF: 0)
     cd8:	0255009c 	subseq	r0, r5, #156	; 0x9c
     cdc:	00040000 	andeq	r0, r4, r0
     ce0:	00000341 	andeq	r0, r0, r1, asr #6
     ce4:	00f60104 	rscseq	r0, r6, r4, lsl #2
     ce8:	c90c0000 	stmdbgt	ip, {}	; <UNPREDICTABLE>
     cec:	22000006 	andcs	r0, r0, #6
     cf0:	e4000000 	str	r0, [r0], #-0
     cf4:	d8200002 	stmdale	r0!, {r1}
     cf8:	bf000000 	svclt	0x00000000
     cfc:	02000002 	andeq	r0, r0, #2
     d00:	01f90704 	mvnseq	r0, r4, lsl #14
     d04:	02020000 	andeq	r0, r2, #0
     d08:	00008d07 	andeq	r8, r0, r7, lsl #26
     d0c:	08010200 	stmdaeq	r1, {r9}
     d10:	00000063 	andeq	r0, r0, r3, rrx
     d14:	00005603 	andeq	r5, r0, r3, lsl #12
     d18:	04020200 	streq	r0, [r2], #-512	; 0xfffffe00
     d1c:	0000005b 	andeq	r0, r0, fp, asr r0
     d20:	02007804 	andeq	r7, r0, #4, 16	; 0x40000
     d24:	00003305 	andeq	r3, r0, r5, lsl #6
     d28:	79040000 	stmdbvc	r4, {}	; <UNPREDICTABLE>
     d2c:	33060200 	movwcc	r0, #25088	; 0x6200
     d30:	01000000 	mrseq	r0, (UNDEF: 0)
     d34:	005d0500 	subseq	r0, sp, r0, lsl #10
     d38:	07020000 	streq	r0, [r2, -r0]
     d3c:	0000003a 	andeq	r0, r0, sl, lsr r0
     d40:	0000ac03 	andeq	sl, r0, r3, lsl #24
     d44:	09023400 	stmdbeq	r2, {sl, ip, sp}
     d48:	000000a2 	andeq	r0, r0, r2, lsr #1
     d4c:	00017706 	andeq	r7, r1, r6, lsl #14
     d50:	a20a0200 	andge	r0, sl, #0, 4
     d54:	00000000 	andeq	r0, r0, r0
     d58:	0000a006 	andeq	sl, r0, r6
     d5c:	a20b0200 	andge	r0, fp, #0, 4
     d60:	04000000 	streq	r0, [r0], #-0
     d64:	0000a606 	andeq	sl, r0, r6, lsl #12
     d68:	a20c0200 	andge	r0, ip, #0, 4
     d6c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     d70:	00787004 	rsbseq	r7, r8, r4
     d74:	00a90d02 	adceq	r0, r9, r2, lsl #26
     d78:	000c0000 	andeq	r0, ip, r0
     d7c:	69050407 	stmdbvs	r5, {r0, r1, r2, sl}
     d80:	0800746e 	stmdaeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     d84:	0000005b 	andeq	r0, r0, fp, asr r0
     d88:	000000b9 	strheq	r0, [r0], -r9
     d8c:	00002509 	andeq	r2, r0, r9, lsl #10
     d90:	05001300 	streq	r1, [r0, #-768]	; 0xfffffd00
     d94:	00000000 	andeq	r0, r0, r0
     d98:	00c40e02 	sbceq	r0, r4, r2, lsl #28
     d9c:	040a0000 	streq	r0, [sl], #-0
     da0:	00000066 	andeq	r0, r0, r6, rrx
     da4:	00018b03 	andeq	r8, r1, r3, lsl #22
     da8:	10022400 	andne	r2, r2, r0, lsl #8
     dac:	00000143 	andeq	r0, r0, r3, asr #2
     db0:	6f656704 	svcvs	0x00656704
     db4:	b9110200 	ldmdblt	r1, {r9}
     db8:	00000000 	andeq	r0, r0, r0
     dbc:	00018106 	andeq	r8, r1, r6, lsl #2
     dc0:	a2120200 	andsge	r0, r2, #0, 4
     dc4:	04000000 	streq	r0, [r0], #-0
     dc8:	00018606 	andeq	r8, r1, r6, lsl #12
     dcc:	a2120200 	andsge	r0, r2, #0, 4
     dd0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     dd4:	00001806 	andeq	r1, r0, r6, lsl #16
     dd8:	a2130200 	andsge	r0, r3, #0, 4
     ddc:	0c000000 	stceq	0, cr0, [r0], {-0}
     de0:	00001d06 	andeq	r1, r0, r6, lsl #26
     de4:	a2130200 	andsge	r0, r3, #0, 4
     de8:	10000000 	andne	r0, r0, r0
     dec:	0000f106 	andeq	pc, r0, r6, lsl #2
     df0:	54140200 	ldrpl	r0, [r4], #-512	; 0xfffffe00
     df4:	14000001 	strne	r0, [r0], #-1
     df8:	0007d606 	andeq	sp, r7, r6, lsl #12
     dfc:	54150200 	ldrpl	r0, [r5], #-512	; 0xfffffe00
     e00:	18000001 	stmdane	r0, {r0}
     e04:	00005106 	andeq	r5, r0, r6, lsl #2
     e08:	54160200 	ldrpl	r0, [r6], #-512	; 0xfffffe00
     e0c:	1c000001 	stcne	0, cr0, [r0], {1}
     e10:	00007106 	andeq	r7, r0, r6, lsl #2
     e14:	6f170200 	svcvs	0x00170200
     e18:	20000001 	andcs	r0, r0, r1
     e1c:	014e0b00 	cmpeq	lr, r0, lsl #22
     e20:	4e0c0000 	cdpmi	0, 0, cr0, cr12, cr0, {0}
     e24:	00000001 	andeq	r0, r0, r1
     e28:	00ca040a 	sbceq	r0, sl, sl, lsl #8
     e2c:	040a0000 	streq	r0, [sl], #-0
     e30:	00000143 	andeq	r0, r0, r3, asr #2
     e34:	00016f0b 	andeq	r6, r1, fp, lsl #30
     e38:	014e0c00 	cmpeq	lr, r0, lsl #24
     e3c:	a20c0000 	andge	r0, ip, #0
     e40:	0c000000 	stceq	0, cr0, [r0], {-0}
     e44:	000000a2 	andeq	r0, r0, r2, lsr #1
     e48:	5a040a00 	bpl	103650 <startup-0x1fefc9b0>
     e4c:	05000001 	streq	r0, [r0, #-1]
     e50:	00000193 	muleq	r0, r3, r1
     e54:	014e1802 	cmpeq	lr, r2, lsl #16
     e58:	230d0000 	movwcs	r0, #53248	; 0xd000
     e5c:	01000007 	tsteq	r0, r7
     e60:	0003600e 	andeq	r6, r3, lr
     e64:	00005c20 	andeq	r5, r0, r0, lsr #24
     e68:	cf9c0100 	svcgt	0x009c0100
     e6c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     e70:	0e01006f 	cdpeq	0, 0, cr0, cr1, cr15, {3}
     e74:	00000175 	andeq	r0, r0, r5, ror r1
     e78:	0f6c9102 	svceq	0x006c9102
     e7c:	20000368 	andcs	r0, r0, r8, ror #6
     e80:	0000004c 	andeq	r0, r0, ip, asr #32
     e84:	01006910 	tsteq	r0, r0, lsl r9
     e88:	0000a20f 	andeq	sl, r0, pc, lsl #4
     e8c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     e90:	00036e0f 	andeq	r6, r3, pc, lsl #28
     e94:	00003420 	andeq	r3, r0, r0, lsr #8
     e98:	06c31100 	strbeq	r1, [r3], r0, lsl #2
     e9c:	0a010000 	beq	40ea4 <startup-0x1ffbf15c>
     ea0:	000000a2 	andeq	r0, r0, r2, lsr #1
     ea4:	00000012 	andeq	r0, r0, r2, lsl r0
     ea8:	07300d00 	ldreq	r0, [r0, -r0, lsl #26]!
     eac:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
     eb0:	20000304 	andcs	r0, r0, r4, lsl #6
     eb4:	0000005c 	andeq	r0, r0, ip, asr r0
     eb8:	021e9c01 	andseq	r9, lr, #256	; 0x100
     ebc:	6f0e0000 	svcvs	0x000e0000
     ec0:	75080100 	strvc	r0, [r8, #-256]	; 0xffffff00
     ec4:	02000001 	andeq	r0, r0, #1
     ec8:	0c0f6c91 	stceq	12, cr6, [pc], {145}	; 0x91
     ecc:	4c200003 	stcmi	0, cr0, [r0], #-12
     ed0:	10000000 	andne	r0, r0, r0
     ed4:	09010069 	stmdbeq	r1, {r0, r3, r5, r6}
     ed8:	000000a2 	andeq	r0, r0, r2, lsr #1
     edc:	0f749102 	svceq	0x00749102
     ee0:	20000312 	andcs	r0, r0, r2, lsl r3
     ee4:	00000034 	andeq	r0, r0, r4, lsr r0
     ee8:	0006c311 	andeq	ip, r6, r1, lsl r3
     eec:	a20a0100 	andge	r0, sl, #0, 2
     ef0:	12000000 	andne	r0, r0, #0
     ef4:	00000000 	andeq	r0, r0, r0
     ef8:	00071213 	andeq	r1, r7, r3, lsl r2
     efc:	e4030100 	str	r0, [r3], #-256	; 0xffffff00
     f00:	20200002 	eorcs	r0, r0, r2
     f04:	01000000 	mrseq	r0, (UNDEF: 0)
     f08:	006f0e9c 	mlseq	pc, ip, lr, r0	; <UNPREDICTABLE>
     f0c:	01750301 	cmneq	r5, r1, lsl #6
     f10:	91020000 	mrsls	r0, (UNDEF: 2)
     f14:	07041474 	smlsdxeq	r4, r4, r4, r1
     f18:	03010000 	movweq	r0, #4096	; 0x1000
     f1c:	000000a2 	andeq	r0, r0, r2, lsr #1
     f20:	14709102 	ldrbtne	r9, [r0], #-258	; 0xfffffefe
     f24:	0000070b 	andeq	r0, r0, fp, lsl #14
     f28:	00a20301 	adceq	r0, r2, r1, lsl #6
     f2c:	91020000 	mrsls	r0, (UNDEF: 2)
     f30:	9f00006c 	svcls	0x0000006c
     f34:	04000000 	streq	r0, [r0], #-0
     f38:	00044e00 	andeq	r4, r4, r0, lsl #28
     f3c:	f6010400 			; <UNDEFINED> instruction: 0xf6010400
     f40:	0c000000 	stceq	0, cr0, [r0], {-0}
     f44:	00000750 	andeq	r0, r0, r0, asr r7
     f48:	00000022 	andeq	r0, r0, r2, lsr #32
     f4c:	200003bc 			; <UNDEFINED> instruction: 0x200003bc
     f50:	0000003c 	andeq	r0, r0, ip, lsr r0
     f54:	00000361 	andeq	r0, r0, r1, ror #6
     f58:	f9070402 			; <UNDEFINED> instruction: 0xf9070402
     f5c:	02000001 	andeq	r0, r0, #1
     f60:	008d0702 	addeq	r0, sp, r2, lsl #14
     f64:	01020000 	mrseq	r0, (UNDEF: 2)
     f68:	00006308 	andeq	r6, r0, r8, lsl #6
     f6c:	063e0300 	ldrteq	r0, [lr], -r0, lsl #6
     f70:	04020000 	streq	r0, [r2], #-0
     f74:	00000052 	andeq	r0, r0, r2, asr r0
     f78:	0b640305 	bleq	1901b94 <startup-0x1e6fe46c>
     f7c:	04042000 	streq	r2, [r4], #-0
     f80:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     f84:	004b0500 	subeq	r0, fp, r0, lsl #10
     f88:	6f030000 	svcvs	0x00030000
     f8c:	02000006 	andeq	r0, r0, #6
     f90:	00005205 	andeq	r5, r0, r5, lsl #4
     f94:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
     f98:	0320000b 			; <UNDEFINED> instruction: 0x0320000b
     f9c:	00000663 	andeq	r0, r0, r3, ror #12
     fa0:	00520602 	subseq	r0, r2, r2, lsl #12
     fa4:	03050000 	movweq	r0, #20480	; 0x5000
     fa8:	20000b68 	andcs	r0, r0, r8, ror #22
     fac:	00073c06 	andeq	r3, r7, r6, lsl #24
     fb0:	bc040100 	stflts	f0, [r4], {-0}
     fb4:	3c200003 	stccc	0, cr0, [r0], #-12
     fb8:	01000000 	mrseq	r0, (UNDEF: 0)
     fbc:	03d8079c 	bicseq	r0, r8, #156, 14	; 0x2700000
     fc0:	00042000 	andeq	r2, r4, r0
     fc4:	b4080000 	strlt	r0, [r8], #-0
     fc8:	01000006 	tsteq	r0, r6
     fcc:	00004b0b 	andeq	r4, r0, fp, lsl #22
     fd0:	00000900 	andeq	r0, r0, r0, lsl #18
     fd4:	03660000 	cmneq	r6, #0
     fd8:	00040000 	andeq	r0, r4, r0
     fdc:	000004c7 	andeq	r0, r0, r7, asr #9
     fe0:	00f60104 	rscseq	r0, r6, r4, lsl #2
     fe4:	0c0c0000 	stceq	0, cr0, [ip], {-0}
     fe8:	22000008 	andcs	r0, r0, #8
     fec:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
     ff0:	74200003 	strtvc	r0, [r0], #-3
     ff4:	d7000005 	strle	r0, [r0, -r5]
     ff8:	02000003 	andeq	r0, r0, #3
     ffc:	b2210218 	eorlt	r0, r1, #24, 4	; 0x80000001
    1000:	03000000 	movweq	r0, #0
    1004:	000002f9 	strdeq	r0, [r0], -r9
    1008:	00b22202 	adcseq	r2, r2, r2, lsl #4
    100c:	03000000 	movweq	r0, #0
    1010:	000001c8 	andeq	r0, r0, r8, asr #3
    1014:	00b92302 	adcseq	r2, r9, r2, lsl #6
    1018:	03040000 	movweq	r0, #16384	; 0x4000
    101c:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    1020:	00b92402 	adcseq	r2, r9, r2, lsl #8
    1024:	03060000 	movweq	r0, #24576	; 0x6000
    1028:	00000353 	andeq	r0, r0, r3, asr r3
    102c:	00b22502 	adcseq	r2, r2, r2, lsl #10
    1030:	03080000 	movweq	r0, #32768	; 0x8000
    1034:	0000020f 	andeq	r0, r0, pc, lsl #4
    1038:	00b22602 	adcseq	r2, r2, r2, lsl #12
    103c:	030c0000 	movweq	r0, #49152	; 0xc000
    1040:	000002e7 	andeq	r0, r0, r7, ror #5
    1044:	00c02702 	sbceq	r2, r0, r2, lsl #14
    1048:	03100000 	tsteq	r0, #0
    104c:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
    1050:	00c02802 	sbceq	r2, r0, r2, lsl #16
    1054:	03110000 	tsteq	r1, #0
    1058:	00000610 	andeq	r0, r0, r0, lsl r6
    105c:	00b92902 	adcseq	r2, r9, r2, lsl #18
    1060:	03120000 	tsteq	r2, #0
    1064:	000003f7 	strdeq	r0, [r0], -r7
    1068:	00c02a02 	sbceq	r2, r0, r2, lsl #20
    106c:	03140000 	tsteq	r4, #0
    1070:	0000022f 	andeq	r0, r0, pc, lsr #4
    1074:	00c02b02 	sbceq	r2, r0, r2, lsl #22
    1078:	03150000 	tsteq	r5, #0
    107c:	0000051f 	andeq	r0, r0, pc, lsl r5
    1080:	00b92c02 	adcseq	r2, r9, r2, lsl #24
    1084:	00160000 	andseq	r0, r6, r0
    1088:	f9070404 			; <UNDEFINED> instruction: 0xf9070404
    108c:	04000001 	streq	r0, [r0], #-1
    1090:	008d0702 	addeq	r0, sp, r2, lsl #14
    1094:	01040000 	mrseq	r0, (UNDEF: 4)
    1098:	00006308 	andeq	r6, r0, r8, lsl #6
    109c:	05f80500 	ldrbeq	r0, [r8, #1280]!	; 0x500
    10a0:	2d020000 	stccs	0, cr0, [r2, #-0]
    10a4:	00000025 	andeq	r0, r0, r5, lsr #32
    10a8:	0006c306 	andeq	ip, r6, r6, lsl #6
    10ac:	9c9a0100 	ldflss	f0, [sl], {0}
    10b0:	d0200007 	eorle	r0, r0, r7
    10b4:	01000001 	tsteq	r0, r1
    10b8:	0001549c 	muleq	r1, ip, r4
    10bc:	00780700 	rsbseq	r0, r8, r0, lsl #14
    10c0:	00c09a01 	sbceq	r9, r0, r1, lsl #20
    10c4:	91020000 	mrsls	r0, (UNDEF: 2)
    10c8:	0079075f 	rsbseq	r0, r9, pc, asr r7
    10cc:	00c09a01 	sbceq	r9, r0, r1, lsl #20
    10d0:	91020000 	mrsls	r0, (UNDEF: 2)
    10d4:	6573075e 	ldrbvs	r0, [r3, #-1886]!	; 0xfffff8a2
    10d8:	9a010074 	bls	412b0 <startup-0x1ffbed50>
    10dc:	000000c0 	andeq	r0, r0, r0, asr #1
    10e0:	085d9102 	ldmdaeq	sp, {r1, r8, ip, pc}^
    10e4:	00000872 	andeq	r0, r0, r2, ror r8
    10e8:	00c09f01 	sbceq	r9, r0, r1, lsl #30
    10ec:	91020000 	mrsls	r0, (UNDEF: 2)
    10f0:	08040864 	stmdaeq	r4, {r2, r5, r6, fp}
    10f4:	a0010000 	andge	r0, r1, r0
    10f8:	000000c0 	andeq	r0, r0, r0, asr #1
    10fc:	08679102 	stmdaeq	r7!, {r1, r8, ip, pc}^
    1100:	0000078c 	andeq	r0, r0, ip, lsl #15
    1104:	00c0a101 	sbceq	sl, r0, r1, lsl #2
    1108:	91020000 	mrsls	r0, (UNDEF: 2)
    110c:	07970866 	ldreq	r0, [r7, r6, ror #16]
    1110:	a2010000 	andge	r0, r1, #0
    1114:	000000c0 	andeq	r0, r0, r0, asr #1
    1118:	08659102 	stmdaeq	r5!, {r1, r8, ip, pc}^
    111c:	000007c0 	andeq	r0, r0, r0, asr #15
    1120:	00c0cd01 	sbceq	ip, r0, r1, lsl #26
    1124:	91020000 	mrsls	r0, (UNDEF: 2)
    1128:	9b060063 	blls	1812bc <startup-0x1fe7ed44>
    112c:	01000008 	tsteq	r0, r8
    1130:	00074490 	muleq	r7, r0, r4
    1134:	00005820 	andeq	r5, r0, r0, lsr #16
    1138:	969c0100 	ldrls	r0, [ip], r0, lsl #2
    113c:	09000001 	stmdbeq	r0, {r0}
    1140:	2000074a 	andcs	r0, r0, sl, asr #14
    1144:	0000004a 	andeq	r0, r0, sl, asr #32
    1148:	0100690a 	tsteq	r0, sl, lsl #18
    114c:	00019691 	muleq	r1, r1, r6
    1150:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1154:	00076e09 	andeq	r6, r7, r9, lsl #28
    1158:	00001a20 	andeq	r1, r0, r0, lsr #20
    115c:	00770a00 	rsbseq	r0, r7, r0, lsl #20
    1160:	01969401 	orrseq	r9, r6, r1, lsl #8
    1164:	91020000 	mrsls	r0, (UNDEF: 2)
    1168:	00000070 	andeq	r0, r0, r0, ror r0
    116c:	6905040b 	stmdbvs	r5, {r0, r1, r3, sl}
    1170:	0600746e 	streq	r7, [r0], -lr, ror #8
    1174:	000007dc 	ldrdeq	r0, [r0], -ip
    1178:	06ee8201 	strbteq	r8, [lr], r1, lsl #4
    117c:	00562000 	subseq	r2, r6, r0
    1180:	9c010000 	stcls	0, cr0, [r1], {-0}
    1184:	000001d1 	ldrdeq	r0, [r0], -r1
    1188:	0006320c 	andeq	r3, r6, ip, lsl #4
    118c:	96840100 	strls	r0, [r4], r0, lsl #2
    1190:	c3000001 	movwgt	r0, #1
    1194:	0d000001 	stceq	0, cr0, [r0, #-4]
    1198:	06260e00 	strteq	r0, [r6], -r0, lsl #28
    119c:	86010000 	strhi	r0, [r1], -r0
    11a0:	00000196 	muleq	r0, r6, r1
    11a4:	0f00000d 	svceq	0x0000000d
    11a8:	000007a0 	andeq	r0, r0, r0, lsr #15
    11ac:	00c07d01 	sbceq	r7, r0, r1, lsl #26
    11b0:	06c40000 	strbeq	r0, [r4], r0
    11b4:	002a2000 	eoreq	r2, sl, r0
    11b8:	9c010000 	stcls	0, cr0, [r1], {-0}
    11bc:	000001f9 	strdeq	r0, [r0], -r9
    11c0:	00078c10 	andeq	r8, r7, r0, lsl ip
    11c4:	c07d0100 	rsbsgt	r0, sp, r0, lsl #2
    11c8:	02000000 	andeq	r0, r0, #0
    11cc:	06007791 			; <UNDEFINED> instruction: 0x06007791
    11d0:	0000084c 	andeq	r0, r0, ip, asr #16
    11d4:	067e7501 	ldrbteq	r7, [lr], -r1, lsl #10
    11d8:	00462000 	subeq	r2, r6, r0
    11dc:	9c010000 	stcls	0, cr0, [r1], {-0}
    11e0:	0000022b 	andeq	r0, r0, fp, lsr #4
    11e4:	0007ad10 	andeq	sl, r7, r0, lsl sp
    11e8:	c0750100 	rsbsgt	r0, r5, r0, lsl #2
    11ec:	02000000 	andeq	r0, r0, #0
    11f0:	8c107791 	ldchi	7, cr7, [r0], {145}	; 0x91
    11f4:	01000007 	tsteq	r0, r7
    11f8:	0000c075 	andeq	ip, r0, r5, ror r0
    11fc:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    1200:	08850600 	stmeq	r5, {r9, sl}
    1204:	6d010000 	stcvs	0, cr0, [r1, #-0]
    1208:	20000638 	andcs	r0, r0, r8, lsr r6
    120c:	00000046 	andeq	r0, r0, r6, asr #32
    1210:	025d9c01 	subseq	r9, sp, #256	; 0x100
    1214:	93100000 	tstls	r0, #0
    1218:	01000008 	tsteq	r0, r8
    121c:	0000c06d 	andeq	ip, r0, sp, rrx
    1220:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1224:	00078c10 	andeq	r8, r7, r0, lsl ip
    1228:	c06d0100 	rsbgt	r0, sp, r0, lsl #2
    122c:	02000000 	andeq	r0, r0, #0
    1230:	06007691 			; <UNDEFINED> instruction: 0x06007691
    1234:	000007b2 			; <UNDEFINED> instruction: 0x000007b2
    1238:	05b85701 	ldreq	r5, [r8, #1793]!	; 0x701
    123c:	00802000 	addeq	r2, r0, r0
    1240:	9c010000 	stcls	0, cr0, [r1], {-0}
    1244:	0000029c 	muleq	r0, ip, r2
    1248:	00050210 	andeq	r0, r5, r0, lsl r2
    124c:	c0570100 	subsgt	r0, r7, r0, lsl #2
    1250:	02000000 	andeq	r0, r0, #0
    1254:	8c107791 	ldchi	7, cr7, [r0], {145}	; 0x91
    1258:	01000007 	tsteq	r0, r7
    125c:	0000c057 	andeq	ip, r0, r7, asr r0
    1260:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    1264:	0006570e 	andeq	r5, r6, lr, lsl #14
    1268:	962f0100 	strtls	r0, [pc], -r0, lsl #2
    126c:	0d000001 	stceq	0, cr0, [r0, #-4]
    1270:	780f0000 	stmdavc	pc, {}	; <UNPREDICTABLE>
    1274:	01000008 	tsteq	r0, r8
    1278:	0000c03e 	andeq	ip, r0, lr, lsr r0
    127c:	00052400 	andeq	r2, r5, r0, lsl #8
    1280:	00009420 	andeq	r9, r0, r0, lsr #8
    1284:	e29c0100 	adds	r0, ip, #0, 2
    1288:	10000002 	andne	r0, r0, r2
    128c:	0000078c 	andeq	r0, r0, ip, lsl #15
    1290:	00c03e01 	sbceq	r3, r0, r1, lsl #28
    1294:	91020000 	mrsls	r0, (UNDEF: 2)
    1298:	06570c6f 	ldrbeq	r0, [r7], -pc, ror #24
    129c:	2f010000 	svccs	0x00010000
    12a0:	00000196 	muleq	r0, r6, r1
    12a4:	000002d4 	ldrdeq	r0, [r0], -r4
    12a8:	520a000d 	andpl	r0, sl, #13
    12ac:	48010056 	stmdami	r1, {r1, r2, r4, r6}
    12b0:	000000c0 	andeq	r0, r0, r0, asr #1
    12b4:	00779102 	rsbseq	r9, r7, r2, lsl #2
    12b8:	00085f06 	andeq	r5, r8, r6, lsl #30
    12bc:	c4290100 	strtgt	r0, [r9], #-256	; 0xffffff00
    12c0:	60200004 	eorvs	r0, r0, r4
    12c4:	01000000 	mrseq	r0, (UNDEF: 0)
    12c8:	0003059c 	muleq	r3, ip, r5
    12cc:	06570e00 	ldrbeq	r0, [r7], -r0, lsl #28
    12d0:	2f010000 	svccs	0x00010000
    12d4:	00000196 	muleq	r0, r6, r1
    12d8:	0600000d 	streq	r0, [r0], -sp
    12dc:	00000785 	andeq	r0, r0, r5, lsl #15
    12e0:	04640f01 	strbteq	r0, [r4], #-3841	; 0xfffff0ff
    12e4:	00602000 	rsbeq	r2, r0, r0
    12e8:	9c010000 	stcls	0, cr0, [r1], {-0}
    12ec:	00000329 	andeq	r0, r0, r9, lsr #6
    12f0:	00078c10 	andeq	r8, r7, r0, lsl ip
    12f4:	c00f0100 	andgt	r0, pc, r0, lsl #2
    12f8:	02000000 	andeq	r0, r0, #0
    12fc:	11007791 			; <UNDEFINED> instruction: 0x11007791
    1300:	000007c5 	andeq	r0, r0, r5, asr #15
    1304:	04300901 	ldrteq	r0, [r0], #-2305	; 0xfffff6ff
    1308:	00342000 	eorseq	r2, r4, r0
    130c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1310:	0000034b 	andeq	r0, r0, fp, asr #6
    1314:	01007807 	tsteq	r0, r7, lsl #16
    1318:	0000c009 	andeq	ip, r0, r9
    131c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1320:	07ef1200 	strbeq	r1, [pc, r0, lsl #4]!
    1324:	03010000 	movweq	r0, #4096	; 0x1000
    1328:	200003f8 	strdcs	r0, [r0], -r8
    132c:	00000038 	andeq	r0, r0, r8, lsr r0
    1330:	78079c01 	stmdavc	r7, {r0, sl, fp, ip, pc}
    1334:	c0030100 	andgt	r0, r3, r0, lsl #2
    1338:	02000000 	andeq	r0, r0, #0
    133c:	00007791 	muleq	r0, r1, r7
    1340:	000001d5 	ldrdeq	r0, [r0], -r5
    1344:	05f00004 	ldrbeq	r0, [r0, #4]!
    1348:	01040000 	mrseq	r0, (UNDEF: 4)
    134c:	000000f6 	strdeq	r0, [r0], -r6
    1350:	0008cf0c 	andeq	ip, r8, ip, lsl #30
    1354:	00002200 	andeq	r2, r0, r0, lsl #4
    1358:	00096c00 	andeq	r6, r9, r0, lsl #24
    135c:	0000e820 	andeq	lr, r0, r0, lsr #16
    1360:	00051a00 	andeq	r1, r5, r0, lsl #20
    1364:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1368:	000001f9 	strdeq	r0, [r0], -r9
    136c:	8d070202 	sfmhi	f0, 4, [r7, #-8]
    1370:	02000000 	andeq	r0, r0, #0
    1374:	00630801 	rsbeq	r0, r3, r1, lsl #16
    1378:	56030000 	strpl	r0, [r3], -r0
    137c:	02000000 	andeq	r0, r0, #0
    1380:	005b0402 	subseq	r0, fp, r2, lsl #8
    1384:	78040000 	stmdavc	r4, {}	; <UNPREDICTABLE>
    1388:	33050200 	movwcc	r0, #20992	; 0x5200
    138c:	00000000 	andeq	r0, r0, r0
    1390:	02007904 	andeq	r7, r0, #4, 18	; 0x10000
    1394:	00003306 	andeq	r3, r0, r6, lsl #6
    1398:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
    139c:	0000005d 	andeq	r0, r0, sp, asr r0
    13a0:	003a0702 	eorseq	r0, sl, r2, lsl #14
    13a4:	ac030000 	stcge	0, cr0, [r3], {-0}
    13a8:	34000000 	strcc	r0, [r0], #-0
    13ac:	00a20902 	adceq	r0, r2, r2, lsl #18
    13b0:	77060000 	strvc	r0, [r6, -r0]
    13b4:	02000001 	andeq	r0, r0, #1
    13b8:	0000a20a 	andeq	sl, r0, sl, lsl #4
    13bc:	a0060000 	andge	r0, r6, r0
    13c0:	02000000 	andeq	r0, r0, #0
    13c4:	0000a20b 	andeq	sl, r0, fp, lsl #4
    13c8:	a6060400 	strge	r0, [r6], -r0, lsl #8
    13cc:	02000000 	andeq	r0, r0, #0
    13d0:	0000a20c 	andeq	sl, r0, ip, lsl #4
    13d4:	70040800 	andvc	r0, r4, r0, lsl #16
    13d8:	0d020078 	stceq	0, cr0, [r2, #-480]	; 0xfffffe20
    13dc:	000000a9 	andeq	r0, r0, r9, lsr #1
    13e0:	0407000c 	streq	r0, [r7], #-12
    13e4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    13e8:	005b0800 	subseq	r0, fp, r0, lsl #16
    13ec:	00b90000 	adcseq	r0, r9, r0
    13f0:	25090000 	strcs	r0, [r9, #-0]
    13f4:	13000000 	movwne	r0, #0
    13f8:	00010500 	andeq	r0, r1, r0, lsl #10
    13fc:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    1400:	00000066 	andeq	r0, r0, r6, rrx
    1404:	00000005 	andeq	r0, r0, r5
    1408:	cf0e0200 	svcgt	0x000e0200
    140c:	0a000000 	beq	1414 <startup-0x1fffebec>
    1410:	00006604 	andeq	r6, r0, r4, lsl #12
    1414:	018b0300 	orreq	r0, fp, r0, lsl #6
    1418:	02240000 	eoreq	r0, r4, #0
    141c:	00014e10 	andeq	r4, r1, r0, lsl lr
    1420:	65670400 	strbvs	r0, [r7, #-1024]!	; 0xfffffc00
    1424:	1102006f 	tstne	r2, pc, rrx
    1428:	000000c4 	andeq	r0, r0, r4, asr #1
    142c:	01810600 	orreq	r0, r1, r0, lsl #12
    1430:	12020000 	andne	r0, r2, #0
    1434:	000000a2 	andeq	r0, r0, r2, lsr #1
    1438:	01860604 	orreq	r0, r6, r4, lsl #12
    143c:	12020000 	andne	r0, r2, #0
    1440:	000000a2 	andeq	r0, r0, r2, lsr #1
    1444:	00180608 	andseq	r0, r8, r8, lsl #12
    1448:	13020000 	movwne	r0, #8192	; 0x2000
    144c:	000000a2 	andeq	r0, r0, r2, lsr #1
    1450:	001d060c 	andseq	r0, sp, ip, lsl #12
    1454:	13020000 	movwne	r0, #8192	; 0x2000
    1458:	000000a2 	andeq	r0, r0, r2, lsr #1
    145c:	00f10610 	rscseq	r0, r1, r0, lsl r6
    1460:	14020000 	strne	r0, [r2], #-0
    1464:	0000015f 	andeq	r0, r0, pc, asr r1
    1468:	07d60614 	bfieq	r0, r4, #12, #11
    146c:	15020000 	strne	r0, [r2, #-0]
    1470:	0000015f 	andeq	r0, r0, pc, asr r1
    1474:	00510618 	subseq	r0, r1, r8, lsl r6
    1478:	16020000 	strne	r0, [r2], -r0
    147c:	0000015f 	andeq	r0, r0, pc, asr r1
    1480:	0071061c 	rsbseq	r0, r1, ip, lsl r6
    1484:	17020000 	strne	r0, [r2, -r0]
    1488:	0000017a 	andeq	r0, r0, sl, ror r1
    148c:	590b0020 	stmdbpl	fp, {r5}
    1490:	0c000001 	stceq	0, cr0, [r0], {1}
    1494:	00000159 	andeq	r0, r0, r9, asr r1
    1498:	d5040a00 	strle	r0, [r4, #-2560]	; 0xfffff600
    149c:	0a000000 	beq	14a4 <startup-0x1fffeb5c>
    14a0:	00014e04 	andeq	r4, r1, r4, lsl #28
    14a4:	017a0b00 	cmneq	sl, r0, lsl #22
    14a8:	590c0000 	stmdbpl	ip, {}	; <UNPREDICTABLE>
    14ac:	0c000001 	stceq	0, cr0, [r0], {1}
    14b0:	000000a2 	andeq	r0, r0, r2, lsr #1
    14b4:	0000a20c 	andeq	sl, r0, ip, lsl #4
    14b8:	040a0000 	streq	r0, [sl], #-0
    14bc:	00000165 	andeq	r0, r0, r5, ror #2
    14c0:	00019405 	andeq	r9, r1, r5, lsl #8
    14c4:	d5180200 	ldrle	r0, [r8, #-512]	; 0xfffffe00
    14c8:	05000000 	streq	r0, [r0, #-0]
    14cc:	00000193 	muleq	r0, r3, r1
    14d0:	01591802 	cmpeq	r9, r2, lsl #16
    14d4:	bc0d0000 	stclt	0, cr0, [sp], {-0}
    14d8:	01000008 	tsteq	r0, r8
    14dc:	0000b903 	andeq	fp, r0, r3, lsl #18
    14e0:	c8030500 	stmdagt	r3, {r8, sl}
    14e4:	0d20000b 	stceq	0, cr0, [r0, #-44]!	; 0xffffffd4
    14e8:	000008ca 	andeq	r0, r0, sl, asr #17
    14ec:	01802901 	orreq	r2, r0, r1, lsl #18
    14f0:	03050000 	movweq	r0, #20480	; 0x5000
    14f4:	20000bfc 	strdcs	r0, [r0], -ip
    14f8:	0008b00e 	andeq	fp, r8, lr
    14fc:	6c100100 	ldfvss	f0, [r0], {-0}
    1500:	e8200009 	stmda	r0!, {r0, r3}
    1504:	01000000 	mrseq	r0, (UNDEF: 0)
    1508:	08b50f9c 	ldmeq	r5!, {r2, r3, r4, r7, r8, r9, sl, fp}
    150c:	10010000 	andne	r0, r1, r0
    1510:	0000018b 	andeq	r0, r0, fp, lsl #3
    1514:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    1518:	000b4900 	andeq	r4, fp, r0, lsl #18
    151c:	b7000400 	strlt	r0, [r0, -r0, lsl #8]
    1520:	04000006 	streq	r0, [r0], #-6
    1524:	0000f601 	andeq	pc, r0, r1, lsl #12
    1528:	09050c00 	stmdbeq	r5, {sl, fp}
    152c:	00220000 	eoreq	r0, r2, r0
	...
    1538:	05ab0000 	streq	r0, [fp, #0]!
    153c:	01020000 	mrseq	r0, (UNDEF: 2)
    1540:	00006506 	andeq	r6, r0, r6, lsl #10
    1544:	08010200 	stmdaeq	r1, {r9}
    1548:	00000063 	andeq	r0, r0, r3, rrx
    154c:	1a050202 	bne	141d5c <startup-0x1febe2a4>
    1550:	02000004 	andeq	r0, r0, #4
    1554:	008d0702 	addeq	r0, sp, r2, lsl #14
    1558:	04020000 	streq	r0, [r2], #-0
    155c:	00024505 	andeq	r4, r2, r5, lsl #10
    1560:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1564:	000001f4 	strdeq	r0, [r0], -r4
    1568:	40050802 	andmi	r0, r5, r2, lsl #16
    156c:	02000002 	andeq	r0, r0, #2
    1570:	01ef0708 	mvneq	r0, r8, lsl #14
    1574:	04030000 	streq	r0, [r3], #-0
    1578:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    157c:	005d0400 	subseq	r0, sp, r0, lsl #8
    1580:	04020000 	streq	r0, [r2], #-0
    1584:	0001f907 	andeq	pc, r1, r7, lsl #18
    1588:	06040500 	streq	r0, [r4], -r0, lsl #10
    158c:	00000392 	muleq	r0, r2, r3
    1590:	007d2202 	rsbseq	r2, sp, r2, lsl #4
    1594:	04070000 	streq	r0, [r7], #-0
    1598:	00000083 	andeq	r0, r0, r3, lsl #1
    159c:	0004f908 	andeq	pc, r4, r8, lsl #18
    15a0:	03e60600 	mvneq	r0, #0, 12
    15a4:	2c030000 	stccs	0, cr0, [r3], {-0}
    15a8:	00000041 	andeq	r0, r0, r1, asr #32
    15ac:	00050e06 	andeq	r0, r5, r6, lsl #28
    15b0:	41720300 	cmnmi	r2, r0, lsl #6
    15b4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    15b8:	0000039a 	muleq	r0, sl, r3
    15bc:	69016504 	stmdbvs	r1, {r2, r8, sl, sp, lr}
    15c0:	0a000000 	beq	15c8 <startup-0x1fffea38>
    15c4:	c9a60304 	stmibgt	r6!, {r2, r8, r9}
    15c8:	0b000000 	bleq	15d0 <startup-0x1fffea30>
    15cc:	0000038c 	andeq	r0, r0, ip, lsl #7
    15d0:	009ea803 	addseq	sl, lr, r3, lsl #16
    15d4:	360b0000 	strcc	r0, [fp], -r0
    15d8:	03000003 	movweq	r0, #3
    15dc:	0000c9a9 	andeq	ip, r0, r9, lsr #19
    15e0:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    15e4:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    15e8:	0d000000 	stceq	0, cr0, [r0, #-0]
    15ec:	00000069 	andeq	r0, r0, r9, rrx
    15f0:	080e0003 	stmdaeq	lr, {r0, r1}
    15f4:	00faa303 	rscseq	sl, sl, r3, lsl #6
    15f8:	f10f0000 			; <UNDEFINED> instruction: 0xf10f0000
    15fc:	03000004 	movweq	r0, #4
    1600:	00005da5 	andeq	r5, r0, r5, lsr #27
    1604:	000f0000 	andeq	r0, pc, r0
    1608:	03000005 	movweq	r0, #5
    160c:	0000aaaa 	andeq	sl, r0, sl, lsr #21
    1610:	06000400 	streq	r0, [r0], -r0, lsl #8
    1614:	00000442 	andeq	r0, r0, r2, asr #8
    1618:	00d9ab03 	sbcseq	sl, r9, r3, lsl #22
    161c:	ff060000 			; <UNDEFINED> instruction: 0xff060000
    1620:	03000002 	movweq	r0, #2
    1624:	000072af 	andeq	r7, r0, pc, lsr #5
    1628:	054c0600 	strbeq	r0, [ip, #-1536]	; 0xfffffa00
    162c:	16050000 	strne	r0, [r5], -r0
    1630:	00000048 	andeq	r0, r0, r8, asr #32
    1634:	00031010 	andeq	r1, r3, r0, lsl r0
    1638:	2f051800 	svccs	0x00051800
    163c:	0000016e 	andeq	r0, r0, lr, ror #2
    1640:	0004630f 	andeq	r6, r4, pc, lsl #6
    1644:	6e310500 	cfabs32vs	mvfx0, mvfx1
    1648:	00000001 	andeq	r0, r0, r1
    164c:	006b5f11 	rsbeq	r5, fp, r1, lsl pc
    1650:	005d3205 	subseq	r3, sp, r5, lsl #4
    1654:	0f040000 	svceq	0x00040000
    1658:	000004ab 	andeq	r0, r0, fp, lsr #9
    165c:	005d3205 	subseq	r3, sp, r5, lsl #4
    1660:	0f080000 	svceq	0x00080000
    1664:	000002f3 	strdeq	r0, [r0], -r3
    1668:	005d3205 	subseq	r3, sp, r5, lsl #4
    166c:	0f0c0000 	svceq	0x000c0000
    1670:	00000581 	andeq	r0, r0, r1, lsl #11
    1674:	005d3205 	subseq	r3, sp, r5, lsl #4
    1678:	11100000 	tstne	r0, r0
    167c:	0500785f 	streq	r7, [r0, #-2143]	; 0xfffff7a1
    1680:	00017433 	andeq	r7, r1, r3, lsr r4
    1684:	07001400 	streq	r1, [r0, -r0, lsl #8]
    1688:	00011b04 	andeq	r1, r1, r4, lsl #22
    168c:	01100c00 	tsteq	r0, r0, lsl #24
    1690:	01840000 	orreq	r0, r4, r0
    1694:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    1698:	00000000 	andeq	r0, r0, r0
    169c:	03311000 	teqeq	r1, #0
    16a0:	05240000 	streq	r0, [r4, #-0]!
    16a4:	0001fd37 	andeq	pc, r1, r7, lsr sp	; <UNPREDICTABLE>
    16a8:	02370f00 	eorseq	r0, r7, #0, 30
    16ac:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    16b0:	0000005d 	andeq	r0, r0, sp, asr r0
    16b4:	05160f00 	ldreq	r0, [r6, #-3840]	; 0xfffff100
    16b8:	3a050000 	bcc	1416c0 <startup-0x1febe940>
    16bc:	0000005d 	andeq	r0, r0, sp, asr r0
    16c0:	02640f04 	rsbeq	r0, r4, #4, 30
    16c4:	3b050000 	blcc	1416cc <startup-0x1febe934>
    16c8:	0000005d 	andeq	r0, r0, sp, asr r0
    16cc:	061c0f08 	ldreq	r0, [ip], -r8, lsl #30
    16d0:	3c050000 	stccc	0, cr0, [r5], {-0}
    16d4:	0000005d 	andeq	r0, r0, sp, asr r0
    16d8:	03ca0f0c 	biceq	r0, sl, #12, 30	; 0x30
    16dc:	3d050000 	stccc	0, cr0, [r5, #-0]
    16e0:	0000005d 	andeq	r0, r0, sp, asr r0
    16e4:	03a90f10 			; <UNDEFINED> instruction: 0x03a90f10
    16e8:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    16ec:	0000005d 	andeq	r0, r0, sp, asr r0
    16f0:	05860f14 	streq	r0, [r6, #3860]	; 0xf14
    16f4:	3f050000 	svccc	0x00050000
    16f8:	0000005d 	andeq	r0, r0, sp, asr r0
    16fc:	04240f18 	strteq	r0, [r4], #-3864	; 0xfffff0e8
    1700:	40050000 	andmi	r0, r5, r0
    1704:	0000005d 	andeq	r0, r0, sp, asr r0
    1708:	05d20f1c 	ldrbeq	r0, [r2, #3868]	; 0xf1c
    170c:	41050000 	mrsmi	r0, (UNDEF: 5)
    1710:	0000005d 	andeq	r0, r0, sp, asr r0
    1714:	73120020 	tstvc	r2, #32
    1718:	08000002 	stmdaeq	r0, {r1}
    171c:	3d4a0501 	cfstr64cc	mvdx0, [sl, #-4]
    1720:	0f000002 	svceq	0x00000002
    1724:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1728:	023d4b05 	eorseq	r4, sp, #5120	; 0x1400
    172c:	0f000000 	svceq	0x00000000
    1730:	0000019b 	muleq	r0, fp, r1
    1734:	023d4c05 	eorseq	r4, sp, #1280	; 0x500
    1738:	13800000 	orrne	r0, r0, #0
    173c:	0000053e 	andeq	r0, r0, lr, lsr r5
    1740:	01104e05 	tsteq	r0, r5, lsl #28
    1744:	01000000 	mrseq	r0, (UNDEF: 0)
    1748:	00029813 	andeq	r9, r2, r3, lsl r8
    174c:	10510500 	subsne	r0, r1, r0, lsl #10
    1750:	04000001 	streq	r0, [r0], #-1
    1754:	700c0001 	andvc	r0, ip, r1
    1758:	4d000000 	stcmi	0, cr0, [r0, #-0]
    175c:	0d000002 	stceq	0, cr0, [r0, #-8]
    1760:	00000069 	andeq	r0, r0, r9, rrx
    1764:	d312001f 	tstle	r2, #31
    1768:	90000003 	andls	r0, r0, r3
    176c:	8b5d0501 	blhi	1742b78 <startup-0x1e8bd488>
    1770:	0f000002 	svceq	0x00000002
    1774:	00000463 	andeq	r0, r0, r3, ror #8
    1778:	028b5e05 	addeq	r5, fp, #5, 28	; 0x50
    177c:	0f000000 	svceq	0x00000000
    1780:	0000047b 	andeq	r0, r0, fp, ror r4
    1784:	005d5f05 	subseq	r5, sp, r5, lsl #30
    1788:	0f040000 	svceq	0x00040000
    178c:	000002ee 	andeq	r0, r0, lr, ror #5
    1790:	02916105 	addseq	r6, r1, #1073741825	; 0x40000001
    1794:	0f080000 	svceq	0x00080000
    1798:	00000273 	andeq	r0, r0, r3, ror r2
    179c:	01fd6205 	mvnseq	r6, r5, lsl #4
    17a0:	00880000 	addeq	r0, r8, r0
    17a4:	024d0407 	subeq	r0, sp, #117440512	; 0x7000000
    17a8:	a10c0000 	mrsge	r0, (UNDEF: 12)
    17ac:	a1000002 	tstge	r0, r2
    17b0:	0d000002 	stceq	0, cr0, [r0, #-8]
    17b4:	00000069 	andeq	r0, r0, r9, rrx
    17b8:	0407001f 	streq	r0, [r7], #-31	; 0xffffffe1
    17bc:	000002a7 	andeq	r0, r0, r7, lsr #5
    17c0:	042e1014 	strteq	r1, [lr], #-20	; 0xffffffec
    17c4:	05080000 	streq	r0, [r8, #-0]
    17c8:	0002cd75 	andeq	ip, r2, r5, ror sp
    17cc:	025e0f00 	subseq	r0, lr, #0, 30
    17d0:	76050000 	strvc	r0, [r5], -r0
    17d4:	000002cd 	andeq	r0, r0, sp, asr #5
    17d8:	01a70f00 			; <UNDEFINED> instruction: 0x01a70f00
    17dc:	77050000 	strvc	r0, [r5, -r0]
    17e0:	0000005d 	andeq	r0, r0, sp, asr r0
    17e4:	04070004 	streq	r0, [r7], #-4
    17e8:	0000002c 	andeq	r0, r0, ip, lsr #32
    17ec:	00044d10 	andeq	r4, r4, r0, lsl sp
    17f0:	b5056800 	strlt	r6, [r5, #-2048]	; 0xfffff800
    17f4:	000003fd 	strdeq	r0, [r0], -sp
    17f8:	00705f11 	rsbseq	r5, r0, r1, lsl pc
    17fc:	02cdb605 	sbceq	fp, sp, #5242880	; 0x500000
    1800:	11000000 	mrsne	r0, (UNDEF: 0)
    1804:	0500725f 	streq	r7, [r0, #-607]	; 0xfffffda1
    1808:	00005db7 			; <UNDEFINED> instruction: 0x00005db7
    180c:	5f110400 	svcpl	0x00110400
    1810:	b8050077 	stmdalt	r5, {r0, r1, r2, r4, r5, r6}
    1814:	0000005d 	andeq	r0, r0, sp, asr r0
    1818:	02910f08 	addseq	r0, r1, #8, 30
    181c:	b9050000 	stmdblt	r5, {}	; <UNPREDICTABLE>
    1820:	00000033 	andeq	r0, r0, r3, lsr r0
    1824:	034d0f0c 	movteq	r0, #57100	; 0xdf0c
    1828:	ba050000 	blt	141830 <startup-0x1febe7d0>
    182c:	00000033 	andeq	r0, r0, r3, lsr r0
    1830:	625f110e 	subsvs	r1, pc, #-2147483645	; 0x80000003
    1834:	bb050066 	bllt	1419d4 <startup-0x1febe62c>
    1838:	000002a8 	andeq	r0, r0, r8, lsr #5
    183c:	02060f10 	andeq	r0, r6, #16, 30	; 0x40
    1840:	bc050000 	stclt	0, cr0, [r5], {-0}
    1844:	0000005d 	andeq	r0, r0, sp, asr r0
    1848:	02810f18 	addeq	r0, r1, #24, 30	; 0x60
    184c:	c3050000 	movwgt	r0, #20480	; 0x5000
    1850:	00000070 	andeq	r0, r0, r0, ror r0
    1854:	087f0f1c 	ldmdaeq	pc!, {r2, r3, r4, r8, r9, sl, fp}^	; <UNPREDICTABLE>
    1858:	c5050000 	strgt	r0, [r5, #-0]
    185c:	0000056a 	andeq	r0, r0, sl, ror #10
    1860:	07b90f20 	ldreq	r0, [r9, r0, lsr #30]!
    1864:	c7050000 	strgt	r0, [r5, -r0]
    1868:	00000594 	muleq	r0, r4, r5
    186c:	05080f24 	streq	r0, [r8, #-3876]	; 0xfffff0dc
    1870:	ca050000 	bgt	141878 <startup-0x1febe788>
    1874:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
    1878:	05ec0f28 	strbeq	r0, [ip, #3880]!	; 0xf28
    187c:	cb050000 	blgt	141884 <startup-0x1febe77c>
    1880:	000005d2 	ldrdeq	r0, [r0], -r2
    1884:	755f112c 	ldrbvc	r1, [pc, #-300]	; 1760 <startup-0x1fffe8a0>
    1888:	ce050062 	cdpgt	0, 0, cr0, cr5, cr2, {3}
    188c:	000002a8 	andeq	r0, r0, r8, lsr #5
    1890:	755f1130 	ldrbvc	r1, [pc, #-304]	; 1768 <startup-0x1fffe898>
    1894:	cf050070 	svcgt	0x00050070
    1898:	000002cd 	andeq	r0, r0, sp, asr #5
    189c:	755f1138 	ldrbvc	r1, [pc, #-312]	; 176c <startup-0x1fffe894>
    18a0:	d0050072 	andle	r0, r5, r2, ror r0
    18a4:	0000005d 	andeq	r0, r0, sp, asr r0
    18a8:	024e0f3c 	subeq	r0, lr, #60, 30	; 0xf0
    18ac:	d3050000 	movwle	r0, #20480	; 0x5000
    18b0:	000005d8 	ldrdeq	r0, [r0], -r8
    18b4:	05c40f40 	strbeq	r0, [r4, #3904]	; 0xf40
    18b8:	d4050000 	strle	r0, [r5], #-0
    18bc:	000005e8 	andeq	r0, r0, r8, ror #11
    18c0:	6c5f1143 	ldfvse	f1, [pc], {67}	; 0x43
    18c4:	d7050062 	strle	r0, [r5, -r2, rrx]
    18c8:	000002a8 	andeq	r0, r0, r8, lsr #5
    18cc:	02a70f44 	adceq	r0, r7, #68, 30	; 0x110
    18d0:	da050000 	ble	1418d8 <startup-0x1febe728>
    18d4:	0000005d 	andeq	r0, r0, sp, asr r0
    18d8:	02b80f4c 	adcseq	r0, r8, #76, 30	; 0x130
    18dc:	db050000 	blle	1418e4 <startup-0x1febe71c>
    18e0:	00000088 	andeq	r0, r0, r8, lsl #1
    18e4:	07ac0f50 	sbfxeq	r0, r0, #30, #13
    18e8:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    18ec:	0000041b 	andeq	r0, r0, fp, lsl r4
    18f0:	04fa0f54 	ldrbteq	r0, [sl], #3924	; 0xf54
    18f4:	e2050000 	and	r0, r5, #0
    18f8:	00000105 	andeq	r0, r0, r5, lsl #2
    18fc:	04550f58 	ldrbeq	r0, [r5], #-3928	; 0xfffff0a8
    1900:	e4050000 	str	r0, [r5], #-0
    1904:	000000fa 	strdeq	r0, [r0], -sl
    1908:	03a10f5c 			; <UNDEFINED> instruction: 0x03a10f5c
    190c:	e5050000 	str	r0, [r5, #-0]
    1910:	0000005d 	andeq	r0, r0, sp, asr r0
    1914:	5d150064 	ldcpl	0, cr0, [r5, #-400]	; 0xfffffe70
    1918:	1b000000 	blne	1920 <startup-0x1fffe6e0>
    191c:	16000004 	strne	r0, [r0], -r4
    1920:	0000041b 	andeq	r0, r0, fp, lsl r4
    1924:	00007016 	andeq	r7, r0, r6, lsl r0
    1928:	05581600 	ldrbeq	r1, [r8, #-1536]	; 0xfffffa00
    192c:	5d160000 	ldcpl	0, cr0, [r6, #-0]
    1930:	00000000 	andeq	r0, r0, r0
    1934:	04260407 	strteq	r0, [r6], #-1031	; 0xfffffbf9
    1938:	1b170000 	blne	5c1940 <startup-0x1fa3e6c0>
    193c:	18000004 	stmdane	r0, {r2}
    1940:	000005bd 			; <UNDEFINED> instruction: 0x000005bd
    1944:	39050428 	stmdbcc	r5, {r3, r5, sl}
    1948:	00055802 	andeq	r5, r5, r2, lsl #16
    194c:	04131900 	ldreq	r1, [r3], #-2304	; 0xfffff700
    1950:	3b050000 	blcc	141958 <startup-0x1febe6a8>
    1954:	00005d02 	andeq	r5, r0, r2, lsl #26
    1958:	a0190000 	andsge	r0, r9, r0
    195c:	05000002 	streq	r0, [r0, #-2]
    1960:	063f0240 	ldrteq	r0, [pc], -r0, asr #4
    1964:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
    1968:	0000033d 	andeq	r0, r0, sp, lsr r3
    196c:	3f024005 	svccc	0x00024005
    1970:	08000006 	stmdaeq	r0, {r1, r2}
    1974:	00030819 	andeq	r0, r3, r9, lsl r8
    1978:	02400500 	subeq	r0, r0, #0, 10
    197c:	0000063f 	andeq	r0, r0, pc, lsr r6
    1980:	0476190c 	ldrbteq	r1, [r6], #-2316	; 0xfffff6f4
    1984:	42050000 	andmi	r0, r5, #0
    1988:	00005d02 	andeq	r5, r0, r2, lsl #26
    198c:	bd191000 	ldclt	0, cr1, [r9, #-0]
    1990:	05000001 	streq	r0, [r0, #-1]
    1994:	08210243 	stmdaeq	r1!, {r0, r1, r6, r9}
    1998:	19140000 	ldmdbne	r4, {}	; <UNPREDICTABLE>
    199c:	00000492 	muleq	r0, r2, r4
    19a0:	5d024605 	stcpl	6, cr4, [r2, #-20]	; 0xffffffec
    19a4:	30000000 	andcc	r0, r0, r0
    19a8:	00048019 	andeq	r8, r4, r9, lsl r0
    19ac:	02470500 	subeq	r0, r7, #0, 10
    19b0:	00000836 	andeq	r0, r0, r6, lsr r8
    19b4:	03db1934 	bicseq	r1, fp, #52, 18	; 0xd0000
    19b8:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
    19bc:	00005d02 	andeq	r5, r0, r2, lsl #26
    19c0:	88193800 	ldmdahi	r9, {fp, ip, sp}
    19c4:	05000004 	streq	r0, [r0, #-4]
    19c8:	0847024b 	stmdaeq	r7, {r0, r1, r3, r6, r9}^
    19cc:	193c0000 	ldmdbne	ip!, {}	; <UNPREDICTABLE>
    19d0:	00000384 	andeq	r0, r0, r4, lsl #7
    19d4:	6e024e05 	cdpvs	14, 0, cr4, cr2, cr5, {0}
    19d8:	40000001 	andmi	r0, r0, r1
    19dc:	00032719 	andeq	r2, r3, r9, lsl r7
    19e0:	024f0500 	subeq	r0, pc, #0, 10
    19e4:	0000005d 	andeq	r0, r0, sp, asr r0
    19e8:	060b1944 	streq	r1, [fp], -r4, asr #18
    19ec:	50050000 	andpl	r0, r5, r0
    19f0:	00016e02 	andeq	r6, r1, r2, lsl #28
    19f4:	ed194800 	ldc	8, cr4, [r9, #-0]
    19f8:	05000003 	streq	r0, [r0, #-3]
    19fc:	084d0251 	stmdaeq	sp, {r0, r4, r6, r9}^
    1a00:	194c0000 	stmdbne	ip, {}^	; <UNPREDICTABLE>
    1a04:	00000345 	andeq	r0, r0, r5, asr #6
    1a08:	5d025405 	cfstrspl	mvf5, [r2, #-20]	; 0xffffffec
    1a0c:	50000000 	andpl	r0, r0, r0
    1a10:	0002b019 	andeq	fp, r2, r9, lsl r0
    1a14:	02550500 	subseq	r0, r5, #0, 10
    1a18:	00000558 	andeq	r0, r0, r8, asr r5
    1a1c:	040c1954 	streq	r1, [ip], #-2388	; 0xfffff6ac
    1a20:	78050000 	stmdavc	r5, {}	; <UNPREDICTABLE>
    1a24:	0007ff02 	andeq	pc, r7, r2, lsl #30
    1a28:	d31a5800 	tstle	sl, #0, 16
    1a2c:	05000003 	streq	r0, [r0, #-3]
    1a30:	028b027c 	addeq	r0, fp, #124, 4	; 0xc0000007
    1a34:	01480000 	mrseq	r0, (UNDEF: 72)
    1a38:	0003621a 	andeq	r6, r3, sl, lsl r2
    1a3c:	027d0500 	rsbseq	r0, sp, #0, 10
    1a40:	0000024d 	andeq	r0, r0, sp, asr #4
    1a44:	b31a014c 	tstlt	sl, #76, 2
    1a48:	05000005 	streq	r0, [r0, #-5]
    1a4c:	085e0281 	ldmdaeq	lr, {r0, r7, r9}^
    1a50:	02dc0000 	sbcseq	r0, ip, #0
    1a54:	0002891a 	andeq	r8, r2, sl, lsl r9
    1a58:	02860500 	addeq	r0, r6, #0, 10
    1a5c:	00000604 	andeq	r0, r0, r4, lsl #12
    1a60:	6e1a02e0 	cdpvs	2, 1, cr0, cr10, cr0, {7}
    1a64:	05000002 	streq	r0, [r0, #-2]
    1a68:	086a0288 	stmdaeq	sl!, {r3, r7, r9}^
    1a6c:	02ec0000 	rsceq	r0, ip, #0
    1a70:	5e040700 	cdppl	7, 0, cr0, cr4, cr0, {0}
    1a74:	02000005 	andeq	r0, r0, #5
    1a78:	006c0801 	rsbeq	r0, ip, r1, lsl #16
    1a7c:	5e170000 	cdppl	0, 1, cr0, cr7, cr0, {0}
    1a80:	07000005 	streq	r0, [r0, -r5]
    1a84:	0003fd04 	andeq	pc, r3, r4, lsl #26
    1a88:	005d1500 	subseq	r1, sp, r0, lsl #10
    1a8c:	058e0000 	streq	r0, [lr]
    1a90:	1b160000 	blne	581a98 <startup-0x1fa7e568>
    1a94:	16000004 	strne	r0, [r0], -r4
    1a98:	00000070 	andeq	r0, r0, r0, ror r0
    1a9c:	00058e16 	andeq	r8, r5, r6, lsl lr
    1aa0:	005d1600 	subseq	r1, sp, r0, lsl #12
    1aa4:	07000000 	streq	r0, [r0, -r0]
    1aa8:	00056504 	andeq	r6, r5, r4, lsl #10
    1aac:	70040700 	andvc	r0, r4, r0, lsl #14
    1ab0:	15000005 	strne	r0, [r0, #-5]
    1ab4:	00000093 	muleq	r0, r3, r0
    1ab8:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
    1abc:	00041b16 	andeq	r1, r4, r6, lsl fp
    1ac0:	00701600 	rsbseq	r1, r0, r0, lsl #12
    1ac4:	93160000 	tstls	r6, #0
    1ac8:	16000000 	strne	r0, [r0], -r0
    1acc:	0000005d 	andeq	r0, r0, sp, asr r0
    1ad0:	9a040700 	bls	1036d8 <startup-0x1fefc928>
    1ad4:	15000005 	strne	r0, [r0, #-5]
    1ad8:	0000005d 	andeq	r0, r0, sp, asr r0
    1adc:	000005d2 	ldrdeq	r0, [r0], -r2
    1ae0:	00041b16 	andeq	r1, r4, r6, lsl fp
    1ae4:	00701600 	rsbseq	r1, r0, r0, lsl #12
    1ae8:	07000000 	streq	r0, [r0, -r0]
    1aec:	0005be04 	andeq	fp, r5, r4, lsl #28
    1af0:	002c0c00 	eoreq	r0, ip, r0, lsl #24
    1af4:	05e80000 	strbeq	r0, [r8, #0]!
    1af8:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    1afc:	02000000 	andeq	r0, r0, #0
    1b00:	002c0c00 	eoreq	r0, ip, r0, lsl #24
    1b04:	05f80000 	ldrbeq	r0, [r8, #0]!
    1b08:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    1b0c:	00000000 	andeq	r0, r0, r0
    1b10:	043b0900 	ldrteq	r0, [fp], #-2304	; 0xfffff700
    1b14:	1f050000 	svcne	0x00050000
    1b18:	0002d301 	andeq	sp, r2, r1, lsl #6
    1b1c:	05901b00 	ldreq	r1, [r0, #2816]	; 0xb00
    1b20:	050c0000 	streq	r0, [ip, #-0]
    1b24:	06390123 	ldrteq	r0, [r9], -r3, lsr #2
    1b28:	63190000 	tstvs	r9, #0
    1b2c:	05000004 	streq	r0, [r0, #-4]
    1b30:	06390125 	ldrteq	r0, [r9], -r5, lsr #2
    1b34:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    1b38:	0000035b 	andeq	r0, r0, fp, asr r3
    1b3c:	5d012605 	stcpl	6, cr2, [r1, #-20]	; 0xffffffec
    1b40:	04000000 	streq	r0, [r0], #-0
    1b44:	00043519 	andeq	r3, r4, r9, lsl r5
    1b48:	01270500 			; <UNDEFINED> instruction: 0x01270500
    1b4c:	0000063f 	andeq	r0, r0, pc, lsr r6
    1b50:	04070008 	streq	r0, [r7], #-8
    1b54:	00000604 	andeq	r0, r0, r4, lsl #12
    1b58:	05f80407 	ldrbeq	r0, [r8, #1031]!	; 0x407
    1b5c:	ad1b0000 	ldcge	0, cr0, [fp, #-0]
    1b60:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1b64:	7a013f05 	bvc	51780 <startup-0x1ffae880>
    1b68:	19000006 	stmdbne	r0, {r1, r2}
    1b6c:	000004eb 	andeq	r0, r0, fp, ror #9
    1b70:	7a014005 	bvc	51b8c <startup-0x1ffae474>
    1b74:	00000006 	andeq	r0, r0, r6
    1b78:	00052b19 	andeq	r2, r5, r9, lsl fp
    1b7c:	01410500 	cmpeq	r1, r0, lsl #10
    1b80:	0000067a 	andeq	r0, r0, sl, ror r6
    1b84:	05471906 	strbeq	r1, [r7, #-2310]	; 0xfffff6fa
    1b88:	42050000 	andmi	r0, r5, #0
    1b8c:	00003a01 	andeq	r3, r0, r1, lsl #20
    1b90:	0c000c00 	stceq	12, cr0, [r0], {-0}
    1b94:	0000003a 	andeq	r0, r0, sl, lsr r0
    1b98:	0000068a 	andeq	r0, r0, sl, lsl #13
    1b9c:	0000690d 	andeq	r6, r0, sp, lsl #18
    1ba0:	1c000200 	sfmne	f0, 4, [r0], {-0}
    1ba4:	025905d0 	subseq	r0, r9, #208, 10	; 0x34000000
    1ba8:	0000078b 	andeq	r0, r0, fp, lsl #15
    1bac:	00057419 	andeq	r7, r5, r9, lsl r4
    1bb0:	025b0500 	subseq	r0, fp, #0, 10
    1bb4:	00000069 	andeq	r0, r0, r9, rrx
    1bb8:	05311900 	ldreq	r1, [r1, #-2304]!	; 0xfffff700
    1bbc:	5c050000 	stcpl	0, cr0, [r5], {-0}
    1bc0:	00055802 	andeq	r5, r5, r2, lsl #16
    1bc4:	77190400 	ldrvc	r0, [r9, -r0, lsl #8]
    1bc8:	05000003 	streq	r0, [r0, #-3]
    1bcc:	078b025d 			; <UNDEFINED> instruction: 0x078b025d
    1bd0:	19080000 	stmdbne	r8, {}	; <UNPREDICTABLE>
    1bd4:	000005dd 	ldrdeq	r0, [r0], -sp
    1bd8:	84025e05 	strhi	r5, [r2], #-3589	; 0xfffff1fb
    1bdc:	24000001 	strcs	r0, [r0], #-1
    1be0:	00031819 	andeq	r1, r3, r9, lsl r8
    1be4:	025f0500 	subseq	r0, pc, #0, 10
    1be8:	0000005d 	andeq	r0, r0, sp, asr r0
    1bec:	045e1948 	ldrbeq	r1, [lr], #-2376	; 0xfffff6b8
    1bf0:	60050000 	andvs	r0, r5, r0
    1bf4:	00005602 	andeq	r5, r0, r2, lsl #12
    1bf8:	f3195000 	vhadd.u16	d5, d9, d0
    1bfc:	05000005 	streq	r0, [r0, #-5]
    1c00:	06450261 	strbeq	r0, [r5], -r1, ror #4
    1c04:	19580000 	ldmdbne	r8, {}^	; <UNPREDICTABLE>
    1c08:	00000469 	andeq	r0, r0, r9, ror #8
    1c0c:	fa026205 	blx	9a428 <startup-0x1ff65bd8>
    1c10:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    1c14:	0005fd19 	andeq	pc, r5, r9, lsl sp	; <UNPREDICTABLE>
    1c18:	02630500 	rsbeq	r0, r3, #0, 10
    1c1c:	000000fa 	strdeq	r0, [r0], -sl
    1c20:	03fe1970 	mvnseq	r1, #112, 18	; 0x1c0000
    1c24:	64050000 	strvs	r0, [r5], #-0
    1c28:	0000fa02 	andeq	pc, r0, r2, lsl #20
    1c2c:	9f197800 	svcls	0x00197800
    1c30:	05000005 	streq	r0, [r0, #-5]
    1c34:	079b0265 	ldreq	r0, [fp, r5, ror #4]
    1c38:	19800000 	stmibne	r0, {}	; <UNPREDICTABLE>
    1c3c:	0000036b 	andeq	r0, r0, fp, ror #6
    1c40:	ab026605 	blge	9b45c <startup-0x1ff64ba4>
    1c44:	88000007 	stmdahi	r0, {r0, r1, r2}
    1c48:	00055419 	andeq	r5, r5, r9, lsl r4
    1c4c:	02670500 	rsbeq	r0, r7, #0, 10
    1c50:	0000005d 	andeq	r0, r0, sp, asr r0
    1c54:	02d119a0 	sbcseq	r1, r1, #160, 18	; 0x280000
    1c58:	68050000 	stmdavs	r5, {}	; <UNPREDICTABLE>
    1c5c:	0000fa02 	andeq	pc, r0, r2, lsl #20
    1c60:	2019a400 	andscs	sl, r9, r0, lsl #8
    1c64:	05000002 	streq	r0, [r0, #-2]
    1c68:	00fa0269 	rscseq	r0, sl, r9, ror #4
    1c6c:	19ac0000 	stmibne	ip!, {}	; <UNPREDICTABLE>
    1c70:	000002c0 	andeq	r0, r0, r0, asr #5
    1c74:	fa026a05 	blx	9c490 <startup-0x1ff63b70>
    1c78:	b4000000 	strlt	r0, [r0], #-0
    1c7c:	0001cf19 	andeq	ip, r1, r9, lsl pc
    1c80:	026b0500 	rsbeq	r0, fp, #0, 10
    1c84:	000000fa 	strdeq	r0, [r0], -sl
    1c88:	01de19bc 	ldrheq	r1, [lr, #156]	; 0x9c
    1c8c:	6c050000 	stcvs	0, cr0, [r5], {-0}
    1c90:	0000fa02 	andeq	pc, r0, r2, lsl #20
    1c94:	1119c400 	tstne	r9, r0, lsl #8
    1c98:	05000004 	streq	r0, [r0, #-4]
    1c9c:	005d026d 	subseq	r0, sp, sp, ror #4
    1ca0:	00cc0000 	sbceq	r0, ip, r0
    1ca4:	00055e0c 	andeq	r5, r5, ip, lsl #28
    1ca8:	00079b00 	andeq	r9, r7, r0, lsl #22
    1cac:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    1cb0:	00190000 	andseq	r0, r9, r0
    1cb4:	00055e0c 	andeq	r5, r5, ip, lsl #28
    1cb8:	0007ab00 	andeq	sl, r7, r0, lsl #22
    1cbc:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    1cc0:	00070000 	andeq	r0, r7, r0
    1cc4:	00055e0c 	andeq	r5, r5, ip, lsl #28
    1cc8:	0007bb00 	andeq	fp, r7, r0, lsl #22
    1ccc:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    1cd0:	00170000 	andseq	r0, r7, r0
    1cd4:	7205f01c 	andvc	pc, r5, #28
    1cd8:	0007df02 	andeq	sp, r7, r2, lsl #30
    1cdc:	03be1900 			; <UNDEFINED> instruction: 0x03be1900
    1ce0:	75050000 	strvc	r0, [r5, #-0]
    1ce4:	0007df02 	andeq	sp, r7, r2, lsl #30
    1ce8:	96190000 	ldrls	r0, [r9], -r0
    1cec:	05000005 	streq	r0, [r0, #-5]
    1cf0:	07ef0276 			; <UNDEFINED> instruction: 0x07ef0276
    1cf4:	00780000 	rsbseq	r0, r8, r0
    1cf8:	0002cd0c 	andeq	ip, r2, ip, lsl #26
    1cfc:	0007ef00 	andeq	lr, r7, r0, lsl #30
    1d00:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    1d04:	001d0000 	andseq	r0, sp, r0
    1d08:	0000690c 	andeq	r6, r0, ip, lsl #18
    1d0c:	0007ff00 	andeq	pc, r7, r0, lsl #30
    1d10:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    1d14:	001d0000 	andseq	r0, sp, r0
    1d18:	5705f01d 	smuadpl	r5, sp, r0
    1d1c:	00082102 	andeq	r2, r8, r2, lsl #2
    1d20:	05bd1e00 	ldreq	r1, [sp, #3584]!	; 0xe00
    1d24:	6e050000 	cdpvs	0, 0, cr0, cr5, cr0, {0}
    1d28:	00068a02 	andeq	r8, r6, r2, lsl #20
    1d2c:	05ca1e00 	strbeq	r1, [sl, #3584]	; 0xe00
    1d30:	77050000 	strvc	r0, [r5, -r0]
    1d34:	0007bb02 	andeq	fp, r7, r2, lsl #22
    1d38:	5e0c0000 	cdppl	0, 0, cr0, cr12, cr0, {0}
    1d3c:	31000005 	tstcc	r0, r5
    1d40:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
    1d44:	00000069 	andeq	r0, r0, r9, rrx
    1d48:	15080018 	strne	r0, [r8, #-24]	; 0xffffffe8
    1d4c:	07000002 	streq	r0, [r0, -r2]
    1d50:	00083104 	andeq	r3, r8, r4, lsl #2
    1d54:	08471f00 	stmdaeq	r7, {r8, r9, sl, fp, ip}^
    1d58:	1b160000 	blne	581d60 <startup-0x1fa7e2a0>
    1d5c:	00000004 	andeq	r0, r0, r4
    1d60:	083c0407 	ldmdaeq	ip!, {r0, r1, r2, sl}
    1d64:	04070000 	streq	r0, [r7], #-0
    1d68:	0000016e 	andeq	r0, r0, lr, ror #2
    1d6c:	00085e1f 	andeq	r5, r8, pc, lsl lr
    1d70:	005d1600 	subseq	r1, sp, r0, lsl #12
    1d74:	07000000 	streq	r0, [r0, -r0]
    1d78:	00086404 	andeq	r6, r8, r4, lsl #8
    1d7c:	53040700 	movwpl	r0, #18176	; 0x4700
    1d80:	0c000008 	stceq	0, cr0, [r0], {8}
    1d84:	000005f8 	strdeq	r0, [r0], -r8
    1d88:	0000087a 	andeq	r0, r0, sl, ror r8
    1d8c:	0000690d 	andeq	r6, r0, sp, lsl #18
    1d90:	20000200 	andcs	r0, r0, r0, lsl #4
    1d94:	00000568 	andeq	r0, r0, r8, ror #10
    1d98:	1b030705 	blne	c39b4 <startup-0x1ff3c64c>
    1d9c:	20000004 	andcs	r0, r0, r4
    1da0:	00000561 	andeq	r0, r0, r1, ror #10
    1da4:	21030805 	tstcs	r3, r5, lsl #16
    1da8:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    1dac:	1f210618 	svcne	0x00210618
    1db0:	0f000009 	svceq	0x00000009
    1db4:	000002f9 	strdeq	r0, [r0], -r9
    1db8:	00692206 	rsbeq	r2, r9, r6, lsl #4
    1dbc:	0f000000 	svceq	0x00000000
    1dc0:	000001c8 	andeq	r0, r0, r8, asr #3
    1dc4:	003a2306 	eorseq	r2, sl, r6, lsl #6
    1dc8:	0f040000 	svceq	0x00040000
    1dcc:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    1dd0:	003a2406 	eorseq	r2, sl, r6, lsl #8
    1dd4:	0f060000 	svceq	0x00060000
    1dd8:	00000353 	andeq	r0, r0, r3, asr r3
    1ddc:	00692506 	rsbeq	r2, r9, r6, lsl #10
    1de0:	0f080000 	svceq	0x00080000
    1de4:	0000020f 	andeq	r0, r0, pc, lsl #4
    1de8:	00692606 	rsbeq	r2, r9, r6, lsl #12
    1dec:	0f0c0000 	svceq	0x000c0000
    1df0:	000002e7 	andeq	r0, r0, r7, ror #5
    1df4:	002c2706 	eoreq	r2, ip, r6, lsl #14
    1df8:	0f100000 	svceq	0x00100000
    1dfc:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
    1e00:	002c2806 	eoreq	r2, ip, r6, lsl #16
    1e04:	0f110000 	svceq	0x00110000
    1e08:	00000610 	andeq	r0, r0, r0, lsl r6
    1e0c:	003a2906 	eorseq	r2, sl, r6, lsl #18
    1e10:	0f120000 	svceq	0x00120000
    1e14:	000003f7 	strdeq	r0, [r0], -r7
    1e18:	002c2a06 	eoreq	r2, ip, r6, lsl #20
    1e1c:	0f140000 	svceq	0x00140000
    1e20:	0000022f 	andeq	r0, r0, pc, lsr #4
    1e24:	002c2b06 	eoreq	r2, ip, r6, lsl #22
    1e28:	0f150000 	svceq	0x00150000
    1e2c:	0000051f 	andeq	r0, r0, pc, lsl r5
    1e30:	003a2c06 	eorseq	r2, sl, r6, lsl #24
    1e34:	00160000 	andseq	r0, r6, r0
    1e38:	0005f806 	andeq	pc, r5, r6, lsl #16
    1e3c:	922d0600 	eorls	r0, sp, #0, 12
    1e40:	21000008 	tstcs	r0, r8
    1e44:	0000063e 	andeq	r0, r0, lr, lsr r6
    1e48:	00640407 	rsbeq	r0, r4, r7, lsl #8
    1e4c:	03050000 	movweq	r0, #20480	; 0x5000
    1e50:	20000b64 	andcs	r0, r0, r4, ror #22
    1e54:	00066f21 	andeq	r6, r6, r1, lsr #30
    1e58:	64050700 	strvs	r0, [r5], #-1792	; 0xfffff900
    1e5c:	05000000 	streq	r0, [r0, #-0]
    1e60:	000b6c03 	andeq	r6, fp, r3, lsl #24
    1e64:	06632120 	strbteq	r2, [r3], -r0, lsr #2
    1e68:	06070000 	streq	r0, [r7], -r0
    1e6c:	00000064 	andeq	r0, r0, r4, rrx
    1e70:	0b680305 	bleq	1a02a8c <startup-0x1e5fd574>
    1e74:	56102000 	ldrpl	r2, [r0], -r0
    1e78:	02000000 	andeq	r0, r0, #0
    1e7c:	097e0408 	ldmdbeq	lr!, {r3, sl}^
    1e80:	78110000 	ldmdavc	r1, {}	; <UNPREDICTABLE>
    1e84:	2c050800 	stccs	8, cr0, [r5], {-0}
    1e88:	00000000 	andeq	r0, r0, r0
    1e8c:	08007911 	stmdaeq	r0, {r0, r4, r8, fp, ip, sp, lr}
    1e90:	00002c06 	andeq	r2, r0, r6, lsl #24
    1e94:	06000100 	streq	r0, [r0], -r0, lsl #2
    1e98:	0000005d 	andeq	r0, r0, sp, asr r0
    1e9c:	095d0708 	ldmdbeq	sp, {r3, r8, r9, sl}^
    1ea0:	ac100000 	ldcge	0, cr0, [r0], {-0}
    1ea4:	34000000 	strcc	r0, [r0], #-0
    1ea8:	09c50908 	stmibeq	r5, {r3, r8, fp}^
    1eac:	770f0000 	strvc	r0, [pc, -r0]
    1eb0:	08000001 	stmdaeq	r0, {r0}
    1eb4:	00005d0a 	andeq	r5, r0, sl, lsl #26
    1eb8:	a00f0000 	andge	r0, pc, r0
    1ebc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1ec0:	00005d0b 	andeq	r5, r0, fp, lsl #26
    1ec4:	a60f0400 	strge	r0, [pc], -r0, lsl #8
    1ec8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1ecc:	00005d0c 	andeq	r5, r0, ip, lsl #26
    1ed0:	70110800 	andsvc	r0, r1, r0, lsl #16
    1ed4:	0d080078 	stceq	0, cr0, [r8, #-480]	; 0xfffffe20
    1ed8:	000009c5 	andeq	r0, r0, r5, asr #19
    1edc:	7e0c000c 	cdpvc	0, 0, cr0, cr12, cr12, {0}
    1ee0:	d5000009 	strle	r0, [r0, #-9]
    1ee4:	0d000009 	stceq	0, cr0, [r0, #-36]	; 0xffffffdc
    1ee8:	00000069 	andeq	r0, r0, r9, rrx
    1eec:	00060013 	andeq	r0, r6, r3, lsl r0
    1ef0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1ef4:	0009e00e 	andeq	lr, r9, lr
    1ef8:	89040700 	stmdbhi	r4, {r8, r9, sl}
    1efc:	10000009 	andne	r0, r0, r9
    1f00:	0000018b 	andeq	r0, r0, fp, lsl #3
    1f04:	5f100824 	svcpl	0x00100824
    1f08:	1100000a 	tstne	r0, sl
    1f0c:	006f6567 	rsbeq	r6, pc, r7, ror #10
    1f10:	09d51108 	ldmibeq	r5, {r3, r8, ip}^
    1f14:	0f000000 	svceq	0x00000000
    1f18:	00000181 	andeq	r0, r0, r1, lsl #3
    1f1c:	005d1208 	subseq	r1, sp, r8, lsl #4
    1f20:	0f040000 	svceq	0x00040000
    1f24:	00000186 	andeq	r0, r0, r6, lsl #3
    1f28:	005d1208 	subseq	r1, sp, r8, lsl #4
    1f2c:	0f080000 	svceq	0x00080000
    1f30:	00000018 	andeq	r0, r0, r8, lsl r0
    1f34:	005d1308 	subseq	r1, sp, r8, lsl #6
    1f38:	0f0c0000 	svceq	0x000c0000
    1f3c:	0000001d 	andeq	r0, r0, sp, lsl r0
    1f40:	005d1308 	subseq	r1, sp, r8, lsl #6
    1f44:	0f100000 	svceq	0x00100000
    1f48:	000000f1 	strdeq	r0, [r0], -r1
    1f4c:	0a701408 	beq	1c06f74 <startup-0x1e3f908c>
    1f50:	0f140000 	svceq	0x00140000
    1f54:	000007d6 	ldrdeq	r0, [r0], -r6
    1f58:	0a701508 	beq	1c07380 <startup-0x1e3f8c80>
    1f5c:	0f180000 	svceq	0x00180000
    1f60:	00000051 	andeq	r0, r0, r1, asr r0
    1f64:	0a701608 	beq	1c0778c <startup-0x1e3f8874>
    1f68:	0f1c0000 	svceq	0x001c0000
    1f6c:	00000071 	andeq	r0, r0, r1, ror r0
    1f70:	0a8b1708 	beq	fe2c7b98 <ball+0xde2c6f9c>
    1f74:	00200000 	eoreq	r0, r0, r0
    1f78:	000a6a1f 	andeq	r6, sl, pc, lsl sl
    1f7c:	0a6a1600 	beq	1a87784 <startup-0x1e57887c>
    1f80:	07000000 	streq	r0, [r0, -r0]
    1f84:	0009e604 	andeq	lr, r9, r4, lsl #12
    1f88:	5f040700 	svcpl	0x00040700
    1f8c:	1f00000a 	svcne	0x0000000a
    1f90:	00000a8b 	andeq	r0, r0, fp, lsl #21
    1f94:	000a6a16 	andeq	r6, sl, r6, lsl sl
    1f98:	005d1600 	subseq	r1, sp, r0, lsl #12
    1f9c:	5d160000 	ldcpl	0, cr0, [r6, #-0]
    1fa0:	00000000 	andeq	r0, r0, r0
    1fa4:	0a760407 	beq	1d82fc8 <startup-0x1e27d038>
    1fa8:	94060000 	strls	r0, [r6], #-0
    1fac:	08000001 	stmdaeq	r0, {r0}
    1fb0:	0009e618 	andeq	lr, r9, r8, lsl r6
    1fb4:	01930600 	orrseq	r0, r3, r0, lsl #12
    1fb8:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    1fbc:	00000a6a 	andeq	r0, r0, sl, ror #20
    1fc0:	0008ca22 	andeq	ip, r8, r2, lsr #20
    1fc4:	91060900 	tstls	r6, r0, lsl #18
    1fc8:	2300000a 	movwcs	r0, #10
    1fcc:	0000094c 	andeq	r0, r0, ip, asr #18
    1fd0:	0ad83701 	beq	ff60fbdc <ball+0xdf60efe0>
    1fd4:	008c2000 	addeq	r2, ip, r0
    1fd8:	9c010000 	stcls	0, cr0, [r1], {-0}
    1fdc:	00000b2a 	andeq	r0, r0, sl, lsr #22
    1fe0:	01006324 	tsteq	r0, r4, lsr #6
    1fe4:	00055e39 	andeq	r5, r5, r9, lsr lr
    1fe8:	73910200 	orrsvc	r0, r1, #0, 4
    1fec:	01007024 	tsteq	r0, r4, lsr #32
    1ff0:	000a9c3a 	andeq	r9, sl, sl, lsr ip
    1ff4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1ff8:	0007dc25 	andeq	sp, r7, r5, lsr #24
    1ffc:	5d3c0100 	ldfpls	f0, [ip, #-0]
    2000:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    2004:	2600000a 	strcs	r0, [r0], -sl
    2008:	089b2500 	ldmeq	fp, {r8, sl, sp}
    200c:	3d010000 	stccc	0, cr0, [r1, #-0]
    2010:	0000005d 	andeq	r0, r0, sp, asr r0
    2014:	00000b01 	andeq	r0, r0, r1, lsl #22
    2018:	ee270026 	cdp	0, 2, cr0, cr7, cr6, {1}
    201c:	7020000a 	eorvc	r0, r0, sl
    2020:	25000000 	strcs	r0, [r0, #-0]
    2024:	00000626 	andeq	r0, r0, r6, lsr #12
    2028:	005d4101 	subseq	r4, sp, r1, lsl #2
    202c:	0b1b0000 	bleq	6c2034 <startup-0x1f93dfcc>
    2030:	00260000 	eoreq	r0, r6, r0
    2034:	0003c528 	andeq	ip, r3, r8, lsr #10
    2038:	5d420100 	stfple	f0, [r2, #-0]
    203c:	26000000 	strcs	r0, [r0], -r0
    2040:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    2044:	00000943 	andeq	r0, r0, r3, asr #18
    2048:	0a542401 	beq	150b054 <startup-0x1eaf4fac>
    204c:	00842000 	addeq	r2, r4, r0
    2050:	9c010000 	stcls	0, cr0, [r1], {-0}
    2054:	00093b29 	andeq	r3, r9, r9, lsr #22
    2058:	00180100 	andseq	r0, r8, r0, lsl #2
    205c:	0c200000 	stceq	0, cr0, [r0], #-0
    2060:	01000000 	mrseq	r0, (UNDEF: 0)
    2064:	Address 0x0000000000002064 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0024 	bleq	2c00ac <startup-0x1fd3ff54>
  18:	0e030b3e 	vmoveq.16	d3[0], r0
  1c:	13030000 	movwne	r0, #12288	; 0x3000
  20:	0b0e0301 	bleq	380c2c <startup-0x1fc7f3d4>
  24:	3b0b3a0b 	blcc	2ce858 <startup-0x1fd317a8>
  28:	0013010b 	andseq	r0, r3, fp, lsl #2
  2c:	000d0400 	andeq	r0, sp, r0, lsl #8
  30:	0b3a0803 	bleq	e82044 <startup-0x1f17dfbc>
  34:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  38:	00000b38 	andeq	r0, r0, r8, lsr fp
  3c:	03001605 	movweq	r1, #1541	; 0x605
  40:	3b0b3a0e 	blcc	2ce880 <startup-0x1fd31780>
  44:	0013490b 	andseq	r4, r3, fp, lsl #18
  48:	000d0600 	andeq	r0, sp, r0, lsl #12
  4c:	0b3a0e03 	bleq	e83860 <startup-0x1f17c7a0>
  50:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  54:	00000b38 	andeq	r0, r0, r8, lsr fp
  58:	0b002407 	bleq	907c <startup-0x1fff6f84>
  5c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  60:	08000008 	stmdaeq	r0, {r3}
  64:	13490101 	movtne	r0, #37121	; 0x9101
  68:	00001301 	andeq	r1, r0, r1, lsl #6
  6c:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
  70:	000b2f13 	andeq	r2, fp, r3, lsl pc
  74:	000f0a00 	andeq	r0, pc, r0, lsl #20
  78:	13490b0b 	movtne	r0, #39691	; 0x9b0b
  7c:	150b0000 	strne	r0, [fp, #-0]
  80:	01192701 	tsteq	r9, r1, lsl #14
  84:	0c000013 	stceq	0, cr0, [r0], {19}
  88:	13490005 	movtne	r0, #36869	; 0x9005
  8c:	340d0000 	strcc	r0, [sp], #-0
  90:	3a0e0300 	bcc	380c98 <startup-0x1fc7f368>
  94:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  98:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
  9c:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
  a0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  a4:	0b3a0e03 	bleq	e838b8 <startup-0x1f17c748>
  a8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  ac:	06120111 			; <UNDEFINED> instruction: 0x06120111
  b0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  b4:	0f000019 	svceq	0x00000019
  b8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
  bc:	0b3b0b3a 	bleq	ec2dac <startup-0x1f13d254>
  c0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  c4:	01000000 	mrseq	r0, (UNDEF: 0)
  c8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
  cc:	0e030b13 	vmoveq.32	d3[0], r0
  d0:	01110e1b 	tsteq	r1, fp, lsl lr
  d4:	17100612 			; <UNDEFINED> instruction: 0x17100612
  d8:	24020000 	strcs	r0, [r2], #-0
  dc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  e0:	000e030b 	andeq	r0, lr, fp, lsl #6
  e4:	00240300 	eoreq	r0, r4, r0, lsl #6
  e8:	0b3e0b0b 	bleq	f82d1c <startup-0x1f07d2e4>
  ec:	00000803 	andeq	r0, r0, r3, lsl #16
  f0:	0b000f04 	bleq	3d08 <startup-0x1fffc2f8>
  f4:	0500000b 	streq	r0, [r0, #-11]
  f8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  fc:	0b3b0b3a 	bleq	ec2dec <startup-0x1f13d214>
 100:	00001349 	andeq	r1, r0, r9, asr #6
 104:	0b000f06 	bleq	3d24 <startup-0x1fffc2dc>
 108:	0013490b 	andseq	r4, r3, fp, lsl #18
 10c:	00130700 	andseq	r0, r3, r0, lsl #14
 110:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
 114:	16080000 	strne	r0, [r8], -r0
 118:	3a0e0300 	bcc	380d20 <startup-0x1fc7f2e0>
 11c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 120:	09000013 	stmdbeq	r0, {r0, r1, r4}
 124:	0b0b0117 	bleq	2c0588 <startup-0x1fd3fa78>
 128:	0b3b0b3a 	bleq	ec2e18 <startup-0x1f13d1e8>
 12c:	00001301 	andeq	r1, r0, r1, lsl #6
 130:	03000d0a 	movweq	r0, #3338	; 0xd0a
 134:	3b0b3a0e 	blcc	2ce974 <startup-0x1fd3168c>
 138:	0013490b 	andseq	r4, r3, fp, lsl #18
 13c:	01010b00 	tsteq	r1, r0, lsl #22
 140:	13011349 	movwne	r1, #4937	; 0x1349
 144:	210c0000 	mrscs	r0, (UNDEF: 12)
 148:	2f134900 	svccs	0x00134900
 14c:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
 150:	0b0b0113 	bleq	2c05a4 <startup-0x1fd3fa5c>
 154:	0b3b0b3a 	bleq	ec2e44 <startup-0x1f13d1bc>
 158:	00001301 	andeq	r1, r0, r1, lsl #6
 15c:	03000d0e 	movweq	r0, #3342	; 0xd0e
 160:	3b0b3a0e 	blcc	2ce9a0 <startup-0x1fd31660>
 164:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 168:	0f00000b 	svceq	0x0000000b
 16c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 170:	0b3a0b0b 	bleq	e82da4 <startup-0x1f17d25c>
 174:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 178:	0d100000 	ldceq	0, cr0, [r0, #-0]
 17c:	3a080300 	bcc	200d84 <startup-0x1fdff27c>
 180:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 184:	000b3813 	andeq	r3, fp, r3, lsl r8
 188:	01131100 	tsteq	r3, r0, lsl #2
 18c:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 190:	0b3b0b3a 	bleq	ec2e80 <startup-0x1f13d180>
 194:	00001301 	andeq	r1, r0, r1, lsl #6
 198:	03000d12 	movweq	r0, #3346	; 0xd12
 19c:	3b0b3a0e 	blcc	2ce9dc <startup-0x1fd31624>
 1a0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 1a4:	13000005 	movwne	r0, #5
 1a8:	19270015 	stmdbne	r7!, {r0, r2, r4}
 1ac:	15140000 	ldrne	r0, [r4, #-0]
 1b0:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
 1b4:	00130113 	andseq	r0, r3, r3, lsl r1
 1b8:	00051500 	andeq	r1, r5, r0, lsl #10
 1bc:	00001349 	andeq	r1, r0, r9, asr #6
 1c0:	49002616 	stmdbmi	r0, {r1, r2, r4, r9, sl, sp}
 1c4:	17000013 	smladne	r0, r3, r0, r0
 1c8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 1cc:	0b3a050b 	bleq	e81600 <startup-0x1f17ea00>
 1d0:	1301053b 	movwne	r0, #5435	; 0x153b
 1d4:	0d180000 	ldceq	0, cr0, [r8, #-0]
 1d8:	3a0e0300 	bcc	380de0 <startup-0x1fc7f220>
 1dc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 1e0:	000b3813 	andeq	r3, fp, r3, lsl r8
 1e4:	000d1900 	andeq	r1, sp, r0, lsl #18
 1e8:	0b3a0e03 	bleq	e839fc <startup-0x1f17c604>
 1ec:	1349053b 	movtne	r0, #38203	; 0x953b
 1f0:	00000538 	andeq	r0, r0, r8, lsr r5
 1f4:	0301131a 	movweq	r1, #4890	; 0x131a
 1f8:	3a0b0b0e 	bcc	2c2e38 <startup-0x1fd3d1c8>
 1fc:	01053b0b 	tsteq	r5, fp, lsl #22
 200:	1b000013 	blne	254 <startup-0x1ffffdac>
 204:	0b0b0113 	bleq	2c0658 <startup-0x1fd3f9a8>
 208:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 20c:	00001301 	andeq	r1, r0, r1, lsl #6
 210:	0b01171c 	bleq	45e88 <startup-0x1ffba178>
 214:	3b0b3a0b 	blcc	2cea48 <startup-0x1fd315b8>
 218:	00130105 	andseq	r0, r3, r5, lsl #2
 21c:	000d1d00 	andeq	r1, sp, r0, lsl #26
 220:	0b3a0e03 	bleq	e83a34 <startup-0x1f17c5cc>
 224:	1349053b 	movtne	r0, #38203	; 0x953b
 228:	151e0000 	ldrne	r0, [lr, #-0]
 22c:	01192701 	tsteq	r9, r1, lsl #14
 230:	1f000013 	svcne	0x00000013
 234:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 238:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 23c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 240:	0000193c 	andeq	r1, r0, ip, lsr r9
 244:	3f012e20 	svccc	0x00012e20
 248:	3a0e0319 	bcc	380eb4 <startup-0x1fc7f14c>
 24c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 250:	11134919 	tstne	r3, r9, lsl r9
 254:	40061201 	andmi	r1, r6, r1, lsl #4
 258:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 25c:	00001301 	andeq	r1, r0, r1, lsl #6
 260:	03003421 	movweq	r3, #1057	; 0x421
 264:	3b0b3a08 	blcc	2cea8c <startup-0x1fd31574>
 268:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 26c:	22000018 	andcs	r0, r0, #24
 270:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 274:	0b3a0e03 	bleq	e83a88 <startup-0x1f17c578>
 278:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 27c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 280:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 284:	23000019 	movwcs	r0, #25
 288:	08030005 	stmdaeq	r3, {r0, r2}
 28c:	0b3b0b3a 	bleq	ec2f7c <startup-0x1f13d084>
 290:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 294:	01000000 	mrseq	r0, (UNDEF: 0)
 298:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 29c:	0e030b13 	vmoveq.32	d3[0], r0
 2a0:	01110e1b 	tsteq	r1, fp, lsl lr
 2a4:	17100612 			; <UNDEFINED> instruction: 0x17100612
 2a8:	24020000 	strcs	r0, [r2], #-0
 2ac:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 2b0:	000e030b 	andeq	r0, lr, fp, lsl #6
 2b4:	00340300 	eorseq	r0, r4, r0, lsl #6
 2b8:	0b3a0e03 	bleq	e83acc <startup-0x1f17c534>
 2bc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 2c0:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 2c4:	24040000 	strcs	r0, [r4], #-0
 2c8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 2cc:	0008030b 	andeq	r0, r8, fp, lsl #6
 2d0:	00350500 	eorseq	r0, r5, r0, lsl #10
 2d4:	00001349 	andeq	r1, r0, r9, asr #6
 2d8:	3f012e06 	svccc	0x00012e06
 2dc:	3a0e0319 	bcc	380f48 <startup-0x1fc7f0b8>
 2e0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 2e4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 2e8:	96184006 	ldrls	r4, [r8], -r6
 2ec:	13011942 	movwne	r1, #6466	; 0x1942
 2f0:	05070000 	streq	r0, [r7, #-0]
 2f4:	3a0e0300 	bcc	380efc <startup-0x1fc7f104>
 2f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2fc:	00180213 	andseq	r0, r8, r3, lsl r2
 300:	002e0800 	eoreq	r0, lr, r0, lsl #16
 304:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 308:	0b3b0b3a 	bleq	ec2ff8 <startup-0x1f13d008>
 30c:	01111927 	tsteq	r1, r7, lsr #18
 310:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 314:	00194297 	mulseq	r9, r7, r2
 318:	00050900 	andeq	r0, r5, r0, lsl #18
 31c:	0b3a0803 	bleq	e82330 <startup-0x1f17dcd0>
 320:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 324:	00001802 	andeq	r1, r0, r2, lsl #16
 328:	3f002e0a 	svccc	0x00002e0a
 32c:	3a0e0319 	bcc	380f98 <startup-0x1fc7f068>
 330:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 334:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 338:	96184006 	ldrls	r4, [r8], -r6
 33c:	00001942 	andeq	r1, r0, r2, asr #18
 340:	01110100 	tsteq	r1, r0, lsl #2
 344:	0b130e25 	bleq	4c3be0 <startup-0x1fb3c420>
 348:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 34c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 350:	00001710 	andeq	r1, r0, r0, lsl r7
 354:	0b002402 	bleq	9364 <startup-0x1fff6c9c>
 358:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 35c:	0300000e 	movweq	r0, #14
 360:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 364:	0b3a0b0b 	bleq	e82f98 <startup-0x1f17d068>
 368:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 36c:	0d040000 	stceq	0, cr0, [r4, #-0]
 370:	3a080300 	bcc	200f78 <startup-0x1fdff088>
 374:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 378:	000b3813 	andeq	r3, fp, r3, lsl r8
 37c:	00160500 	andseq	r0, r6, r0, lsl #10
 380:	0b3a0e03 	bleq	e83b94 <startup-0x1f17c46c>
 384:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 388:	0d060000 	stceq	0, cr0, [r6, #-0]
 38c:	3a0e0300 	bcc	380f94 <startup-0x1fc7f06c>
 390:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 394:	000b3813 	andeq	r3, fp, r3, lsl r8
 398:	00240700 	eoreq	r0, r4, r0, lsl #14
 39c:	0b3e0b0b 	bleq	f82fd0 <startup-0x1f07d030>
 3a0:	00000803 	andeq	r0, r0, r3, lsl #16
 3a4:	49010108 	stmdbmi	r1, {r3, r8}
 3a8:	00130113 	andseq	r0, r3, r3, lsl r1
 3ac:	00210900 	eoreq	r0, r1, r0, lsl #18
 3b0:	0b2f1349 	bleq	bc50dc <startup-0x1f43af24>
 3b4:	0f0a0000 	svceq	0x000a0000
 3b8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 3bc:	0b000013 	bleq	410 <startup-0x1ffffbf0>
 3c0:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
 3c4:	00001301 	andeq	r1, r0, r1, lsl #6
 3c8:	4900050c 	stmdbmi	r0, {r2, r3, r8, sl}
 3cc:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 3d0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 3d4:	0b3a0e03 	bleq	e83be8 <startup-0x1f17c418>
 3d8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 3dc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 3e0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 3e4:	00130119 	andseq	r0, r3, r9, lsl r1
 3e8:	00050e00 	andeq	r0, r5, r0, lsl #28
 3ec:	0b3a0803 	bleq	e82400 <startup-0x1f17dc00>
 3f0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 3f4:	00001802 	andeq	r1, r0, r2, lsl #16
 3f8:	11010b0f 	tstne	r1, pc, lsl #22
 3fc:	00061201 	andeq	r1, r6, r1, lsl #4
 400:	00341000 	eorseq	r1, r4, r0
 404:	0b3a0803 	bleq	e82418 <startup-0x1f17dbe8>
 408:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 40c:	00001802 	andeq	r1, r0, r2, lsl #16
 410:	3f012e11 	svccc	0x00012e11
 414:	3a0e0319 	bcc	381080 <startup-0x1fc7ef80>
 418:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 41c:	00193c13 	andseq	r3, r9, r3, lsl ip
 420:	00181200 	andseq	r1, r8, r0, lsl #4
 424:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
 428:	03193f01 	tsteq	r9, #1, 30
 42c:	3b0b3a0e 	blcc	2cec6c <startup-0x1fd31394>
 430:	1119270b 	tstne	r9, fp, lsl #14
 434:	40061201 	andmi	r1, r6, r1, lsl #4
 438:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 43c:	05140000 	ldreq	r0, [r4, #-0]
 440:	3a0e0300 	bcc	381048 <startup-0x1fc7efb8>
 444:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 448:	00180213 	andseq	r0, r8, r3, lsl r2
 44c:	11010000 	mrsne	r0, (UNDEF: 1)
 450:	130e2501 	movwne	r2, #58625	; 0xe501
 454:	1b0e030b 	blne	381088 <startup-0x1fc7ef78>
 458:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 45c:	00171006 	andseq	r1, r7, r6
 460:	00240200 	eoreq	r0, r4, r0, lsl #4
 464:	0b3e0b0b 	bleq	f83098 <startup-0x1f07cf68>
 468:	00000e03 	andeq	r0, r0, r3, lsl #28
 46c:	03003403 	movweq	r3, #1027	; 0x403
 470:	3b0b3a0e 	blcc	2cecb0 <startup-0x1fd31350>
 474:	3f13490b 	svccc	0x0013490b
 478:	00180219 	andseq	r0, r8, r9, lsl r2
 47c:	00240400 	eoreq	r0, r4, r0, lsl #8
 480:	0b3e0b0b 	bleq	f830b4 <startup-0x1f07cf4c>
 484:	00000803 	andeq	r0, r0, r3, lsl #16
 488:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
 48c:	06000013 			; <UNDEFINED> instruction: 0x06000013
 490:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 494:	0b3a0e03 	bleq	e83ca8 <startup-0x1f17c358>
 498:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 49c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 4a0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 4a4:	07000019 	smladeq	r0, r9, r0, r0
 4a8:	0111010b 	tsteq	r1, fp, lsl #2
 4ac:	00000612 	andeq	r0, r0, r2, lsl r6
 4b0:	3f012e08 	svccc	0x00012e08
 4b4:	3a0e0319 	bcc	381120 <startup-0x1fc7eee0>
 4b8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4bc:	00193c13 	andseq	r3, r9, r3, lsl ip
 4c0:	00180900 	andseq	r0, r8, r0, lsl #18
 4c4:	01000000 	mrseq	r0, (UNDEF: 0)
 4c8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 4cc:	0e030b13 	vmoveq.32	d3[0], r0
 4d0:	01110e1b 	tsteq	r1, fp, lsl lr
 4d4:	17100612 			; <UNDEFINED> instruction: 0x17100612
 4d8:	13020000 	movwne	r0, #8192	; 0x2000
 4dc:	3a0b0b01 	bcc	2c30e8 <startup-0x1fd3cf18>
 4e0:	010b3b0b 	tsteq	fp, fp, lsl #22
 4e4:	03000013 	movweq	r0, #19
 4e8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 4ec:	0b3b0b3a 	bleq	ec31dc <startup-0x1f13ce24>
 4f0:	0b381349 	bleq	e0521c <startup-0x1f1fade4>
 4f4:	24040000 	strcs	r0, [r4], #-0
 4f8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 4fc:	000e030b 	andeq	r0, lr, fp, lsl #6
 500:	00160500 	andseq	r0, r6, r0, lsl #10
 504:	0b3a0e03 	bleq	e83d18 <startup-0x1f17c2e8>
 508:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 50c:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
 510:	03193f01 	tsteq	r9, #1, 30
 514:	3b0b3a0e 	blcc	2ced54 <startup-0x1fd312ac>
 518:	1119270b 	tstne	r9, fp, lsl #14
 51c:	40061201 	andmi	r1, r6, r1, lsl #4
 520:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 524:	00001301 	andeq	r1, r0, r1, lsl #6
 528:	03000507 	movweq	r0, #1287	; 0x507
 52c:	3b0b3a08 	blcc	2ced54 <startup-0x1fd312ac>
 530:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 534:	08000018 	stmdaeq	r0, {r3, r4}
 538:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 53c:	0b3b0b3a 	bleq	ec322c <startup-0x1f13cdd4>
 540:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 544:	0b090000 	bleq	24054c <startup-0x1fdbfab4>
 548:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 54c:	0a000006 	beq	56c <startup-0x1ffffa94>
 550:	08030034 	stmdaeq	r3, {r2, r4, r5}
 554:	0b3b0b3a 	bleq	ec3244 <startup-0x1f13cdbc>
 558:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 55c:	240b0000 	strcs	r0, [fp], #-0
 560:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 564:	0008030b 	andeq	r0, r8, fp, lsl #6
 568:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
 56c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 570:	0b3b0b3a 	bleq	ec3260 <startup-0x1f13cda0>
 574:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
 578:	00001301 	andeq	r1, r0, r1, lsl #6
 57c:	0000180d 	andeq	r1, r0, sp, lsl #16
 580:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
 584:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 588:	0b3b0b3a 	bleq	ec3278 <startup-0x1f13cd88>
 58c:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
 590:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
 594:	03193f01 	tsteq	r9, #1, 30
 598:	3b0b3a0e 	blcc	2cedd8 <startup-0x1fd31228>
 59c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 5a0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 5a4:	96184006 	ldrls	r4, [r8], -r6
 5a8:	13011942 	movwne	r1, #6466	; 0x1942
 5ac:	05100000 	ldreq	r0, [r0, #-0]
 5b0:	3a0e0300 	bcc	3811b8 <startup-0x1fc7ee48>
 5b4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5b8:	00180213 	andseq	r0, r8, r3, lsl r2
 5bc:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
 5c0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 5c4:	0b3b0b3a 	bleq	ec32b4 <startup-0x1f13cd4c>
 5c8:	01111927 	tsteq	r1, r7, lsr #18
 5cc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 5d0:	01194297 			; <UNDEFINED> instruction: 0x01194297
 5d4:	12000013 	andne	r0, r0, #19
 5d8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 5dc:	0b3a0e03 	bleq	e83df0 <startup-0x1f17c210>
 5e0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 5e4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 5e8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 5ec:	00000019 	andeq	r0, r0, r9, lsl r0
 5f0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 5f4:	030b130e 	movweq	r1, #45838	; 0xb30e
 5f8:	110e1b0e 	tstne	lr, lr, lsl #22
 5fc:	10061201 	andne	r1, r6, r1, lsl #4
 600:	02000017 	andeq	r0, r0, #23
 604:	0b0b0024 	bleq	2c069c <startup-0x1fd3f964>
 608:	0e030b3e 	vmoveq.16	d3[0], r0
 60c:	13030000 	movwne	r0, #12288	; 0x3000
 610:	0b0e0301 	bleq	38121c <startup-0x1fc7ede4>
 614:	3b0b3a0b 	blcc	2cee48 <startup-0x1fd311b8>
 618:	0013010b 	andseq	r0, r3, fp, lsl #2
 61c:	000d0400 	andeq	r0, sp, r0, lsl #8
 620:	0b3a0803 	bleq	e82634 <startup-0x1f17d9cc>
 624:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 628:	00000b38 	andeq	r0, r0, r8, lsr fp
 62c:	03001605 	movweq	r1, #1541	; 0x605
 630:	3b0b3a0e 	blcc	2cee70 <startup-0x1fd31190>
 634:	0013490b 	andseq	r4, r3, fp, lsl #18
 638:	000d0600 	andeq	r0, sp, r0, lsl #12
 63c:	0b3a0e03 	bleq	e83e50 <startup-0x1f17c1b0>
 640:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 644:	00000b38 	andeq	r0, r0, r8, lsr fp
 648:	0b002407 	bleq	966c <startup-0x1fff6994>
 64c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 650:	08000008 	stmdaeq	r0, {r3}
 654:	13490101 	movtne	r0, #37121	; 0x9101
 658:	00001301 	andeq	r1, r0, r1, lsl #6
 65c:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
 660:	000b2f13 	andeq	r2, fp, r3, lsl pc
 664:	000f0a00 	andeq	r0, pc, r0, lsl #20
 668:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 66c:	150b0000 	strne	r0, [fp, #-0]
 670:	01192701 	tsteq	r9, r1, lsl #14
 674:	0c000013 	stceq	0, cr0, [r0], {19}
 678:	13490005 	movtne	r0, #36869	; 0x9005
 67c:	340d0000 	strcc	r0, [sp], #-0
 680:	3a0e0300 	bcc	381288 <startup-0x1fc7ed78>
 684:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 688:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 68c:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
 690:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 694:	0b3a0e03 	bleq	e83ea8 <startup-0x1f17c158>
 698:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 69c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 6a0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 6a4:	0f000019 	svceq	0x00000019
 6a8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 6ac:	0b3b0b3a 	bleq	ec339c <startup-0x1f13cc64>
 6b0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 6b4:	01000000 	mrseq	r0, (UNDEF: 0)
 6b8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 6bc:	0e030b13 	vmoveq.32	d3[0], r0
 6c0:	17550e1b 	smmlane	r5, fp, lr, r0
 6c4:	17100111 			; <UNDEFINED> instruction: 0x17100111
 6c8:	24020000 	strcs	r0, [r2], #-0
 6cc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 6d0:	000e030b 	andeq	r0, lr, fp, lsl #6
 6d4:	00240300 	eoreq	r0, r4, r0, lsl #6
 6d8:	0b3e0b0b 	bleq	f8330c <startup-0x1f07ccf4>
 6dc:	00000803 	andeq	r0, r0, r3, lsl #16
 6e0:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
 6e4:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 6e8:	0b0b000f 	bleq	2c072c <startup-0x1fd3f8d4>
 6ec:	16060000 	strne	r0, [r6], -r0
 6f0:	3a0e0300 	bcc	3812f8 <startup-0x1fc7ed08>
 6f4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 6f8:	07000013 	smladeq	r0, r3, r0, r0
 6fc:	0b0b000f 	bleq	2c0740 <startup-0x1fd3f8c0>
 700:	00001349 	andeq	r1, r0, r9, asr #6
 704:	03001308 	movweq	r1, #776	; 0x308
 708:	00193c0e 	andseq	r3, r9, lr, lsl #24
 70c:	00160900 	andseq	r0, r6, r0, lsl #18
 710:	0b3a0e03 	bleq	e83f24 <startup-0x1f17c0dc>
 714:	1349053b 	movtne	r0, #38203	; 0x953b
 718:	170a0000 	strne	r0, [sl, -r0]
 71c:	3a0b0b01 	bcc	2c3328 <startup-0x1fd3ccd8>
 720:	010b3b0b 	tsteq	fp, fp, lsl #22
 724:	0b000013 	bleq	778 <startup-0x1ffff888>
 728:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 72c:	0b3b0b3a 	bleq	ec341c <startup-0x1f13cbe4>
 730:	00001349 	andeq	r1, r0, r9, asr #6
 734:	4901010c 	stmdbmi	r1, {r2, r3, r8}
 738:	00130113 	andseq	r0, r3, r3, lsl r1
 73c:	00210d00 	eoreq	r0, r1, r0, lsl #26
 740:	0b2f1349 	bleq	bc546c <startup-0x1f43ab94>
 744:	130e0000 	movwne	r0, #57344	; 0xe000
 748:	3a0b0b01 	bcc	2c3354 <startup-0x1fd3ccac>
 74c:	010b3b0b 	tsteq	fp, fp, lsl #22
 750:	0f000013 	svceq	0x00000013
 754:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 758:	0b3b0b3a 	bleq	ec3448 <startup-0x1f13cbb8>
 75c:	0b381349 	bleq	e05488 <startup-0x1f1fab78>
 760:	13100000 	tstne	r0, #0
 764:	0b0e0301 	bleq	381370 <startup-0x1fc7ec90>
 768:	3b0b3a0b 	blcc	2cef9c <startup-0x1fd31064>
 76c:	0013010b 	andseq	r0, r3, fp, lsl #2
 770:	000d1100 	andeq	r1, sp, r0, lsl #2
 774:	0b3a0803 	bleq	e82788 <startup-0x1f17d878>
 778:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 77c:	00000b38 	andeq	r0, r0, r8, lsr fp
 780:	03011312 	movweq	r1, #4882	; 0x1312
 784:	3a050b0e 	bcc	1433c4 <startup-0x1febcc3c>
 788:	010b3b0b 	tsteq	fp, fp, lsl #22
 78c:	13000013 	movwne	r0, #19
 790:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 794:	0b3b0b3a 	bleq	ec3484 <startup-0x1f13cb7c>
 798:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 79c:	15140000 	ldrne	r0, [r4, #-0]
 7a0:	00192700 	andseq	r2, r9, r0, lsl #14
 7a4:	01151500 	tsteq	r5, r0, lsl #10
 7a8:	13491927 	movtne	r1, #39207	; 0x9927
 7ac:	00001301 	andeq	r1, r0, r1, lsl #6
 7b0:	49000516 	stmdbmi	r0, {r1, r2, r4, r8, sl}
 7b4:	17000013 	smladne	r0, r3, r0, r0
 7b8:	13490026 	movtne	r0, #36902	; 0x9026
 7bc:	13180000 	tstne	r8, #0
 7c0:	0b0e0301 	bleq	3813cc <startup-0x1fc7ec34>
 7c4:	3b0b3a05 	blcc	2cefe0 <startup-0x1fd31020>
 7c8:	00130105 	andseq	r0, r3, r5, lsl #2
 7cc:	000d1900 	andeq	r1, sp, r0, lsl #18
 7d0:	0b3a0e03 	bleq	e83fe4 <startup-0x1f17c01c>
 7d4:	1349053b 	movtne	r0, #38203	; 0x953b
 7d8:	00000b38 	andeq	r0, r0, r8, lsr fp
 7dc:	03000d1a 	movweq	r0, #3354	; 0xd1a
 7e0:	3b0b3a0e 	blcc	2cf020 <startup-0x1fd30fe0>
 7e4:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
 7e8:	1b000005 	blne	804 <startup-0x1ffff7fc>
 7ec:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 7f0:	0b3a0b0b 	bleq	e83424 <startup-0x1f17cbdc>
 7f4:	1301053b 	movwne	r0, #5435	; 0x153b
 7f8:	131c0000 	tstne	ip, #0
 7fc:	3a0b0b01 	bcc	2c3408 <startup-0x1fd3cbf8>
 800:	01053b0b 	tsteq	r5, fp, lsl #22
 804:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
 808:	0b0b0117 	bleq	2c0c6c <startup-0x1fd3f394>
 80c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 810:	00001301 	andeq	r1, r0, r1, lsl #6
 814:	03000d1e 	movweq	r0, #3358	; 0xd1e
 818:	3b0b3a0e 	blcc	2cf058 <startup-0x1fd30fa8>
 81c:	00134905 	andseq	r4, r3, r5, lsl #18
 820:	01151f00 	tsteq	r5, r0, lsl #30
 824:	13011927 	movwne	r1, #6439	; 0x1927
 828:	34200000 	strtcc	r0, [r0], #-0
 82c:	3a0e0300 	bcc	381434 <startup-0x1fc7ebcc>
 830:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 834:	3c193f13 	ldccc	15, cr3, [r9], {19}
 838:	21000019 	tstcs	r0, r9, lsl r0
 83c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 840:	0b3b0b3a 	bleq	ec3530 <startup-0x1f13cad0>
 844:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 848:	00001802 	andeq	r1, r0, r2, lsl #16
 84c:	03003422 	movweq	r3, #1058	; 0x422
 850:	3b0b3a0e 	blcc	2cf090 <startup-0x1fd30f70>
 854:	3f13490b 	svccc	0x0013490b
 858:	00193c19 	andseq	r3, r9, r9, lsl ip
 85c:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
 860:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 864:	0b3b0b3a 	bleq	ec3554 <startup-0x1f13caac>
 868:	01111927 	tsteq	r1, r7, lsr #18
 86c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 870:	01194296 			; <UNDEFINED> instruction: 0x01194296
 874:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
 878:	08030034 	stmdaeq	r3, {r2, r4, r5}
 87c:	0b3b0b3a 	bleq	ec356c <startup-0x1f13ca94>
 880:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 884:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
 888:	03193f01 	tsteq	r9, #1, 30
 88c:	3b0b3a0e 	blcc	2cf0cc <startup-0x1fd30f34>
 890:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 894:	00130119 	andseq	r0, r3, r9, lsl r1
 898:	00182600 	andseq	r2, r8, r0, lsl #12
 89c:	0b270000 	bleq	9c08a4 <startup-0x1f63f75c>
 8a0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 8a4:	28000006 	stmdacs	r0, {r1, r2}
 8a8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 8ac:	0b3a0e03 	bleq	e840c0 <startup-0x1f17bf40>
 8b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 8b4:	0000193c 	andeq	r1, r0, ip, lsr r9
 8b8:	3f002e29 	svccc	0x00002e29
 8bc:	3a0e0319 	bcc	381528 <startup-0x1fc7ead8>
 8c0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 8c4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 8c8:	97184006 	ldrls	r4, [r8, -r6]
 8cc:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000004c 	andeq	r0, r0, ip, asr #32
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	01d90002 	bicseq	r0, r9, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	2000005c 	andcs	r0, r0, ip, asr r0
  34:	00000174 	andeq	r0, r0, r4, ror r1
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	0bc30002 	bleq	ff0c0054 <ball+0xdf0bf458>
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	200001d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  54:	00000114 	andeq	r0, r0, r4, lsl r1
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	0cda0002 	ldcleq	0, cr0, [sl], {2}
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	200002e4 	andcs	r0, r0, r4, ror #5
  74:	000000d8 	ldrdeq	r0, [r0], -r8
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	0f330002 	svceq	0x00330002
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	200003bc 			; <UNDEFINED> instruction: 0x200003bc
  94:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	0fd60002 	svceq	0x00d60002
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	200003f8 	strdcs	r0, [r0], -r8
  b4:	00000574 	andeq	r0, r0, r4, ror r5
	...
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	13400002 	movtne	r0, #2
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	2000096c 	andcs	r0, r0, ip, ror #18
  d4:	000000e8 	andeq	r0, r0, r8, ror #1
	...
  e0:	00000024 	andeq	r0, r0, r4, lsr #32
  e4:	15190002 	ldrne	r0, [r9, #-2]
  e8:	00040000 	andeq	r0, r4, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	20000a54 	andcs	r0, r0, r4, asr sl
  f4:	00000110 	andeq	r0, r0, r0, lsl r1
  f8:	20000000 	andcs	r0, r0, r0
  fc:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000007b 	andeq	r0, r0, fp, ror r0
   4:	005e0002 	subseq	r0, lr, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  20:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
  24:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
  28:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
  2c:	616f6c6e 	cmnvs	pc, lr, ror #24
  30:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
  34:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
  38:	2f737265 	svccs	0x00737265
  3c:	2f504f4d 	svccs	0x00504f4d
  40:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
  44:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
  48:	4f000035 	svcmi	0x00000035
  4c:	61747362 	cmnvs	r4, r2, ror #6
  50:	73656c63 	cmnvc	r5, #25344	; 0x6300
  54:	0100632e 	tsteq	r0, lr, lsr #6
  58:	74730000 	ldrbtvc	r0, [r3], #-0
  5c:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
  60:	00682e73 	rsbeq	r2, r8, r3, ror lr
  64:	00000001 	andeq	r0, r0, r1
  68:	10020500 	andne	r0, r2, r0, lsl #10
  6c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  70:	4b4b010f 	blmi	12c04b4 <startup-0x1ed3fb4c>
  74:	754b224b 	strbvc	r2, [fp, #-587]	; 0xfffffdb5
  78:	03024b75 	movweq	r4, #11125	; 0x2b75
  7c:	9d010100 	stflss	f0, [r1, #-0]
  80:	02000001 	andeq	r0, r0, #1
  84:	00014600 	andeq	r4, r1, r0, lsl #12
  88:	fb010200 	blx	40892 <startup-0x1ffbf76e>
  8c:	01000d0e 	tsteq	r0, lr, lsl #26
  90:	00010101 	andeq	r0, r1, r1, lsl #2
  94:	00010000 	andeq	r0, r1, r0
  98:	552f0100 	strpl	r0, [pc, #-256]!	; ffffffa0 <ball+0xdffff3a4>
  9c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  a0:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  a4:	2f6e6176 	svccs	0x006e6176
  a8:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
  ac:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
  b0:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  b4:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
  b8:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; fffffef8 <ball+0xdffff2fc>
  bc:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; ffffff88 <ball+0xdffff38c>
  c0:	2f356261 	svccs	0x00356261
  c4:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
  c8:	70412f00 	subvc	r2, r1, r0, lsl #30
  cc:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
  d0:	6f697461 	svcvs	0x00697461
  d4:	632f736e 			; <UNDEFINED> instruction: 0x632f736e
  d8:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	; 0xfffffe44
  dc:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
  e0:	2f707061 	svccs	0x00707061
  e4:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
  e8:	73746e65 	cmnvc	r4, #1616	; 0x650
  ec:	6168532f 	cmnvs	r8, pc, lsr #6
  f0:	53646572 	cmnpl	r4, #478150656	; 0x1c800000
  f4:	6f707075 	svcvs	0x00707075
  f8:	742f7472 	strtvc	r7, [pc], #-1138	; 100 <startup-0x1fffff00>
  fc:	736c6f6f 	cmnvc	ip, #444	; 0x1bc
 100:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
 104:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
 108:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
 10c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
 110:	61652d65 	cmnvs	r5, r5, ror #26
 114:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
 118:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 11c:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
 120:	2f007379 	svccs	0x00007379
 124:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
 128:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 12c:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 130:	646f632f 	strbtvs	r6, [pc], #-815	; 138 <startup-0x1ffffec8>
 134:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 138:	70612e65 	rsbvc	r2, r1, r5, ror #28
 13c:	6f432f70 	svcvs	0x00432f70
 140:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 144:	532f7374 			; <UNDEFINED> instruction: 0x532f7374
 148:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
 14c:	70755364 	rsbsvc	r5, r5, r4, ror #6
 150:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 154:	6f6f742f 	svcvs	0x006f742f
 158:	672f736c 	strvs	r7, [pc, -ip, ror #6]!
 15c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
 160:	6c2f6d72 	stcvs	13, cr6, [pc], #-456	; ffffffa0 <ball+0xdffff3a4>
 164:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
 168:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
 16c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 170:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 174:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 178:	322e372f 	eorcc	r3, lr, #12320768	; 0xbc0000
 17c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
 180:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 184:	00006564 	andeq	r6, r0, r4, ror #10
 188:	7079656b 	rsbsvc	r6, r9, fp, ror #10
 18c:	632e6461 			; <UNDEFINED> instruction: 0x632e6461
 190:	00000100 	andeq	r0, r0, r0, lsl #2
 194:	6b636f6c 	blvs	18dbf4c <startup-0x1e7240b4>
 198:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 19c:	745f0000 	ldrbvc	r0, [pc], #-0	; 1a4 <startup-0x1ffffe5c>
 1a0:	73657079 	cmnvc	r5, #121	; 0x79
 1a4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 1a8:	74730000 	ldrbtvc	r0, [r3], #-0
 1ac:	66656464 	strbtvs	r6, [r5], -r4, ror #8
 1b0:	0300682e 	movweq	r6, #2094	; 0x82e
 1b4:	65720000 	ldrbvs	r0, [r2, #-0]!
 1b8:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 1bc:	00020068 	andeq	r0, r2, r8, rrx
 1c0:	66656400 	strbtvs	r6, [r5], -r0, lsl #8
 1c4:	73656e69 	cmnvc	r5, #1680	; 0x690
 1c8:	0100682e 	tsteq	r0, lr, lsr #16
 1cc:	00000000 	andeq	r0, r0, r0
 1d0:	005c0205 	subseq	r0, ip, r5, lsl #4
 1d4:	67162000 	ldrvs	r2, [r6, -r0]
 1d8:	4b4b4bc9 	blmi	12d3104 <startup-0x1ed2cefc>
 1dc:	3d6a3f4b 	stclcc	15, cr3, [sl, #-300]!	; 0xfffffed4
 1e0:	6859675a 	ldmdavs	r9, {r1, r3, r4, r6, r8, r9, sl, sp, lr}^
 1e4:	02003e9f 	andeq	r3, r0, #2544	; 0x9f0
 1e8:	7a030204 	bvc	c0a00 <startup-0x1ff3f600>
 1ec:	040200c8 	streq	r0, [r2], #-200	; 0xffffff38
 1f0:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 1f4:	3d580903 	vldrcc.16	s1, [r8, #-6]	; <UNPREDICTABLE>
 1f8:	01040200 	mrseq	r0, R12_usr
 1fc:	673e8521 	ldrvs	r8, [lr, -r1, lsr #10]!
 200:	3e9f6859 	mrccc	8, 4, r6, cr15, cr9, {2}
 204:	02040200 	andeq	r0, r4, #0, 4
 208:	00c87a03 	sbceq	r7, r8, r3, lsl #20
 20c:	06010402 	streq	r0, [r1], -r2, lsl #8
 210:	09030666 	stmdbeq	r3, {r1, r2, r5, r6, r9, sl}
 214:	02003d58 	andeq	r3, r0, #88, 26	; 0x1600
 218:	02210104 	eoreq	r0, r1, #4, 2
 21c:	01010007 	tsteq	r1, r7
 220:	0000009b 	muleq	r0, fp, r0
 224:	005b0002 	subseq	r0, fp, r2
 228:	01020000 	mrseq	r0, (UNDEF: 2)
 22c:	000d0efb 	strdeq	r0, [sp], -fp
 230:	01010101 	tsteq	r1, r1, lsl #2
 234:	01000000 	mrseq	r0, (UNDEF: 0)
 238:	2f010000 	svccs	0x00010000
 23c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 240:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
 244:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
 248:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 24c:	616f6c6e 	cmnvs	pc, lr, ror #24
 250:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
 254:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 258:	2f737265 	svccs	0x00737265
 25c:	2f504f4d 	svccs	0x00504f4d
 260:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 264:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 268:	64000035 	strvs	r0, [r0], #-53	; 0xffffffcb
 26c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 270:	00632e73 	rsbeq	r2, r3, r3, ror lr
 274:	67000001 	strvs	r0, [r0, -r1]
 278:	61626f6c 	cmnvs	r2, ip, ror #30
 27c:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
 280:	00000100 	andeq	r0, r0, r0, lsl #2
 284:	02050000 	andeq	r0, r5, #0
 288:	200001d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 28c:	3d3d3015 	ldccc	0, cr3, [sp, #-84]!	; 0xffffffac
 290:	02003d3d 	andeq	r3, r0, #3904	; 0xf40
 294:	20060104 	andcs	r0, r6, r4, lsl #2
 298:	a03d6706 	eorsge	r6, sp, r6, lsl #14
 29c:	3e2f2f2f 	cdpcc	15, 2, cr2, cr15, cr15, {1}
 2a0:	2f2f224c 	svccs	0x002f224c
 2a4:	4c5f292f 	mrrcmi	9, 2, r2, pc, cr15	; <UNPREDICTABLE>
 2a8:	5a57214f 	bpl	15c87ec <startup-0x1ea37814>
 2ac:	3d3d2f4c 	ldccc	15, cr2, [sp, #-304]!	; 0xfffffed0
 2b0:	ca3e3d3d 	bgt	f8f7ac <startup-0x1f070854>
 2b4:	3d3d3e4b 	ldccc	14, cr3, [sp, #-300]!	; 0xfffffed4
 2b8:	07022439 	smladxeq	r2, r9, r4, r2
 2bc:	9e010100 	adflss	f0, f1, f0
 2c0:	02000000 	andeq	r0, r0, #0
 2c4:	00005e00 	andeq	r5, r0, r0, lsl #28
 2c8:	fb010200 	blx	40ad2 <startup-0x1ffbf52e>
 2cc:	01000d0e 	tsteq	r0, lr, lsl #26
 2d0:	00010101 	andeq	r0, r1, r1, lsl #2
 2d4:	00010000 	andeq	r0, r1, r0
 2d8:	552f0100 	strpl	r0, [pc, #-256]!	; 1e0 <startup-0x1ffffe20>
 2dc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 2e0:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 2e4:	2f6e6176 	svccs	0x006e6176
 2e8:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
 2ec:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
 2f0:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 2f4:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 2f8:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; 138 <startup-0x1ffffec8>
 2fc:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; 1c8 <startup-0x1ffffe38>
 300:	2f356261 	svccs	0x00356261
 304:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 308:	65720000 	ldrbvs	r0, [r2, #-0]!
 30c:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 310:	2e676e69 	cdpcs	14, 6, cr6, cr7, cr9, {3}
 314:	00010063 	andeq	r0, r1, r3, rrx
 318:	72747300 	rsbsvc	r7, r4, #0, 6
 31c:	73746375 	cmnvc	r4, #-738197503	; 0xd4000001
 320:	0100682e 	tsteq	r0, lr, lsr #16
 324:	00000000 	andeq	r0, r0, r0
 328:	02e40205 	rsceq	r0, r4, #1342177280	; 0x50000000
 32c:	67142000 	ldrvs	r2, [r4, -r0]
 330:	4b4c3d3d 	blmi	130f82c <startup-0x1ecf07d4>
 334:	03040200 	movweq	r0, #16896	; 0x4200
 338:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 33c:	008f0803 	addeq	r0, pc, r3, lsl #16
 340:	06010402 	streq	r0, [r1], -r2, lsl #8
 344:	4c69063c 	stclmi	6, cr0, [r9], #-240	; 0xffffff10
 348:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 34c:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
 350:	8f080304 	svchi	0x00080304
 354:	01040200 	mrseq	r0, R12_usr
 358:	69063c06 	stmdbvs	r6, {r1, r2, sl, fp, ip, sp}
 35c:	01000402 	tsteq	r0, r2, lsl #8
 360:	00007201 	andeq	r7, r0, r1, lsl #4
 364:	58000200 	stmdapl	r0, {r9}
 368:	02000000 	andeq	r0, r0, #0
 36c:	0d0efb01 	vstreq	d15, [lr, #-4]
 370:	01010100 	mrseq	r0, (UNDEF: 17)
 374:	00000001 	andeq	r0, r0, r1
 378:	01000001 	tsteq	r0, r1
 37c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 380:	6b2f7372 	blvs	bdd150 <startup-0x1f422eb0>
 384:	61766965 	cmnvs	r6, r5, ror #18
 388:	6f442f6e 	svcvs	0x00442f6e
 38c:	6f6c6e77 	svcvs	0x006c6e77
 390:	2f736461 	svccs	0x00736461
 394:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 398:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 39c:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 3a0:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 3a4:	616c2f35 	cmnvs	ip, r5, lsr pc
 3a8:	00003562 	andeq	r3, r0, r2, ror #10
 3ac:	2e515249 	cdpcs	2, 5, cr5, cr1, cr9, {2}
 3b0:	00010063 	andeq	r0, r1, r3, rrx
 3b4:	6f6c6700 	svcvs	0x006c6700
 3b8:	736c6162 	cmnvc	ip, #-2147483624	; 0x80000018
 3bc:	0100682e 	tsteq	r0, lr, lsr #16
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	03bc0205 			; <UNDEFINED> instruction: 0x03bc0205
 3c8:	31162000 	tstcc	r6, r0
 3cc:	324b593d 	subcc	r5, fp, #999424	; 0xf4000
 3d0:	0a023e1e 	beq	8fc50 <startup-0x1ff703b0>
 3d4:	3f010100 	svccc	0x00010100
 3d8:	02000001 	andeq	r0, r0, #1
 3dc:	00006300 	andeq	r6, r0, r0, lsl #6
 3e0:	fb010200 	blx	40bea <startup-0x1ffbf416>
 3e4:	01000d0e 	tsteq	r0, lr, lsl #26
 3e8:	00010101 	andeq	r0, r1, r1, lsl #2
 3ec:	00010000 	andeq	r0, r1, r0
 3f0:	552f0100 	strpl	r0, [pc, #-256]!	; 2f8 <startup-0x1ffffd08>
 3f4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 3f8:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 3fc:	2f6e6176 	svccs	0x006e6176
 400:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
 404:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
 408:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 40c:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 410:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; 250 <startup-0x1ffffdb0>
 414:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; 2e0 <startup-0x1ffffd20>
 418:	2f356261 	svccs	0x00356261
 41c:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 420:	72670000 	rsbvc	r0, r7, #0
 424:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 428:	73696463 	cmnvc	r9, #1660944384	; 0x63000000
 42c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 430:	0100632e 	tsteq	r0, lr, lsr #6
 434:	65640000 	strbvs	r0, [r4, #-0]!
 438:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 43c:	00682e73 	rsbeq	r2, r8, r3, ror lr
 440:	00000001 	andeq	r0, r0, r1
 444:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
 448:	14200003 	strtne	r0, [r0], #-3
 44c:	6778e567 	ldrbvs	lr, [r8, -r7, ror #10]!
 450:	ca676ad7 	bgt	19dafb4 <startup-0x1e62504c>
 454:	3d3d223d 	lfmcc	f2, 4, [sp, #-244]!	; 0xffffff0c
 458:	223d3d22 	eorscs	r3, sp, #2176	; 0x880
 45c:	513e223d 	teqpl	lr, sp, lsr r2
 460:	3d3d3e2f 	ldccc	14, cr3, [sp, #-188]!	; 0xffffff44
 464:	3d21303d 	stccc	0, cr3, [r1, #-244]!	; 0xffffff0c
 468:	6d2a3d2f 	stcvs	13, cr3, [sl, #-188]!	; 0xffffff44
 46c:	67943d3d 			; <UNDEFINED> instruction: 0x67943d3d
 470:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
 474:	2f3d2f59 	svccs	0x003d2f59
 478:	4b3e3d59 	blmi	f8f9e4 <startup-0x1f07061c>
 47c:	3d4b3d3d 	stclcc	13, cr3, [fp, #-244]	; 0xffffff0c
 480:	91af3d30 			; <UNDEFINED> instruction: 0x91af3d30
 484:	3d2f594b 			; <UNDEFINED> instruction: 0x3d2f594b
 488:	3d593e2f 	ldclcc	14, cr3, [r9, #-188]	; 0xffffff44
 48c:	313d593d 	teqcc	sp, sp, lsr r9
 490:	693d3d3d 	ldmdbvs	sp!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
 494:	3d593d91 	ldclcc	13, cr3, [r9, #-580]	; 0xfffffdbc
 498:	914c833d 	cmpls	ip, sp, lsr r3
 49c:	3d3d593d 			; <UNDEFINED> instruction: 0x3d3d593d
 4a0:	59674c83 	stmdbpl	r7!, {r0, r1, r7, sl, fp, lr}^
 4a4:	3d2f4c67 	stccc	12, cr4, [pc, #-412]!	; 310 <startup-0x1ffffcf0>
 4a8:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
 4ac:	4b4b4b4b 	blmi	12d31e0 <startup-0x1ed2ce20>
 4b0:	3d3e3d4b 	ldccc	13, cr3, [lr, #-300]!	; 0xfffffed4
 4b4:	004bad3d 	subeq	sl, fp, sp, lsr sp
 4b8:	3d030402 	cfstrscc	mvf0, [r3, #-8]
 4bc:	03040200 	movweq	r0, #16896	; 0x4200
 4c0:	04020049 	streq	r0, [r2], #-73	; 0xffffffb7
 4c4:	003c0601 	eorseq	r0, ip, r1, lsl #12
 4c8:	06020402 	streq	r0, [r2], -r2, lsl #8
 4cc:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
 4d0:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 4d4:	00e54c43 	rsceq	r4, r5, r3, asr #24
 4d8:	06010402 	streq	r0, [r1], -r2, lsl #8
 4dc:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
 4e0:	02005802 	andeq	r5, r0, #131072	; 0x20000
 4e4:	00580304 	subseq	r0, r8, r4, lsl #6
 4e8:	58040402 	stmdapl	r4, {r1, sl}
 4ec:	08b15c06 	ldmeq	r1!, {r1, r2, sl, fp, ip, lr}
 4f0:	4b224b22 	blmi	893180 <startup-0x1f76ce80>
 4f4:	4b224b22 	blmi	893184 <startup-0x1f76ce7c>
 4f8:	4b224b22 	blmi	893188 <startup-0x1f76ce78>
 4fc:	4b224b22 	blmi	89318c <startup-0x1f76ce74>
 500:	4b694b23 	blmi	1a53194 <startup-0x1e5ace6c>
 504:	694b764b 	stmdbvs	fp, {r0, r1, r3, r6, r9, sl, ip, sp, lr}^
 508:	af91c9c9 	svcge	0x0091c9c9
 50c:	0393a04b 	orrseq	sl, r3, #75	; 0x4b
 510:	3c03ac45 	stccc	12, cr10, [r3], {69}	; 0x45
 514:	00070220 	andeq	r0, r7, r0, lsr #4
 518:	008d0101 	addeq	r0, sp, r1, lsl #2
 51c:	00020000 	andeq	r0, r2, r0
 520:	00000059 	andeq	r0, r0, r9, asr r0
 524:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 528:	0101000d 	tsteq	r1, sp
 52c:	00000101 	andeq	r0, r0, r1, lsl #2
 530:	00000100 	andeq	r0, r0, r0, lsl #2
 534:	73552f01 	cmpvc	r5, #1, 30
 538:	2f737265 	svccs	0x00737265
 53c:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 540:	442f6e61 	strtmi	r6, [pc], #-3681	; 548 <startup-0x1ffffab8>
 544:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 548:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 54c:	6168432f 	cmnvs	r8, pc, lsr #6
 550:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 554:	4f4d2f73 	svcmi	0x004d2f73
 558:	616c2f50 	cmnvs	ip, r0, asr pc
 55c:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 3dc <startup-0x1ffffc24>
 560:	00356261 	eorseq	r6, r5, r1, ror #4
 564:	6c616200 	sfmvs	f6, 2, [r1], #-0
 568:	00632e6c 	rsbeq	r2, r3, ip, ror #28
 56c:	73000001 	movwvc	r0, #1
 570:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
 574:	682e7374 	stmdavs	lr!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
 578:	00000100 	andeq	r0, r0, r0, lsl #2
 57c:	02050000 	andeq	r0, r5, #0
 580:	2000096c 	andcs	r0, r0, ip, ror #18
 584:	4b010f03 	blmi	44198 <startup-0x1ffbbe68>
 588:	844b9f4b 	strbhi	r9, [fp], #-3915	; 0xfffff0b5
 58c:	924b914b 	subls	r9, fp, #-1073741806	; 0xc0000012
 590:	0076754b 	rsbseq	r7, r6, fp, asr #10
 594:	06010402 	streq	r0, [r1], -r2, lsl #8
 598:	5b83064a 	blpl	fe0c1ec8 <ball+0xde0c12cc>
 59c:	01040200 	mrseq	r0, R12_usr
 5a0:	83064a06 	movwhi	r4, #27142	; 0x6a06
 5a4:	04024b5a 	streq	r4, [r2], #-2906	; 0xfffff4a6
 5a8:	aa010100 	bge	409b0 <startup-0x1ffbf650>
 5ac:	02000001 	andeq	r0, r0, #1
 5b0:	00016800 	andeq	r6, r1, r0, lsl #16
 5b4:	fb010200 	blx	40dbe <startup-0x1ffbf242>
 5b8:	01000d0e 	tsteq	r0, lr, lsl #26
 5bc:	00010101 	andeq	r0, r1, r1, lsl #2
 5c0:	00010000 	andeq	r0, r1, r0
 5c4:	552f0100 	strpl	r0, [pc, #-256]!	; 4cc <startup-0x1ffffb34>
 5c8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 5cc:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 5d0:	2f6e6176 	svccs	0x006e6176
 5d4:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
 5d8:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
 5dc:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 5e0:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 5e4:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; 424 <startup-0x1ffffbdc>
 5e8:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; 4b4 <startup-0x1ffffb4c>
 5ec:	2f356261 	svccs	0x00356261
 5f0:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 5f4:	70412f00 	subvc	r2, r1, r0, lsl #30
 5f8:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
 5fc:	6f697461 	svcvs	0x00697461
 600:	632f736e 			; <UNDEFINED> instruction: 0x632f736e
 604:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	; 0xfffffe44
 608:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
 60c:	2f707061 	svccs	0x00707061
 610:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 614:	73746e65 	cmnvc	r4, #1616	; 0x650
 618:	6168532f 	cmnvs	r8, pc, lsr #6
 61c:	53646572 	cmnpl	r4, #478150656	; 0x1c800000
 620:	6f707075 	svcvs	0x00707075
 624:	742f7472 	strtvc	r7, [pc], #-1138	; 62c <startup-0x1ffff9d4>
 628:	736c6f6f 	cmnvc	ip, #444	; 0x1bc
 62c:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
 630:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
 634:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
 638:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
 63c:	61652d65 	cmnvs	r5, r5, ror #26
 640:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
 644:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 648:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
 64c:	2f007379 	svccs	0x00007379
 650:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
 654:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 658:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 65c:	646f632f 	strbtvs	r6, [pc], #-815	; 664 <startup-0x1ffff99c>
 660:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 664:	70612e65 	rsbvc	r2, r1, r5, ror #28
 668:	6f432f70 	svcvs	0x00432f70
 66c:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 670:	532f7374 			; <UNDEFINED> instruction: 0x532f7374
 674:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
 678:	70755364 	rsbsvc	r5, r5, r4, ror #6
 67c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 680:	6f6f742f 	svcvs	0x006f742f
 684:	672f736c 	strvs	r7, [pc, -ip, ror #6]!
 688:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
 68c:	6c2f6d72 	stcvs	13, cr6, [pc], #-456	; 4cc <startup-0x1ffffb34>
 690:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
 694:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
 698:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 69c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 6a0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 6a4:	322e372f 	eorcc	r3, lr, #12320768	; 0xbc0000
 6a8:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
 6ac:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 6b0:	00006564 	andeq	r6, r0, r4, ror #10
 6b4:	6e69616d 	powvsez	f6, f1, #5.0
 6b8:	0100632e 	tsteq	r0, lr, lsr #6
 6bc:	6f6c0000 	svcvs	0x006c0000
 6c0:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
 6c4:	00000200 	andeq	r0, r0, r0, lsl #4
 6c8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
 6cc:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 6d0:	00000200 	andeq	r0, r0, r0, lsl #4
 6d4:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
 6d8:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
 6dc:	00000300 	andeq	r0, r0, r0, lsl #6
 6e0:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
 6e4:	00682e74 	rsbeq	r2, r8, r4, ror lr
 6e8:	64000002 	strvs	r0, [r0], #-2
 6ec:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
 6f0:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 6f4:	00000100 	andeq	r0, r0, r0, lsl #2
 6f8:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 6fc:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
 700:	00010068 	andeq	r0, r1, r8, rrx
 704:	72747300 	rsbsvc	r7, r4, #0, 6
 708:	73746375 	cmnvc	r4, #-738197503	; 0xd4000001
 70c:	0100682e 	tsteq	r0, lr, lsr #16
 710:	61620000 	cmnvs	r2, r0
 714:	682e6c6c 	stmdavs	lr!, {r2, r3, r5, r6, sl, fp, sp, lr}
 718:	00000100 	andeq	r0, r0, r0, lsl #2
 71c:	02050000 	andeq	r0, r5, #0
 720:	20000000 	andcs	r0, r0, r0
 724:	13011803 	movwne	r1, #6147	; 0x1803
 728:	0003025e 	andeq	r0, r3, lr, asr r2
 72c:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
 730:	000a5402 	andeq	r5, sl, r2, lsl #8
 734:	01230320 			; <UNDEFINED> instruction: 0x01230320
 738:	3d753d30 	ldclcc	13, cr3, [r5, #-192]!	; 0xffffff40
 73c:	3d3d3d3f 	ldccc	13, cr3, [sp, #-252]!	; 0xffffff04
 740:	083d3d3e 	ldmdaeq	sp!, {r1, r2, r3, r4, r5, r8, sl, fp, ip, sp}
 744:	2f2f3ecd 	svccs	0x002f3ecd
 748:	3d59312f 	ldfcce	f3, [r9, #-188]	; 0xffffff44
 74c:	8375c959 	cmnhi	r5, #1458176	; 0x164000
 750:	74780383 	ldrbtvc	r0, [r8], #-899	; 0xfffffc7d
 754:	01000302 	tsteq	r0, r2, lsl #6
 758:	Address 0x0000000000000758 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	4f454750 	svcmi	0x00454750
   4:	5254454d 	subspl	r4, r4, #322961408	; 0x13400000
   8:	6f6d0059 	svcvs	0x006d0059
   c:	6f5f6576 	svcvs	0x005f6576
  10:	61747362 	cmnvs	r4, r2, ror #6
  14:	00656c63 	rsbeq	r6, r5, r3, ror #24
  18:	58736f70 	ldmdapl	r3!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
  1c:	736f7000 	cmnvc	pc, #0
  20:	552f0059 	strpl	r0, [pc, #-89]!	; ffffffcf <ball+0xdffff3d3>
  24:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  28:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  2c:	2f6e6176 	svccs	0x006e6176
  30:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
  34:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
  38:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  3c:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
  40:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; fffffe80 <ball+0xdffff284>
  44:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; ffffff10 <ball+0xdffff314>
  48:	2f356261 	svccs	0x00356261
  4c:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
  50:	766f6d00 	strbtvc	r6, [pc], -r0, lsl #26
  54:	50740065 	rsbspl	r0, r4, r5, rrx
  58:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
  5c:	494f5000 	stmdbmi	pc, {ip, lr}^	; <UNPREDICTABLE>
  60:	7500544e 	strvc	r5, [r0, #-1102]	; 0xfffffbb2
  64:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
  68:	2064656e 	rsbcs	r6, r4, lr, ror #10
  6c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
  70:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
  74:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
  78:	6f006465 	svcvs	0x00006465
  7c:	61747362 	cmnvs	r4, r2, ror #6
  80:	5f656c63 	svcpl	0x00656c63
  84:	6d6f6567 	cfstr64vs	mvdx6, [pc, #-412]!	; fffffef0 <ball+0xdffff2f4>
  88:	79727465 	ldmdbvc	r2!, {r0, r2, r5, r6, sl, ip, sp, lr}^
  8c:	6f687300 	svcvs	0x00687300
  90:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
  94:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
  98:	2064656e 	rsbcs	r6, r4, lr, ror #10
  9c:	00746e69 	rsbseq	r6, r4, r9, ror #28
  a0:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
  a4:	69730058 	ldmdbvs	r3!, {r3, r4, r6}^
  a8:	0059657a 	subseq	r6, r9, sl, ror r5
  ac:	6f654774 	svcvs	0x00654774
  b0:	7274656d 	rsbsvc	r6, r4, #457179136	; 0x1b400000
  b4:	552f0079 	strpl	r0, [pc, #-121]!	; 43 <startup-0x1fffffbd>
  b8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  bc:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  c0:	2f6e6176 	svccs	0x006e6176
  c4:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
  c8:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
  cc:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  d0:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
  d4:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; ffffff14 <ball+0xdffff318>
  d8:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; ffffffa4 <ball+0xdffff3a8>
  dc:	2f356261 	svccs	0x00356261
  e0:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
  e4:	73624f2f 	cmnvc	r2, #47, 30	; 0xbc
  e8:	6c636174 	stfvse	f6, [r3], #-464	; 0xfffffe30
  ec:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
  f0:	61726400 	cmnvs	r2, r0, lsl #8
  f4:	4e470077 	mcrmi	0, 2, r0, cr7, cr7, {3}
  f8:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  fc:	2e372039 	mrccs	0, 1, r2, cr7, cr9, {1}
 100:	20312e32 	eorscs	r2, r1, r2, lsr lr
 104:	37313032 			; <UNDEFINED> instruction: 0x37313032
 108:	34303930 	ldrtcc	r3, [r0], #-2352	; 0xfffff6d0
 10c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
 110:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
 114:	5b202965 	blpl	80a6b0 <startup-0x1f7f5950>
 118:	2f4d5241 	svccs	0x004d5241
 11c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
 120:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
 124:	622d372d 	eorvs	r3, sp, #11796480	; 0xb40000
 128:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
 12c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
 130:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 134:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
 138:	30323535 	eorscc	r3, r2, r5, lsr r5
 13c:	2d205d34 	stccs	13, cr5, [r0, #-208]!	; 0xffffff30
 140:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
 144:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
 148:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
 14c:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
 150:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
 154:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
 158:	616f6c66 	cmnvs	pc, r6, ror #24
 15c:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
 160:	6f733d69 	svcvs	0x00733d69
 164:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
 168:	4f2d2067 	svcmi	0x002d2067
 16c:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
 170:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
 174:	6e003939 			; <UNDEFINED> instruction: 0x6e003939
 178:	6f506d75 	svcvs	0x00506d75
 17c:	73746e69 	cmnvc	r4, #1680	; 0x690
 180:	72696400 	rsbvc	r6, r9, #0, 8
 184:	69640058 	stmdbvs	r4!, {r3, r4, r6}^
 188:	74005972 	strvc	r5, [r0], #-2418	; 0xfffff68e
 18c:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
 190:	50007463 	andpl	r7, r0, r3, ror #8
 194:	454a424f 	strbmi	r4, [sl, #-591]	; 0xfffffdb1
 198:	5f005443 	svcpl	0x00005443
 19c:	5f6f7364 	svcpl	0x006f7364
 1a0:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
 1a4:	5f00656c 	svcpl	0x0000656c
 1a8:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 1ac:	61725f00 	cmnvs	r2, r0, lsl #30
 1b0:	3834646e 	ldmdacc	r4!, {r1, r2, r3, r5, r6, sl, sp, lr}
 1b4:	72646900 	rsbvc	r6, r4, #0, 18
 1b8:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
 1bc:	6d655f00 	stclvs	15, cr5, [r5, #-0]
 1c0:	65677265 	strbvs	r7, [r7, #-613]!	; 0xfffffd9b
 1c4:	0079636e 	rsbseq	r6, r9, lr, ror #6
 1c8:	7079746f 	rsbsvc	r7, r9, pc, ror #8
 1cc:	5f007265 	svcpl	0x00007265
 1d0:	74726377 	ldrbtvc	r6, [r2], #-887	; 0xfffffc89
 1d4:	5f626d6f 	svcpl	0x00626d6f
 1d8:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 1dc:	775f0065 	ldrbvc	r0, [pc, -r5, rrx]
 1e0:	74727363 	ldrbtvc	r7, [r2], #-867	; 0xfffffc9d
 1e4:	73626d6f 	cmnvc	r2, #7104	; 0x1bc0
 1e8:	6174735f 	cmnvs	r4, pc, asr r3
 1ec:	6c006574 	cfstr32vs	mvfx6, [r0], {116}	; 0x74
 1f0:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 1f4:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 1f8:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
 1fc:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 200:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
 204:	6c5f0074 	mrrcvs	0, 7, r0, pc, cr4	; <UNPREDICTABLE>
 208:	69736662 	ldmdbvs	r3!, {r1, r5, r6, r9, sl, sp, lr}^
 20c:	7000657a 	andvc	r6, r0, sl, ror r5
 210:	72647075 	rsbvc	r7, r4, #117	; 0x75
 214:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
 218:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 21c:	00745f65 	rsbseq	r5, r4, r5, ror #30
 220:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
 224:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
 228:	6174735f 	cmnvs	r4, pc, asr r3
 22c:	6f006574 	svcvs	0x00006574
 230:	69487264 	stmdbvs	r8, {r2, r5, r6, r9, ip, sp, lr}^
 234:	5f006867 	svcpl	0x00006867
 238:	5f6d745f 	svcpl	0x006d745f
 23c:	00636573 	rsbeq	r6, r3, r3, ror r5
 240:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 244:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
 248:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
 24c:	755f0074 	ldrbvc	r0, [pc, #-116]	; 1e0 <startup-0x1ffffe20>
 250:	00667562 	rsbeq	r7, r6, r2, ror #10
 254:	4764626b 	strbmi	r6, [r4, -fp, ror #4]!
 258:	6f437465 	svcvs	0x00437465
 25c:	625f006c 	subsvs	r0, pc, #108	; 0x6c
 260:	00657361 	rsbeq	r7, r5, r1, ror #6
 264:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 268:	756f685f 	strbvc	r6, [pc, #-2143]!	; fffffa11 <ball+0xdfffee15>
 26c:	5f5f0072 	svcpl	0x005f0072
 270:	5f006673 	svcpl	0x00006673
 274:	655f6e6f 	ldrbvs	r6, [pc, #-3695]	; fffff40d <ball+0xdfffe811>
 278:	5f746978 	svcpl	0x00746978
 27c:	73677261 	cmnvc	r7, #268435462	; 0x10000006
 280:	6f635f00 	svcvs	0x00635f00
 284:	65696b6f 	strbvs	r6, [r9, #-2927]!	; 0xfffff491
 288:	735f5f00 	cmpvc	pc, #0, 30
 28c:	65756c67 	ldrbvs	r6, [r5, #-3175]!	; 0xfffff399
 290:	6c665f00 	stclvs	15, cr5, [r6], #-0
 294:	00736761 	rsbseq	r6, r3, r1, ror #14
 298:	5f73695f 	svcpl	0x0073695f
 29c:	00617863 	rsbeq	r7, r1, r3, ror #16
 2a0:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 2a4:	5f006e69 	svcpl	0x00006e69
 2a8:	736b6c62 	cmnvc	fp, #25088	; 0x6200
 2ac:	00657a69 	rsbeq	r7, r5, r9, ror #20
 2b0:	7476635f 	ldrbtvc	r6, [r6], #-863	; 0xfffffca1
 2b4:	00667562 	rsbeq	r7, r6, r2, ror #10
 2b8:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
 2bc:	00746573 	rsbseq	r6, r4, r3, ror r5
 2c0:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
 2c4:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
 2c8:	735f7363 	cmpvc	pc, #-1946157055	; 0x8c000001
 2cc:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 2d0:	626d5f00 	rsbvs	r5, sp, #0, 30
 2d4:	6e656c72 	mcrvs	12, 3, r6, cr5, cr2, {3}
 2d8:	6174735f 	cmnvs	r4, pc, asr r3
 2dc:	5f006574 	svcpl	0x00006574
 2e0:	72616e66 	rsbvc	r6, r1, #1632	; 0x660
 2e4:	69007367 	stmdbvs	r0, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
 2e8:	6f4c7264 	svcvs	0x004c7264
 2ec:	665f0077 			; <UNDEFINED> instruction: 0x665f0077
 2f0:	5f00736e 	svcpl	0x0000736e
 2f4:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 2f8:	646f6d00 	strbtvs	r6, [pc], #-3328	; 300 <startup-0x1ffffd00>
 2fc:	5f007265 	svcpl	0x00007265
 300:	636f6c66 	cmnvs	pc, #26112	; 0x6600
 304:	00745f6b 	rsbseq	r5, r4, fp, ror #30
 308:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 30c:	00727265 	rsbseq	r7, r2, r5, ror #4
 310:	6769425f 			; <UNDEFINED> instruction: 0x6769425f
 314:	00746e69 	rsbseq	r6, r4, r9, ror #28
 318:	6d61675f 	stclvs	7, cr6, [r1, #-380]!	; 0xfffffe84
 31c:	735f616d 	cmpvc	pc, #1073741851	; 0x4000001b
 320:	676e6769 	strbvs	r6, [lr, -r9, ror #14]!
 324:	5f006d61 	svcpl	0x00006d61
 328:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
 32c:	6b5f746c 	blvs	17dd4e4 <startup-0x1e822b1c>
 330:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 338 <startup-0x1ffffcc8>
 334:	5f5f006d 	svcpl	0x005f006d
 338:	62686377 	rsbvs	r6, r8, #-603979775	; 0xdc000001
 33c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 340:	74756f64 	ldrbtvc	r6, [r5], #-3940	; 0xfffff09c
 344:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
 348:	6e656c74 	mcrvs	12, 3, r6, cr5, cr4, {3}
 34c:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
 350:	6f00656c 	svcvs	0x0000656c
 354:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 358:	5f007264 	svcpl	0x00007264
 35c:	626f696e 	rsbvs	r6, pc, #1802240	; 0x1b8000
 360:	615f0073 	cmpvs	pc, r3, ror r0	; <UNPREDICTABLE>
 364:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 368:	5f003074 	svcpl	0x00003074
 36c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 370:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 374:	5f006675 	svcpl	0x00006675
 378:	74637361 	strbtvc	r7, [r3], #-865	; 0xfffffc9f
 37c:	5f656d69 	svcpl	0x00656d69
 380:	00667562 	rsbeq	r7, r6, r2, ror #10
 384:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
 388:	00746c75 	rsbseq	r6, r4, r5, ror ip
 38c:	63775f5f 	cmnvs	r7, #380	; 0x17c
 390:	4c5f0068 	mrrcmi	0, 6, r0, pc, cr8	; <UNPREDICTABLE>
 394:	5f4b434f 	svcpl	0x004b434f
 398:	69770054 	ldmdbvs	r7!, {r2, r4, r6}^
 39c:	745f746e 	ldrbvc	r7, [pc], #-1134	; 3a4 <startup-0x1ffffc5c>
 3a0:	6c665f00 	stclvs	15, cr5, [r6], #-0
 3a4:	32736761 	rsbscc	r6, r3, #25427968	; 0x1840000
 3a8:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 3b0 <startup-0x1ffffc50>
 3ac:	65795f6d 	ldrbvs	r5, [r9, #-3949]!	; 0xfffff093
 3b0:	6f007261 	svcvs	0x00007261
 3b4:	73655274 	cmnvc	r5, #116, 4	; 0x40000007
 3b8:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 3bc:	6e5f0064 	cdpvs	0, 5, cr0, cr15, cr4, {3}
 3c0:	66747865 	ldrbtvs	r7, [r4], -r5, ror #16
 3c4:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 3c8:	5f5f0062 	svcpl	0x005f0062
 3cc:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 204 <startup-0x1ffffdfc>
 3d0:	5f006e6f 	svcpl	0x00006e6f
 3d4:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 3d8:	5f007469 	svcpl	0x00007469
 3dc:	6964735f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
 3e0:	696e6964 	stmdbvs	lr!, {r2, r5, r6, r8, fp, sp, lr}^
 3e4:	6f5f0074 	svcvs	0x005f0074
 3e8:	745f6666 	ldrbvc	r6, [pc], #-1638	; 3f0 <startup-0x1ffffc10>
 3ec:	72665f00 	rsbvc	r5, r6, #0, 30
 3f0:	696c6565 	stmdbvs	ip!, {r0, r2, r5, r6, r8, sl, sp, lr}^
 3f4:	6f007473 	svcvs	0x00007473
 3f8:	6f4c7264 	svcvs	0x004c7264
 3fc:	775f0077 			; <UNDEFINED> instruction: 0x775f0077
 400:	6d6f7463 	cfstrdvs	mvd7, [pc, #-396]!	; 27c <startup-0x1ffffd84>
 404:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
 408:	00657461 	rsbeq	r7, r5, r1, ror #8
 40c:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
 410:	5f685f00 	svcpl	0x00685f00
 414:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
 418:	6873006f 	ldmdavs	r3!, {r0, r1, r2, r3, r5, r6}^
 41c:	2074726f 	rsbscs	r7, r4, pc, ror #4
 420:	00746e69 	rsbseq	r6, r4, r9, ror #28
 424:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 428:	6164795f 	cmnvs	r4, pc, asr r9
 42c:	5f5f0079 	svcpl	0x005f0079
 430:	66756273 			; <UNDEFINED> instruction: 0x66756273
 434:	6f695f00 	svcvs	0x00695f00
 438:	5f007362 	svcpl	0x00007362
 43c:	4c49465f 	mcrrmi	6, 5, r4, r9, cr15
 440:	6d5f0045 	ldclvs	0, cr0, [pc, #-276]	; 334 <startup-0x1ffffccc>
 444:	61747362 	cmnvs	r4, r2, ror #6
 448:	745f6574 	ldrbvc	r6, [pc], #-1396	; 450 <startup-0x1ffffbb0>
 44c:	735f5f00 	cmpvc	pc, #0, 30
 450:	454c4946 	strbmi	r4, [ip, #-2374]	; 0xfffff6ba
 454:	626d5f00 	rsbvs	r5, sp, #0, 30
 458:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 45c:	725f0065 	subsvc	r0, pc, #101	; 0x65
 460:	5f646e61 	svcpl	0x00646e61
 464:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 468:	626d5f00 	rsbvs	r5, sp, #0, 30
 46c:	5f6e656c 	svcpl	0x006e656c
 470:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 474:	695f0065 	ldmdbvs	pc, {r0, r2, r5, r6}^	; <UNPREDICTABLE>
 478:	5f00636e 	svcpl	0x0000636e
 47c:	00646e69 	rsbeq	r6, r4, r9, ror #28
 480:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 484:	00656c61 	rsbeq	r6, r5, r1, ror #24
 488:	6c635f5f 	stclvs	15, cr5, [r3], #-380	; 0xfffffe84
 48c:	756e6165 	strbvc	r6, [lr, #-357]!	; 0xfffffe9b
 490:	755f0070 	ldrbvc	r0, [pc, #-112]	; 428 <startup-0x1ffffbd8>
 494:	6570736e 	ldrbvs	r7, [r0, #-878]!	; 0xfffffc92
 498:	69666963 	stmdbvs	r6!, {r0, r1, r5, r6, r8, fp, sp, lr}^
 49c:	6c5f6465 	cfldrdvs	mvd6, [pc], {101}	; 0x65
 4a0:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 4a4:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
 4a8:	5f006f66 	svcpl	0x00006f66
 4ac:	7778616d 	ldrbvc	r6, [r8, -sp, ror #2]!
 4b0:	2f007364 	svccs	0x00007364
 4b4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 4b8:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
 4bc:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
 4c0:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 4c4:	616f6c6e 	cmnvs	pc, lr, ror #24
 4c8:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
 4cc:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 4d0:	2f737265 	svccs	0x00737265
 4d4:	2f504f4d 	svccs	0x00504f4d
 4d8:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 4dc:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 4e0:	656b2f35 	strbvs	r2, [fp, #-3893]!	; 0xfffff0cb
 4e4:	64617079 	strbtvs	r7, [r1], #-121	; 0xffffff87
 4e8:	5f00632e 	svcpl	0x0000632e
 4ec:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
 4f0:	635f5f00 	cmpvs	pc, #0, 30
 4f4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 4f8:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
 4fc:	006b636f 	rsbeq	r6, fp, pc, ror #6
 500:	61765f5f 	cmnvs	r6, pc, asr pc
 504:	0065756c 	rsbeq	r7, r5, ip, ror #10
 508:	6565735f 	strbvs	r7, [r5, #-863]!	; 0xfffffca1
 50c:	665f006b 	ldrbvs	r0, [pc], -fp, rrx
 510:	5f736f70 	svcpl	0x00736f70
 514:	5f5f0074 	svcpl	0x005f0074
 518:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 350 <startup-0x1ffffcb0>
 51c:	6f006e69 	svcvs	0x00006e69
 520:	65527264 	ldrbvs	r7, [r2, #-612]	; 0xfffffd9c
 524:	76726573 			; <UNDEFINED> instruction: 0x76726573
 528:	5f006465 	svcpl	0x00006465
 52c:	746c756d 	strbtvc	r7, [ip], #-1389	; 0xfffffa93
 530:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 534:	6b6f7472 	blvs	1bdd704 <startup-0x1e4228fc>
 538:	73616c5f 	cmnvc	r1, #24320	; 0x5f00
 53c:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
 540:	7079746e 	rsbsvc	r7, r9, lr, ror #8
 544:	5f007365 	svcpl	0x00007365
 548:	00646461 	rsbeq	r6, r4, r1, ror #8
 54c:	4c555f5f 	mrrcmi	15, 5, r5, r5, cr15	; <UNPREDICTABLE>
 550:	00676e6f 	rsbeq	r6, r7, pc, ror #28
 554:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
 558:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
 55c:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
 560:	6c675f00 	stclvs	15, cr5, [r7], #-0
 564:	6c61626f 	sfmvs	f6, 2, [r1], #-444	; 0xfffffe44
 568:	706d695f 	rsbvc	r6, sp, pc, asr r9
 56c:	5f657275 	svcpl	0x00657275
 570:	00727470 	rsbseq	r7, r2, r0, ror r4
 574:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
 578:	5f646573 	svcpl	0x00646573
 57c:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
 580:	64775f00 	ldrbtvs	r5, [r7], #-3840	; 0xfffff100
 584:	5f5f0073 	svcpl	0x005f0073
 588:	775f6d74 			; <UNDEFINED> instruction: 0x775f6d74
 58c:	00796164 	rsbseq	r6, r9, r4, ror #2
 590:	756c675f 	strbvc	r6, [ip, #-1887]!	; 0xfffff8a1
 594:	6e5f0065 	cdpvs	0, 5, cr0, cr15, cr5, {3}
 598:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 59c:	5f00636f 	svcpl	0x0000636f
 5a0:	6134366c 	teqvs	r4, ip, ror #12
 5a4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 5a8:	64626b00 	strbtvs	r6, [r2], #-2816	; 0xfffff500
 5ac:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
 5b0:	5f006576 	svcpl	0x00006576
 5b4:	5f676973 	svcpl	0x00676973
 5b8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 5bc:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
 5c0:	00746e65 	rsbseq	r6, r4, r5, ror #28
 5c4:	75626e5f 	strbvc	r6, [r2, #-3679]!	; 0xfffff1a1
 5c8:	755f0066 	ldrbvc	r0, [pc, #-102]	; 56a <startup-0x1ffffa96>
 5cc:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
 5d0:	5f5f0064 	svcpl	0x005f0064
 5d4:	695f6d74 	ldmdbvs	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 5d8:	74736473 	ldrbtvc	r6, [r3], #-1139	; 0xfffffb8d
 5dc:	6f6c5f00 	svcvs	0x006c5f00
 5e0:	746c6163 	strbtvc	r6, [ip], #-355	; 0xfffffe9d
 5e4:	5f656d69 	svcpl	0x00656d69
 5e8:	00667562 	rsbeq	r7, r6, r2, ror #10
 5ec:	6f6c635f 	svcvs	0x006c635f
 5f0:	5f006573 	svcpl	0x00006573
 5f4:	00383472 	eorseq	r3, r8, r2, ror r4
 5f8:	4f495047 	svcmi	0x00495047
 5fc:	626d5f00 	rsbvs	r5, sp, #0, 30
 600:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
 604:	6174735f 	cmnvs	r4, pc, asr r3
 608:	5f006574 	svcpl	0x00006574
 60c:	00733570 	rsbseq	r3, r3, r0, ror r5
 610:	52726469 	rsbspl	r6, r2, #1761607680	; 0x69000000
 614:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
 618:	00646576 	rsbeq	r6, r4, r6, ror r5
 61c:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 620:	61646d5f 	cmnvs	r4, pc, asr sp
 624:	65640079 	strbvs	r0, [r4, #-121]!	; 0xffffff87
 628:	5f79616c 	svcpl	0x0079616c
 62c:	6c6c696d 			; <UNDEFINED> instruction: 0x6c6c696d
 630:	65640069 	strbvs	r0, [r4, #-105]!	; 0xffffff97
 634:	5f79616c 	svcpl	0x0079616c
 638:	726b696d 	rsbvc	r6, fp, #1785856	; 0x1b4000
 63c:	6573006f 	ldrbvs	r0, [r3, #-111]!	; 0xffffff91
 640:	646e6f63 	strbtvs	r6, [lr], #-3939	; 0xfffff09d
 644:	756f635f 	strbvc	r6, [pc, #-863]!	; 2ed <startup-0x1ffffd13>
 648:	6400746e 	strvs	r7, [r0], #-1134	; 0xfffffb92
 64c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 650:	3035325f 	eorscc	r3, r5, pc, asr r2
 654:	6400736e 	strvs	r7, [r0], #-878	; 0xfffffc92
 658:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 65c:	3030355f 	eorscc	r3, r0, pc, asr r5
 660:	6400736e 	strvs	r7, [r0], #-878	; 0xfffffc92
 664:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 668:	756f635f 	strbvc	r6, [pc, #-863]!	; 311 <startup-0x1ffffcef>
 66c:	7300746e 	movwvc	r7, #1134	; 0x46e
 670:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
 674:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
 678:	0067616c 	rsbeq	r6, r7, ip, ror #2
 67c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 680:	6b2f7372 	blvs	bdd450 <startup-0x1f422bb0>
 684:	61766965 	cmnvs	r6, r5, ror #18
 688:	6f442f6e 	svcvs	0x00442f6e
 68c:	6f6c6e77 	svcvs	0x006c6e77
 690:	2f736461 	svccs	0x00736461
 694:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 698:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 69c:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 6a0:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 6a4:	616c2f35 	cmnvs	ip, r5, lsr pc
 6a8:	642f3562 	strtvs	r3, [pc], #-1378	; 6b0 <startup-0x1ffff950>
 6ac:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 6b0:	00632e73 	rsbeq	r2, r3, r3, ror lr
 6b4:	616c6564 	cmnvs	ip, r4, ror #10
 6b8:	73315f79 	teqvc	r1, #484	; 0x1e4
 6bc:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 6c0:	70007961 	andvc	r7, r0, r1, ror #18
 6c4:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 6c8:	73552f00 	cmpvc	r5, #0, 30
 6cc:	2f737265 	svccs	0x00737265
 6d0:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 6d4:	442f6e61 	strtmi	r6, [pc], #-3681	; 6dc <startup-0x1ffff924>
 6d8:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 6dc:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 6e0:	6168432f 	cmnvs	r8, pc, lsr #6
 6e4:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 6e8:	4f4d2f73 	svcmi	0x004d2f73
 6ec:	616c2f50 	cmnvs	ip, r0, asr pc
 6f0:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 570 <startup-0x1ffffa90>
 6f4:	2f356261 	svccs	0x00356261
 6f8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 6fc:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
 700:	00632e67 	rsbeq	r2, r3, r7, ror #28
 704:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 708:	73005864 	movwvc	r5, #2148	; 0x864
 70c:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 710:	65730059 	ldrbvs	r0, [r3, #-89]!	; 0xffffffa7
 714:	626f5f74 	rsbvs	r5, pc, #116, 30	; 0x1d0
 718:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 71c:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 720:	63006465 	movwvs	r6, #1125	; 0x465
 724:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 728:	6a626f5f 	bvs	189c4ac <startup-0x1e763b54>
 72c:	00746365 	rsbseq	r6, r4, r5, ror #6
 730:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 734:	6a626f5f 	bvs	189c4b8 <startup-0x1e763b48>
 738:	00746365 	rsbseq	r6, r4, r5, ror #6
 73c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
 740:	5f6b6369 	svcpl	0x006b6369
 744:	5f717269 	svcpl	0x00717269
 748:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
 74c:	0072656c 	rsbseq	r6, r2, ip, ror #10
 750:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 754:	6b2f7372 	blvs	bdd524 <startup-0x1f422adc>
 758:	61766965 	cmnvs	r6, r5, ror #18
 75c:	6f442f6e 	svcvs	0x00442f6e
 760:	6f6c6e77 	svcvs	0x006c6e77
 764:	2f736461 	svccs	0x00736461
 768:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 76c:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 770:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 774:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 778:	616c2f35 	cmnvs	ip, r5, lsr pc
 77c:	492f3562 	stmdbmi	pc!, {r1, r5, r6, r8, sl, ip, sp}	; <UNPREDICTABLE>
 780:	632e5152 			; <UNDEFINED> instruction: 0x632e5152
 784:	6c657300 	stclvs	3, cr7, [r5], #-0
 788:	5f746365 	svcpl	0x00746365
 78c:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 790:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 794:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
 798:	7379665f 	cmnvc	r9, #99614720	; 0x5f00000
 79c:	006b7369 	rsbeq	r7, fp, r9, ror #6
 7a0:	70617267 	rsbvc	r7, r1, r7, ror #4
 7a4:	5f636968 	svcpl	0x00636968
 7a8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 7ac:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
 7b0:	72670061 	rsbvc	r0, r7, #97	; 0x61
 7b4:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 7b8:	72775f63 	rsbsvc	r5, r7, #396	; 0x18c
 7bc:	00657469 	rsbeq	r7, r5, r9, ror #8
 7c0:	706d6574 	rsbvc	r6, sp, r4, ror r5
 7c4:	61726700 	cmnvs	r2, r0, lsl #14
 7c8:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 7cc:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
 7d0:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 7d4:	6c635f74 	stclvs	15, cr5, [r3], #-464	; 0xfffffe30
 7d8:	00726165 	rsbseq	r6, r2, r5, ror #2
 7dc:	70617267 	rsbvc	r7, r1, r7, ror #4
 7e0:	5f636968 	svcpl	0x00636968
 7e4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 7e8:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
 7ec:	6700657a 	smlsdxvs	r0, sl, r5, r6
 7f0:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 7f4:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 7f8:	5f6c7274 	svcpl	0x006c7274
 7fc:	5f746962 	svcpl	0x00746962
 800:	00746573 	rsbseq	r6, r4, r3, ror r5
 804:	6d746962 			; <UNDEFINED> instruction: 0x6d746962
 808:	006b7361 	rsbeq	r7, fp, r1, ror #6
 80c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 810:	6b2f7372 	blvs	bdd5e0 <startup-0x1f422a20>
 814:	61766965 	cmnvs	r6, r5, ror #18
 818:	6f442f6e 	svcvs	0x00442f6e
 81c:	6f6c6e77 	svcvs	0x006c6e77
 820:	2f736461 	svccs	0x00736461
 824:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 828:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 82c:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 830:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 834:	616c2f35 	cmnvs	ip, r5, lsr pc
 838:	672f3562 	strvs	r3, [pc, -r2, ror #10]!
 83c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 840:	69646369 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 844:	616c7073 	smcvs	50947	; 0xc703
 848:	00632e79 	rsbeq	r2, r3, r9, ror lr
 84c:	70617267 	rsbvc	r7, r1, r7, ror #4
 850:	5f636968 	svcpl	0x00636968
 854:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 858:	61645f65 	cmnvs	r4, r5, ror #30
 85c:	67006174 	smlsdxvs	r0, r4, r1, r6
 860:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 864:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
 868:	5f746961 	svcpl	0x00746961
 86c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 870:	6e690079 	mcrvs	0, 3, r0, cr9, cr9, {3}
 874:	00786564 	rsbseq	r6, r8, r4, ror #10
 878:	70617267 	rsbvc	r7, r1, r7, ror #4
 87c:	5f636968 	svcpl	0x00636968
 880:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 884:	61726700 	cmnvs	r2, r0, lsl #14
 888:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 88c:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 890:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 894:	616d6d6f 	cmnvs	sp, pc, ror #26
 898:	6700646e 	strvs	r6, [r0, -lr, ror #8]
 89c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 8a0:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 8a4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 8a8:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 8ac:	006e6565 	rsbeq	r6, lr, r5, ror #10
 8b0:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
 8b4:	6a626f5f 	bvs	189c638 <startup-0x1e7639c8>
 8b8:	00746365 	rsbseq	r6, r4, r5, ror #6
 8bc:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
 8c0:	6f65675f 	svcvs	0x0065675f
 8c4:	7274656d 	rsbsvc	r6, r4, #457179136	; 0x1b400000
 8c8:	61620079 	smcvs	8201	; 0x2009
 8cc:	2f006c6c 	svccs	0x00006c6c
 8d0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 8d4:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
 8d8:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
 8dc:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 8e0:	616f6c6e 	cmnvs	pc, lr, ror #24
 8e4:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
 8e8:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 8ec:	2f737265 	svccs	0x00737265
 8f0:	2f504f4d 	svccs	0x00504f4d
 8f4:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 8f8:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 8fc:	61622f35 	cmnvs	r2, r5, lsr pc
 900:	632e6c6c 			; <UNDEFINED> instruction: 0x632e6c6c
 904:	73552f00 	cmpvc	r5, #0, 30
 908:	2f737265 	svccs	0x00737265
 90c:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 910:	442f6e61 	strtmi	r6, [pc], #-3681	; 918 <startup-0x1ffff6e8>
 914:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 918:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 91c:	6168432f 	cmnvs	r8, pc, lsr #6
 920:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 924:	4f4d2f73 	svcmi	0x004d2f73
 928:	616c2f50 	cmnvs	ip, r0, asr pc
 92c:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 7ac <startup-0x1ffff854>
 930:	2f356261 	svccs	0x00356261
 934:	6e69616d 	powvsez	f6, f1, #5.0
 938:	7300632e 	movwvc	r6, #814	; 0x32e
 93c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 940:	69007075 	stmdbvs	r0, {r0, r2, r4, r5, r6, ip, sp, lr}
 944:	5f74696e 	svcpl	0x0074696e
 948:	00707061 	rsbseq	r7, r0, r1, rrx
 94c:	6e69616d 	powvsez	f6, f1, #5.0
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <ball+0xdfffe712>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x000000000000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	0000004c 	andeq	r0, r0, ip, asr #32
  20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  24:	41018e02 	tstmi	r1, r2, lsl #28
  28:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  2c:	00000007 	andeq	r0, r0, r7
  30:	0000000c 	andeq	r0, r0, ip
  34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  38:	7c020001 	stcvc	0, cr0, [r2], {1}
  3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	00000030 	andeq	r0, r0, r0, lsr r0
  48:	2000005c 	andcs	r0, r0, ip, asr r0
  4c:	00000058 	andeq	r0, r0, r8, asr r0
  50:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  54:	41018e02 	tstmi	r1, r2, lsl #28
  58:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  5c:	00000007 	andeq	r0, r0, r7
  60:	00000020 	andeq	r0, r0, r0, lsr #32
  64:	00000030 	andeq	r0, r0, r0, lsr r0
  68:	200000b4 	strhcs	r0, [r0], -r4
  6c:	00000094 	muleq	r0, r4, r0
  70:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
  74:	87038504 	strhi	r8, [r3, -r4, lsl #10]
  78:	41018e02 	tstmi	r1, r2, lsl #28
  7c:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
  80:	00000007 	andeq	r0, r0, r7
  84:	00000020 	andeq	r0, r0, r0, lsr #32
  88:	00000030 	andeq	r0, r0, r0, lsr r0
  8c:	20000148 	andcs	r0, r0, r8, asr #2
  90:	00000088 	andeq	r0, r0, r8, lsl #1
  94:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
  98:	87038504 	strhi	r8, [r3, -r4, lsl #10]
  9c:	41018e02 	tstmi	r1, r2, lsl #28
  a0:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
  a4:	00000007 	andeq	r0, r0, r7
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  b0:	7c020001 	stcvc	0, cr0, [r2], {1}
  b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  b8:	00000018 	andeq	r0, r0, r8, lsl r0
  bc:	000000a8 	andeq	r0, r0, r8, lsr #1
  c0:	200001d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  c4:	00000044 	andeq	r0, r0, r4, asr #32
  c8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  cc:	41018e02 	tstmi	r1, r2, lsl #28
  d0:	0000070d 	andeq	r0, r0, sp, lsl #14
  d4:	00000018 	andeq	r0, r0, r8, lsl r0
  d8:	000000a8 	andeq	r0, r0, r8, lsr #1
  dc:	20000214 	andcs	r0, r0, r4, lsl r2
  e0:	00000012 	andeq	r0, r0, r2, lsl r0
  e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  e8:	41018e02 	tstmi	r1, r2, lsl #28
  ec:	0000070d 	andeq	r0, r0, sp, lsl #14
  f0:	0000001c 	andeq	r0, r0, ip, lsl r0
  f4:	000000a8 	andeq	r0, r0, r8, lsr #1
  f8:	20000226 	andcs	r0, r0, r6, lsr #4
  fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 100:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 104:	41018e02 	tstmi	r1, r2, lsl #28
 108:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 10c:	00000007 	andeq	r0, r0, r7
 110:	0000001c 	andeq	r0, r0, ip, lsl r0
 114:	000000a8 	andeq	r0, r0, r8, lsr #1
 118:	20000252 	andcs	r0, r0, r2, asr r2
 11c:	00000026 	andeq	r0, r0, r6, lsr #32
 120:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 124:	41018e02 	tstmi	r1, r2, lsl #28
 128:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 12c:	00000007 	andeq	r0, r0, r7
 130:	00000018 	andeq	r0, r0, r8, lsl r0
 134:	000000a8 	andeq	r0, r0, r8, lsr #1
 138:	20000278 	andcs	r0, r0, r8, ror r2
 13c:	0000003c 	andeq	r0, r0, ip, lsr r0
 140:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 144:	41018e02 	tstmi	r1, r2, lsl #28
 148:	0000070d 	andeq	r0, r0, sp, lsl #14
 14c:	0000001c 	andeq	r0, r0, ip, lsl r0
 150:	000000a8 	andeq	r0, r0, r8, lsr #1
 154:	200002b4 			; <UNDEFINED> instruction: 0x200002b4
 158:	00000030 	andeq	r0, r0, r0, lsr r0
 15c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 160:	41018e02 	tstmi	r1, r2, lsl #28
 164:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 168:	00000007 	andeq	r0, r0, r7
 16c:	0000000c 	andeq	r0, r0, ip
 170:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 174:	7c020001 	stcvc	0, cr0, [r2], {1}
 178:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 17c:	0000001c 	andeq	r0, r0, ip, lsl r0
 180:	0000016c 	andeq	r0, r0, ip, ror #2
 184:	200002e4 	andcs	r0, r0, r4, ror #5
 188:	00000020 	andeq	r0, r0, r0, lsr #32
 18c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 190:	41018e02 	tstmi	r1, r2, lsl #28
 194:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 198:	00000007 	andeq	r0, r0, r7
 19c:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a0:	0000016c 	andeq	r0, r0, ip, ror #2
 1a4:	20000304 	andcs	r0, r0, r4, lsl #6
 1a8:	0000005c 	andeq	r0, r0, ip, asr r0
 1ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1b0:	41018e02 	tstmi	r1, r2, lsl #28
 1b4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 1b8:	00000007 	andeq	r0, r0, r7
 1bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 1c0:	0000016c 	andeq	r0, r0, ip, ror #2
 1c4:	20000360 	andcs	r0, r0, r0, ror #6
 1c8:	0000005c 	andeq	r0, r0, ip, asr r0
 1cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1d0:	41018e02 	tstmi	r1, r2, lsl #28
 1d4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 1d8:	00000007 	andeq	r0, r0, r7
 1dc:	0000000c 	andeq	r0, r0, ip
 1e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1e4:	7c020001 	stcvc	0, cr0, [r2], {1}
 1e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1ec:	00000018 	andeq	r0, r0, r8, lsl r0
 1f0:	000001dc 	ldrdeq	r0, [r0], -ip
 1f4:	200003bc 			; <UNDEFINED> instruction: 0x200003bc
 1f8:	0000003c 	andeq	r0, r0, ip, lsr r0
 1fc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 200:	41018e02 	tstmi	r1, r2, lsl #28
 204:	0000070d 	andeq	r0, r0, sp, lsl #14
 208:	0000000c 	andeq	r0, r0, ip
 20c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 210:	7c020001 	stcvc	0, cr0, [r2], {1}
 214:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 218:	0000001c 	andeq	r0, r0, ip, lsl r0
 21c:	00000208 	andeq	r0, r0, r8, lsl #4
 220:	200003f8 	strdcs	r0, [r0], -r8
 224:	00000038 	andeq	r0, r0, r8, lsr r0
 228:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 22c:	41018e02 	tstmi	r1, r2, lsl #28
 230:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 234:	00000007 	andeq	r0, r0, r7
 238:	0000001c 	andeq	r0, r0, ip, lsl r0
 23c:	00000208 	andeq	r0, r0, r8, lsl #4
 240:	20000430 	andcs	r0, r0, r0, lsr r4
 244:	00000034 	andeq	r0, r0, r4, lsr r0
 248:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 24c:	41018e02 	tstmi	r1, r2, lsl #28
 250:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 254:	00000007 	andeq	r0, r0, r7
 258:	0000001c 	andeq	r0, r0, ip, lsl r0
 25c:	00000208 	andeq	r0, r0, r8, lsl #4
 260:	20000464 	andcs	r0, r0, r4, ror #8
 264:	00000060 	andeq	r0, r0, r0, rrx
 268:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 26c:	41018e02 	tstmi	r1, r2, lsl #28
 270:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 274:	00000007 	andeq	r0, r0, r7
 278:	00000018 	andeq	r0, r0, r8, lsl r0
 27c:	00000208 	andeq	r0, r0, r8, lsl #4
 280:	200004c4 	andcs	r0, r0, r4, asr #9
 284:	00000060 	andeq	r0, r0, r0, rrx
 288:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 28c:	41018e02 	tstmi	r1, r2, lsl #28
 290:	0000070d 	andeq	r0, r0, sp, lsl #14
 294:	0000001c 	andeq	r0, r0, ip, lsl r0
 298:	00000208 	andeq	r0, r0, r8, lsl #4
 29c:	20000524 	andcs	r0, r0, r4, lsr #10
 2a0:	00000094 	muleq	r0, r4, r0
 2a4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2a8:	41018e02 	tstmi	r1, r2, lsl #28
 2ac:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 2b0:	00000007 	andeq	r0, r0, r7
 2b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2b8:	00000208 	andeq	r0, r0, r8, lsl #4
 2bc:	200005b8 			; <UNDEFINED> instruction: 0x200005b8
 2c0:	00000080 	andeq	r0, r0, r0, lsl #1
 2c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2c8:	41018e02 	tstmi	r1, r2, lsl #28
 2cc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 2d0:	00000007 	andeq	r0, r0, r7
 2d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2d8:	00000208 	andeq	r0, r0, r8, lsl #4
 2dc:	20000638 	andcs	r0, r0, r8, lsr r6
 2e0:	00000046 	andeq	r0, r0, r6, asr #32
 2e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2e8:	41018e02 	tstmi	r1, r2, lsl #28
 2ec:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 2f0:	00000007 	andeq	r0, r0, r7
 2f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2f8:	00000208 	andeq	r0, r0, r8, lsl #4
 2fc:	2000067e 	andcs	r0, r0, lr, ror r6
 300:	00000046 	andeq	r0, r0, r6, asr #32
 304:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 308:	41018e02 	tstmi	r1, r2, lsl #28
 30c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 310:	00000007 	andeq	r0, r0, r7
 314:	0000001c 	andeq	r0, r0, ip, lsl r0
 318:	00000208 	andeq	r0, r0, r8, lsl #4
 31c:	200006c4 	andcs	r0, r0, r4, asr #13
 320:	0000002a 	andeq	r0, r0, sl, lsr #32
 324:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 328:	41018e02 	tstmi	r1, r2, lsl #28
 32c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 330:	00000007 	andeq	r0, r0, r7
 334:	00000018 	andeq	r0, r0, r8, lsl r0
 338:	00000208 	andeq	r0, r0, r8, lsl #4
 33c:	200006ee 	andcs	r0, r0, lr, ror #13
 340:	00000056 	andeq	r0, r0, r6, asr r0
 344:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 348:	41018e02 	tstmi	r1, r2, lsl #28
 34c:	0000070d 	andeq	r0, r0, sp, lsl #14
 350:	0000001c 	andeq	r0, r0, ip, lsl r0
 354:	00000208 	andeq	r0, r0, r8, lsl #4
 358:	20000744 	andcs	r0, r0, r4, asr #14
 35c:	00000058 	andeq	r0, r0, r8, asr r0
 360:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 364:	41018e02 	tstmi	r1, r2, lsl #28
 368:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 36c:	00000007 	andeq	r0, r0, r7
 370:	00000020 	andeq	r0, r0, r0, lsr #32
 374:	00000208 	andeq	r0, r0, r8, lsl #4
 378:	2000079c 	mulcs	r0, ip, r7
 37c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 380:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 384:	86048505 	strhi	r8, [r4], -r5, lsl #10
 388:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 38c:	280e4101 	stmdacs	lr, {r0, r8, lr}
 390:	00070d41 	andeq	r0, r7, r1, asr #26
 394:	0000000c 	andeq	r0, r0, ip
 398:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 39c:	7c020001 	stcvc	0, cr0, [r2], {1}
 3a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 3a4:	0000001c 	andeq	r0, r0, ip, lsl r0
 3a8:	00000394 	muleq	r0, r4, r3
 3ac:	2000096c 	andcs	r0, r0, ip, ror #18
 3b0:	000000e8 	andeq	r0, r0, r8, ror #1
 3b4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 3b8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 3bc:	180e4101 	stmdane	lr, {r0, r8, lr}
 3c0:	00070d41 	andeq	r0, r7, r1, asr #26
 3c4:	0000000c 	andeq	r0, r0, ip
 3c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 3cc:	7c020001 	stcvc	0, cr0, [r2], {1}
 3d0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 3d4:	0000000c 	andeq	r0, r0, ip
 3d8:	000003c4 	andeq	r0, r0, r4, asr #7
 3dc:	20000000 	andcs	r0, r0, r0
 3e0:	0000000c 	andeq	r0, r0, ip
 3e4:	00000018 	andeq	r0, r0, r8, lsl r0
 3e8:	000003c4 	andeq	r0, r0, r4, asr #7
 3ec:	20000a54 	andcs	r0, r0, r4, asr sl
 3f0:	00000084 	andeq	r0, r0, r4, lsl #1
 3f4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 3f8:	41018e02 	tstmi	r1, r2, lsl #28
 3fc:	0000070d 	andeq	r0, r0, sp, lsl #14
 400:	0000001c 	andeq	r0, r0, ip, lsl r0
 404:	000003c4 	andeq	r0, r0, r4, asr #7
 408:	20000ad8 	ldrdcs	r0, [r0], -r8
 40c:	0000008c 	andeq	r0, r0, ip, lsl #1
 410:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 414:	41018e02 	tstmi	r1, r2, lsl #28
 418:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 41c:	00000007 	andeq	r0, r0, r7

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000a54 	andcs	r0, r0, r4, asr sl
   4:	20000b64 	andcs	r0, r0, r4, ror #22
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
