
./Debug/lab5.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
//Startup
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f9a8 	bl	20000358 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <kbdActive>:
#include <stdio.h>
#include "defines.h"

void kbdActive(unsigned char row)
{
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
20000016:	0002      	movs	r2, r0
20000018:	1dfb      	adds	r3, r7, #7
2000001a:	701a      	strb	r2, [r3, #0]
	switch(row){
2000001c:	1dfb      	adds	r3, r7, #7
2000001e:	781b      	ldrb	r3, [r3, #0]
20000020:	2b02      	cmp	r3, #2
20000022:	d00c      	beq.n	2000003e <kbdActive+0x2e>
20000024:	dc02      	bgt.n	2000002c <kbdActive+0x1c>
20000026:	2b01      	cmp	r3, #1
20000028:	d005      	beq.n	20000036 <kbdActive+0x26>
2000002a:	e014      	b.n	20000056 <kbdActive+0x46>
2000002c:	2b03      	cmp	r3, #3
2000002e:	d00a      	beq.n	20000046 <kbdActive+0x36>
20000030:	2b04      	cmp	r3, #4
20000032:	d00c      	beq.n	2000004e <kbdActive+0x3e>
20000034:	e00f      	b.n	20000056 <kbdActive+0x46>
		case 1: GPIO_D.odrHigh = 0x10; break;
20000036:	4b0b      	ldr	r3, [pc, #44]	; (20000064 <kbdActive+0x54>)
20000038:	2210      	movs	r2, #16
2000003a:	755a      	strb	r2, [r3, #21]
2000003c:	e00e      	b.n	2000005c <kbdActive+0x4c>
		case 2: GPIO_D.odrHigh = 0x20; break;
2000003e:	4b09      	ldr	r3, [pc, #36]	; (20000064 <kbdActive+0x54>)
20000040:	2220      	movs	r2, #32
20000042:	755a      	strb	r2, [r3, #21]
20000044:	e00a      	b.n	2000005c <kbdActive+0x4c>
		case 3: GPIO_D.odrHigh = 0x40; break;
20000046:	4b07      	ldr	r3, [pc, #28]	; (20000064 <kbdActive+0x54>)
20000048:	2240      	movs	r2, #64	; 0x40
2000004a:	755a      	strb	r2, [r3, #21]
2000004c:	e006      	b.n	2000005c <kbdActive+0x4c>
		case 4: GPIO_D.odrHigh = 0x80; break;
2000004e:	4b05      	ldr	r3, [pc, #20]	; (20000064 <kbdActive+0x54>)
20000050:	2280      	movs	r2, #128	; 0x80
20000052:	755a      	strb	r2, [r3, #21]
20000054:	e002      	b.n	2000005c <kbdActive+0x4c>
		default: GPIO_D.odrHigh = 0;
20000056:	4b03      	ldr	r3, [pc, #12]	; (20000064 <kbdActive+0x54>)
20000058:	2200      	movs	r2, #0
2000005a:	755a      	strb	r2, [r3, #21]

	}
}
2000005c:	46c0      	nop			; (mov r8, r8)
2000005e:	46bd      	mov	sp, r7
20000060:	b002      	add	sp, #8
20000062:	bd80      	pop	{r7, pc}
20000064:	40020c00 	andmi	r0, r2, r0, lsl #24

20000068 <kbdGetCol>:


unsigned char kbdGetCol(void)
{
20000068:	b5b0      	push	{r4, r5, r7, lr}
2000006a:	b086      	sub	sp, #24
2000006c:	af00      	add	r7, sp, #0
	unsigned char c = GPIO_D.idrHigh;
2000006e:	4a21      	ldr	r2, [pc, #132]	; (200000f4 <kbdGetCol+0x8c>)
20000070:	2316      	movs	r3, #22
20000072:	18fb      	adds	r3, r7, r3
20000074:	7c52      	ldrb	r2, [r2, #17]
20000076:	701a      	strb	r2, [r3, #0]
	unsigned char row, col;
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE, 0, 0xF, 0xD};
20000078:	1d3b      	adds	r3, r7, #4
2000007a:	4a1f      	ldr	r2, [pc, #124]	; (200000f8 <kbdGetCol+0x90>)
2000007c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000007e:	c313      	stmia	r3!, {r0, r1, r4}
20000080:	6812      	ldr	r2, [r2, #0]
20000082:	601a      	str	r2, [r3, #0]
	for(row=1; row<=4; row++){
20000084:	2317      	movs	r3, #23
20000086:	18fb      	adds	r3, r7, r3
20000088:	2201      	movs	r2, #1
2000008a:	701a      	strb	r2, [r3, #0]
2000008c:	e025      	b.n	200000da <kbdGetCol+0x72>
		kbdActive(row);
2000008e:	2317      	movs	r3, #23
20000090:	18fb      	adds	r3, r7, r3
20000092:	781b      	ldrb	r3, [r3, #0]
20000094:	0018      	movs	r0, r3
20000096:	f7ff ffbb 	bl	20000010 <kbdActive>
		
		if(col=kbdGetCol()){
2000009a:	2515      	movs	r5, #21
2000009c:	197c      	adds	r4, r7, r5
2000009e:	f7ff ffe3 	bl	20000068 <kbdGetCol>
200000a2:	0003      	movs	r3, r0
200000a4:	7023      	strb	r3, [r4, #0]
200000a6:	197b      	adds	r3, r7, r5
200000a8:	781b      	ldrb	r3, [r3, #0]
200000aa:	2b00      	cmp	r3, #0
200000ac:	d00f      	beq.n	200000ce <kbdGetCol+0x66>
			kbdActive(0);
200000ae:	2000      	movs	r0, #0
200000b0:	f7ff ffae 	bl	20000010 <kbdActive>
			
			return key[(row-1)*4+(col-1)];
200000b4:	2317      	movs	r3, #23
200000b6:	18fb      	adds	r3, r7, r3
200000b8:	781b      	ldrb	r3, [r3, #0]
200000ba:	3b01      	subs	r3, #1
200000bc:	009a      	lsls	r2, r3, #2
200000be:	2315      	movs	r3, #21
200000c0:	18fb      	adds	r3, r7, r3
200000c2:	781b      	ldrb	r3, [r3, #0]
200000c4:	3b01      	subs	r3, #1
200000c6:	18d3      	adds	r3, r2, r3
200000c8:	1d3a      	adds	r2, r7, #4
200000ca:	5cd3      	ldrb	r3, [r2, r3]
200000cc:	e00e      	b.n	200000ec <kbdGetCol+0x84>
	for(row=1; row<=4; row++){
200000ce:	2117      	movs	r1, #23
200000d0:	187b      	adds	r3, r7, r1
200000d2:	781a      	ldrb	r2, [r3, #0]
200000d4:	187b      	adds	r3, r7, r1
200000d6:	3201      	adds	r2, #1
200000d8:	701a      	strb	r2, [r3, #0]
200000da:	2317      	movs	r3, #23
200000dc:	18fb      	adds	r3, r7, r3
200000de:	781b      	ldrb	r3, [r3, #0]
200000e0:	2b04      	cmp	r3, #4
200000e2:	d9d4      	bls.n	2000008e <kbdGetCol+0x26>
		}
	}
	kbdActive(0);
200000e4:	2000      	movs	r0, #0
200000e6:	f7ff ff93 	bl	20000010 <kbdActive>
	return 0xff;
200000ea:	23ff      	movs	r3, #255	; 0xff
}
200000ec:	0018      	movs	r0, r3
200000ee:	46bd      	mov	sp, r7
200000f0:	b006      	add	sp, #24
200000f2:	bdb0      	pop	{r4, r5, r7, pc}
200000f4:	40020c00 	andmi	r0, r2, r0, lsl #24
200000f8:	20000b7c 	andcs	r0, r0, ip, ror fp

200000fc <keyb>:

unsigned char keyb(void)
{
200000fc:	b5b0      	push	{r4, r5, r7, lr}
200000fe:	b086      	sub	sp, #24
20000100:	af00      	add	r7, sp, #0
	unsigned char row, col;
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE, 0, 0xF, 0xD};
20000102:	1d3b      	adds	r3, r7, #4
20000104:	4a1e      	ldr	r2, [pc, #120]	; (20000180 <keyb+0x84>)
20000106:	ca13      	ldmia	r2!, {r0, r1, r4}
20000108:	c313      	stmia	r3!, {r0, r1, r4}
2000010a:	6812      	ldr	r2, [r2, #0]
2000010c:	601a      	str	r2, [r3, #0]
	for(row=1; row<=4; row++){
2000010e:	2317      	movs	r3, #23
20000110:	18fb      	adds	r3, r7, r3
20000112:	2201      	movs	r2, #1
20000114:	701a      	strb	r2, [r3, #0]
20000116:	e025      	b.n	20000164 <keyb+0x68>
		kbdActive(row);
20000118:	2317      	movs	r3, #23
2000011a:	18fb      	adds	r3, r7, r3
2000011c:	781b      	ldrb	r3, [r3, #0]
2000011e:	0018      	movs	r0, r3
20000120:	f7ff ff76 	bl	20000010 <kbdActive>
		
		if(col=kbdGetCol()){
20000124:	2516      	movs	r5, #22
20000126:	197c      	adds	r4, r7, r5
20000128:	f7ff ff9e 	bl	20000068 <kbdGetCol>
2000012c:	0003      	movs	r3, r0
2000012e:	7023      	strb	r3, [r4, #0]
20000130:	197b      	adds	r3, r7, r5
20000132:	781b      	ldrb	r3, [r3, #0]
20000134:	2b00      	cmp	r3, #0
20000136:	d00f      	beq.n	20000158 <keyb+0x5c>
			kbdActive(0);
20000138:	2000      	movs	r0, #0
2000013a:	f7ff ff69 	bl	20000010 <kbdActive>
			
			return key[(row-1)*4+(col-1)];
2000013e:	2317      	movs	r3, #23
20000140:	18fb      	adds	r3, r7, r3
20000142:	781b      	ldrb	r3, [r3, #0]
20000144:	3b01      	subs	r3, #1
20000146:	009a      	lsls	r2, r3, #2
20000148:	2316      	movs	r3, #22
2000014a:	18fb      	adds	r3, r7, r3
2000014c:	781b      	ldrb	r3, [r3, #0]
2000014e:	3b01      	subs	r3, #1
20000150:	18d3      	adds	r3, r2, r3
20000152:	1d3a      	adds	r2, r7, #4
20000154:	5cd3      	ldrb	r3, [r2, r3]
20000156:	e00e      	b.n	20000176 <keyb+0x7a>
	for(row=1; row<=4; row++){
20000158:	2117      	movs	r1, #23
2000015a:	187b      	adds	r3, r7, r1
2000015c:	781a      	ldrb	r2, [r3, #0]
2000015e:	187b      	adds	r3, r7, r1
20000160:	3201      	adds	r2, #1
20000162:	701a      	strb	r2, [r3, #0]
20000164:	2317      	movs	r3, #23
20000166:	18fb      	adds	r3, r7, r3
20000168:	781b      	ldrb	r3, [r3, #0]
2000016a:	2b04      	cmp	r3, #4
2000016c:	d9d4      	bls.n	20000118 <keyb+0x1c>
		}
	}
	kbdActive(0);
2000016e:	2000      	movs	r0, #0
20000170:	f7ff ff4e 	bl	20000010 <kbdActive>
	return 0xff;
20000174:	23ff      	movs	r3, #255	; 0xff
20000176:	0018      	movs	r0, r3
20000178:	46bd      	mov	sp, r7
2000017a:	b006      	add	sp, #24
2000017c:	bdb0      	pop	{r4, r5, r7, pc}
2000017e:	46c0      	nop			; (mov r8, r8)
20000180:	20000b7c 	andcs	r0, r0, ip, ror fp

20000184 <systick_irq_handler>:
#include "defines.h"
#include "globals.h"

void systick_irq_handler (void)
{
20000184:	b580      	push	{r7, lr}
20000186:	af00      	add	r7, sp, #0
	
	//Ã–ka second_count, 
	*STK_CTRL = 0;
20000188:	4b0a      	ldr	r3, [pc, #40]	; (200001b4 <systick_irq_handler+0x30>)
2000018a:	2200      	movs	r2, #0
2000018c:	601a      	str	r2, [r3, #0]
	delay_count -- ;
2000018e:	4b0a      	ldr	r3, [pc, #40]	; (200001b8 <systick_irq_handler+0x34>)
20000190:	681b      	ldr	r3, [r3, #0]
20000192:	1e5a      	subs	r2, r3, #1
20000194:	4b08      	ldr	r3, [pc, #32]	; (200001b8 <systick_irq_handler+0x34>)
20000196:	601a      	str	r2, [r3, #0]
	if( delay_count > 0 )
20000198:	4b07      	ldr	r3, [pc, #28]	; (200001b8 <systick_irq_handler+0x34>)
2000019a:	681b      	ldr	r3, [r3, #0]
2000019c:	2b00      	cmp	r3, #0
2000019e:	dd02      	ble.n	200001a6 <systick_irq_handler+0x22>
	delay_1s();
200001a0:	f000 f862 	bl	20000268 <delay_1s>
	else
	systick_flag = 1;
	
200001a4:	e002      	b.n	200001ac <systick_irq_handler+0x28>
	systick_flag = 1;
200001a6:	4b05      	ldr	r3, [pc, #20]	; (200001bc <systick_irq_handler+0x38>)
200001a8:	2201      	movs	r2, #1
200001aa:	601a      	str	r2, [r3, #0]
200001ac:	46c0      	nop			; (mov r8, r8)
200001ae:	46bd      	mov	sp, r7
200001b0:	bd80      	pop	{r7, pc}
200001b2:	46c0      	nop			; (mov r8, r8)
200001b4:	e000e010 	and	lr, r0, r0, lsl r0
200001b8:	20000b1c 	andcs	r0, r0, ip, lsl fp
200001bc:	20000b20 	andcs	r0, r0, r0, lsr #22

200001c0 <delay_250ns>:
#include "defines.h"
#include "globals.h"

void delay_250ns(void){
200001c0:	b580      	push	{r7, lr}
200001c2:	af00      	add	r7, sp, #0
	
	*STK_CTRL = 0;
200001c4:	4b0c      	ldr	r3, [pc, #48]	; (200001f8 <delay_250ns+0x38>)
200001c6:	2200      	movs	r2, #0
200001c8:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1 );
200001ca:	4b0c      	ldr	r3, [pc, #48]	; (200001fc <delay_250ns+0x3c>)
200001cc:	2229      	movs	r2, #41	; 0x29
200001ce:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
200001d0:	4b0b      	ldr	r3, [pc, #44]	; (20000200 <delay_250ns+0x40>)
200001d2:	2200      	movs	r2, #0
200001d4:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
200001d6:	4b08      	ldr	r3, [pc, #32]	; (200001f8 <delay_250ns+0x38>)
200001d8:	2205      	movs	r2, #5
200001da:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000 )== 0 ) {}
200001dc:	46c0      	nop			; (mov r8, r8)
200001de:	4b06      	ldr	r3, [pc, #24]	; (200001f8 <delay_250ns+0x38>)
200001e0:	681a      	ldr	r2, [r3, #0]
200001e2:	2380      	movs	r3, #128	; 0x80
200001e4:	025b      	lsls	r3, r3, #9
200001e6:	4013      	ands	r3, r2
200001e8:	d0f9      	beq.n	200001de <delay_250ns+0x1e>
	*STK_CTRL = 0;
200001ea:	4b03      	ldr	r3, [pc, #12]	; (200001f8 <delay_250ns+0x38>)
200001ec:	2200      	movs	r2, #0
200001ee:	601a      	str	r2, [r3, #0]
}
200001f0:	46c0      	nop			; (mov r8, r8)
200001f2:	46bd      	mov	sp, r7
200001f4:	bd80      	pop	{r7, pc}
200001f6:	46c0      	nop			; (mov r8, r8)
200001f8:	e000e010 	and	lr, r0, r0, lsl r0
200001fc:	e000e014 	and	lr, r0, r4, lsl r0
20000200:	e000e018 	and	lr, r0, r8, lsl r0

20000204 <delay_500ns>:

void delay_500ns(void){
20000204:	b580      	push	{r7, lr}
20000206:	af00      	add	r7, sp, #0
	delay_250ns();
20000208:	f7ff ffda 	bl	200001c0 <delay_250ns>
	delay_250ns();
2000020c:	f7ff ffd8 	bl	200001c0 <delay_250ns>
}
20000210:	46c0      	nop			; (mov r8, r8)
20000212:	46bd      	mov	sp, r7
20000214:	bd80      	pop	{r7, pc}

20000216 <delay_mikro>:

void delay_mikro(unsigned int us){
20000216:	b580      	push	{r7, lr}
20000218:	b082      	sub	sp, #8
2000021a:	af00      	add	r7, sp, #0
2000021c:	6078      	str	r0, [r7, #4]
	
	while(us--) 
2000021e:	e007      	b.n	20000230 <delay_mikro+0x1a>
	{
		delay_250ns();
20000220:	f7ff ffce 	bl	200001c0 <delay_250ns>
		delay_250ns();
20000224:	f7ff ffcc 	bl	200001c0 <delay_250ns>
		delay_250ns();
20000228:	f7ff ffca 	bl	200001c0 <delay_250ns>
		delay_250ns();
2000022c:	f7ff ffc8 	bl	200001c0 <delay_250ns>
	while(us--) 
20000230:	687b      	ldr	r3, [r7, #4]
20000232:	1e5a      	subs	r2, r3, #1
20000234:	607a      	str	r2, [r7, #4]
20000236:	2b00      	cmp	r3, #0
20000238:	d1f2      	bne.n	20000220 <delay_mikro+0xa>
	}
}
2000023a:	46c0      	nop			; (mov r8, r8)
2000023c:	46bd      	mov	sp, r7
2000023e:	b002      	add	sp, #8
20000240:	bd80      	pop	{r7, pc}

20000242 <delay_milli>:

void delay_milli(unsigned int ms){
20000242:	b580      	push	{r7, lr}
20000244:	b082      	sub	sp, #8
20000246:	af00      	add	r7, sp, #0
20000248:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		ms=ms/1000;
		ms++;
	#endif
	while( ms-- )
2000024a:	e004      	b.n	20000256 <delay_milli+0x14>
		delay_mikro(1000);
2000024c:	23fa      	movs	r3, #250	; 0xfa
2000024e:	009b      	lsls	r3, r3, #2
20000250:	0018      	movs	r0, r3
20000252:	f7ff ffe0 	bl	20000216 <delay_mikro>
	while( ms-- )
20000256:	687b      	ldr	r3, [r7, #4]
20000258:	1e5a      	subs	r2, r3, #1
2000025a:	607a      	str	r2, [r7, #4]
2000025c:	2b00      	cmp	r3, #0
2000025e:	d1f5      	bne.n	2000024c <delay_milli+0xa>
}
20000260:	46c0      	nop			; (mov r8, r8)
20000262:	46bd      	mov	sp, r7
20000264:	b002      	add	sp, #8
20000266:	bd80      	pop	{r7, pc}

20000268 <delay_1s>:

void delay_1s(void){
20000268:	b580      	push	{r7, lr}
2000026a:	af00      	add	r7, sp, #0
	systick_flag=0;
2000026c:	4b08      	ldr	r3, [pc, #32]	; (20000290 <delay_1s+0x28>)
2000026e:	2200      	movs	r2, #0
20000270:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 0;
20000272:	4b08      	ldr	r3, [pc, #32]	; (20000294 <delay_1s+0x2c>)
20000274:	2200      	movs	r2, #0
20000276:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( 1680000000 -1 );
20000278:	4b07      	ldr	r3, [pc, #28]	; (20000298 <delay_1s+0x30>)
2000027a:	4a08      	ldr	r2, [pc, #32]	; (2000029c <delay_1s+0x34>)
2000027c:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
2000027e:	4b08      	ldr	r3, [pc, #32]	; (200002a0 <delay_1s+0x38>)
20000280:	2200      	movs	r2, #0
20000282:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 7;
20000284:	4b03      	ldr	r3, [pc, #12]	; (20000294 <delay_1s+0x2c>)
20000286:	2207      	movs	r2, #7
20000288:	601a      	str	r2, [r3, #0]

}
2000028a:	46c0      	nop			; (mov r8, r8)
2000028c:	46bd      	mov	sp, r7
2000028e:	bd80      	pop	{r7, pc}
20000290:	20000b20 	andcs	r0, r0, r0, lsr #22
20000294:	e000e010 	and	lr, r0, r0, lsl r0
20000298:	e000e014 	and	lr, r0, r4, lsl r0
2000029c:	6422c3ff 	strtvs	ip, [r2], #-1023	; 0xfffffc01
200002a0:	e000e018 	and	lr, r0, r8, lsl r0

200002a4 <delay>:

void delay(unsigned int count){
200002a4:	b580      	push	{r7, lr}
200002a6:	b082      	sub	sp, #8
200002a8:	af00      	add	r7, sp, #0
200002aa:	6078      	str	r0, [r7, #4]
	if( count == 0)
200002ac:	687b      	ldr	r3, [r7, #4]
200002ae:	2b00      	cmp	r3, #0
200002b0:	d008      	beq.n	200002c4 <delay+0x20>
	return;
	delay_count = count;
200002b2:	687a      	ldr	r2, [r7, #4]
200002b4:	4b05      	ldr	r3, [pc, #20]	; (200002cc <delay+0x28>)
200002b6:	601a      	str	r2, [r3, #0]
	systick_flag = 0;	
200002b8:	4b05      	ldr	r3, [pc, #20]	; (200002d0 <delay+0x2c>)
200002ba:	2200      	movs	r2, #0
200002bc:	601a      	str	r2, [r3, #0]
	delay_1s();
200002be:	f7ff ffd3 	bl	20000268 <delay_1s>
200002c2:	e000      	b.n	200002c6 <delay+0x22>
	return;
200002c4:	46c0      	nop			; (mov r8, r8)
200002c6:	46bd      	mov	sp, r7
200002c8:	b002      	add	sp, #8
200002ca:	bd80      	pop	{r7, pc}
200002cc:	20000b1c 	andcs	r0, r0, ip, lsl fp
200002d0:	20000b20 	andcs	r0, r0, r0, lsr #22

200002d4 <init_app>:


//inits
void init_app(void){
200002d4:	b580      	push	{r7, lr}
200002d6:	af00      	add	r7, sp, #0
	//fÃ¶r avbrott
	*((unsigned long *) 0x40023830) =0x18;
200002d8:	4b12      	ldr	r3, [pc, #72]	; (20000324 <init_app+0x50>)
200002da:	2218      	movs	r2, #24
200002dc:	601a      	str	r2, [r3, #0]
	*((unsigned long *) 0x40023844) |=0x4000; 
200002de:	4b12      	ldr	r3, [pc, #72]	; (20000328 <init_app+0x54>)
200002e0:	681a      	ldr	r2, [r3, #0]
200002e2:	4b11      	ldr	r3, [pc, #68]	; (20000328 <init_app+0x54>)
200002e4:	2180      	movs	r1, #128	; 0x80
200002e6:	01c9      	lsls	r1, r1, #7
200002e8:	430a      	orrs	r2, r1
200002ea:	601a      	str	r2, [r3, #0]
	*((unsigned long *) 0xE000ED08) =0x2001C000; //flytta vektortabellen fÃ¶r undantag till adress 0x2001C000 
200002ec:	4b0f      	ldr	r3, [pc, #60]	; (2000032c <init_app+0x58>)
200002ee:	4a10      	ldr	r2, [pc, #64]	; (20000330 <init_app+0x5c>)
200002f0:	601a      	str	r2, [r3, #0]
	*((void(**)(void))0x2001C03C) = systick_irq_handler; //init med adress till hanteringsrutin
200002f2:	4b10      	ldr	r3, [pc, #64]	; (20000334 <init_app+0x60>)
200002f4:	4a10      	ldr	r2, [pc, #64]	; (20000338 <init_app+0x64>)
200002f6:	601a      	str	r2, [r3, #0]
	
	//port init
	GPIO_E.moder = 0x55555555; //15-0 utgÃ¥ng. FÃ¶r LCD
200002f8:	4b10      	ldr	r3, [pc, #64]	; (2000033c <init_app+0x68>)
200002fa:	4a11      	ldr	r2, [pc, #68]	; (20000340 <init_app+0x6c>)
200002fc:	601a      	str	r2, [r3, #0]
	GPIO_D.moder = 0x00005555; //7-0 utgÃ¥ng. FÃ¶r keypad
200002fe:	4b11      	ldr	r3, [pc, #68]	; (20000344 <init_app+0x70>)
20000300:	4a11      	ldr	r2, [pc, #68]	; (20000348 <init_app+0x74>)
20000302:	601a      	str	r2, [r3, #0]
	GPIO_D.otyper = 0x0000; //onÃ¶dig tilldelning?
20000304:	4b0f      	ldr	r3, [pc, #60]	; (20000344 <init_app+0x70>)
20000306:	2200      	movs	r2, #0
20000308:	809a      	strh	r2, [r3, #4]
	GPIO_D.pupdr = 0x55aa0000;
2000030a:	4b0e      	ldr	r3, [pc, #56]	; (20000344 <init_app+0x70>)
2000030c:	4a0f      	ldr	r2, [pc, #60]	; (2000034c <init_app+0x78>)
2000030e:	60da      	str	r2, [r3, #12]
	
	systick_flag = 0;
20000310:	4b0f      	ldr	r3, [pc, #60]	; (20000350 <init_app+0x7c>)
20000312:	2200      	movs	r2, #0
20000314:	601a      	str	r2, [r3, #0]
	second_count = 0;
20000316:	4b0f      	ldr	r3, [pc, #60]	; (20000354 <init_app+0x80>)
20000318:	2200      	movs	r2, #0
2000031a:	601a      	str	r2, [r3, #0]
}
2000031c:	46c0      	nop			; (mov r8, r8)
2000031e:	46bd      	mov	sp, r7
20000320:	bd80      	pop	{r7, pc}
20000322:	46c0      	nop			; (mov r8, r8)
20000324:	40023830 	andmi	r3, r2, r0, lsr r8
20000328:	40023844 	andmi	r3, r2, r4, asr #16
2000032c:	e000ed08 	and	lr, r0, r8, lsl #26
20000330:	2001c000 	andcs	ip, r1, r0
20000334:	2001c03c 	andcs	ip, r1, ip, lsr r0
20000338:	20000185 	andcs	r0, r0, r5, lsl #3
2000033c:	40021000 	andmi	r1, r2, r0
20000340:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000344:	40020c00 	andmi	r0, r2, r0, lsl #24
20000348:	00005555 	andeq	r5, r0, r5, asr r5
2000034c:	55aa0000 	strpl	r0, [sl, #0]!
20000350:	20000b20 	andcs	r0, r0, r0, lsr #22
20000354:	20000b18 	andcs	r0, r0, r8, lsl fp

20000358 <main>:




void main(void)
{
20000358:	b580      	push	{r7, lr}
2000035a:	b082      	sub	sp, #8
2000035c:	af00      	add	r7, sp, #0
	char c;
	POBJECT p = &ball;
2000035e:	4b20      	ldr	r3, [pc, #128]	; (200003e0 <main+0x88>)
20000360:	607b      	str	r3, [r7, #4]
	init_app();
20000362:	f7ff ffb7 	bl	200002d4 <init_app>
	graphic_initialize();
20000366:	f000 fa98 	bl	2000089a <graphic_initialize>
	graphic_clear_screen();
2000036a:	f000 fac1 	bl	200008f0 <graphic_clear_screen>
	
	while (1){
		p->move(p);
2000036e:	687b      	ldr	r3, [r7, #4]
20000370:	69db      	ldr	r3, [r3, #28]
20000372:	687a      	ldr	r2, [r7, #4]
20000374:	0010      	movs	r0, r2
20000376:	4798      	blx	r3
		delay_milli(40);
20000378:	2028      	movs	r0, #40	; 0x28
2000037a:	f7ff ff62 	bl	20000242 <delay_milli>
		c=keyb();
2000037e:	f7ff febd 	bl	200000fc <keyb>
20000382:	0002      	movs	r2, r0
20000384:	1cfb      	adds	r3, r7, #3
20000386:	701a      	strb	r2, [r3, #0]
		switch(c){
20000388:	1cfb      	adds	r3, r7, #3
2000038a:	781b      	ldrb	r3, [r3, #0]
2000038c:	2b04      	cmp	r3, #4
2000038e:	d00f      	beq.n	200003b0 <main+0x58>
20000390:	dc02      	bgt.n	20000398 <main+0x40>
20000392:	2b02      	cmp	r3, #2
20000394:	d014      	beq.n	200003c0 <main+0x68>
20000396:	e022      	b.n	200003de <main+0x86>
20000398:	2b06      	cmp	r3, #6
2000039a:	d002      	beq.n	200003a2 <main+0x4a>
2000039c:	2b08      	cmp	r3, #8
2000039e:	d017      	beq.n	200003d0 <main+0x78>
200003a0:	e01d      	b.n	200003de <main+0x86>
			case 6: p->set_speed(p,2,0); break;
200003a2:	687b      	ldr	r3, [r7, #4]
200003a4:	6a1b      	ldr	r3, [r3, #32]
200003a6:	6878      	ldr	r0, [r7, #4]
200003a8:	2200      	movs	r2, #0
200003aa:	2102      	movs	r1, #2
200003ac:	4798      	blx	r3
200003ae:	e016      	b.n	200003de <main+0x86>
			case 4: p->set_speed(p,-2,0); break;
200003b0:	687b      	ldr	r3, [r7, #4]
200003b2:	6a1b      	ldr	r3, [r3, #32]
200003b4:	2202      	movs	r2, #2
200003b6:	4251      	negs	r1, r2
200003b8:	6878      	ldr	r0, [r7, #4]
200003ba:	2200      	movs	r2, #0
200003bc:	4798      	blx	r3
200003be:	e00e      	b.n	200003de <main+0x86>
			case 2: p->set_speed(p,0,-2); break;
200003c0:	687b      	ldr	r3, [r7, #4]
200003c2:	6a1b      	ldr	r3, [r3, #32]
200003c4:	2202      	movs	r2, #2
200003c6:	4252      	negs	r2, r2
200003c8:	6878      	ldr	r0, [r7, #4]
200003ca:	2100      	movs	r1, #0
200003cc:	4798      	blx	r3
200003ce:	e006      	b.n	200003de <main+0x86>
			case 8: p->set_speed(p,0,2); break;
200003d0:	687b      	ldr	r3, [r7, #4]
200003d2:	6a1b      	ldr	r3, [r3, #32]
200003d4:	6878      	ldr	r0, [r7, #4]
200003d6:	2202      	movs	r2, #2
200003d8:	2100      	movs	r1, #0
200003da:	4798      	blx	r3
200003dc:	46c0      	nop			; (mov r8, r8)
	while (1){
200003de:	e7c6      	b.n	2000036e <main+0x16>
200003e0:	20000b58 	andcs	r0, r0, r8, asr fp

200003e4 <set_object_speed>:
		{3, 2}
	}
};


void set_object_speed(POBJECT o, int speedX, int speedY){
200003e4:	b580      	push	{r7, lr}
200003e6:	b084      	sub	sp, #16
200003e8:	af00      	add	r7, sp, #0
200003ea:	60f8      	str	r0, [r7, #12]
200003ec:	60b9      	str	r1, [r7, #8]
200003ee:	607a      	str	r2, [r7, #4]
	o->dirX = speedX;
200003f0:	68fb      	ldr	r3, [r7, #12]
200003f2:	68ba      	ldr	r2, [r7, #8]
200003f4:	605a      	str	r2, [r3, #4]
	o->dirY = speedY;
200003f6:	68fb      	ldr	r3, [r7, #12]
200003f8:	687a      	ldr	r2, [r7, #4]
200003fa:	609a      	str	r2, [r3, #8]
}
200003fc:	46c0      	nop			; (mov r8, r8)
200003fe:	46bd      	mov	sp, r7
20000400:	b004      	add	sp, #16
20000402:	bd80      	pop	{r7, pc}

20000404 <draw_object>:

void draw_object(POBJECT o){
20000404:	b580      	push	{r7, lr}
20000406:	b084      	sub	sp, #16
20000408:	af00      	add	r7, sp, #0
2000040a:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < o->geo->numPoints; i++){
2000040c:	2300      	movs	r3, #0
2000040e:	60fb      	str	r3, [r7, #12]
20000410:	e01c      	b.n	2000044c <draw_object+0x48>
		pixel(o->posX + o->geo->px[i].x, o->posY + o->geo->px[i].y, 1);
20000412:	687b      	ldr	r3, [r7, #4]
20000414:	68da      	ldr	r2, [r3, #12]
20000416:	687b      	ldr	r3, [r7, #4]
20000418:	6819      	ldr	r1, [r3, #0]
2000041a:	68fb      	ldr	r3, [r7, #12]
2000041c:	3304      	adds	r3, #4
2000041e:	005b      	lsls	r3, r3, #1
20000420:	18cb      	adds	r3, r1, r3
20000422:	3304      	adds	r3, #4
20000424:	781b      	ldrb	r3, [r3, #0]
20000426:	18d0      	adds	r0, r2, r3
20000428:	687b      	ldr	r3, [r7, #4]
2000042a:	691a      	ldr	r2, [r3, #16]
2000042c:	687b      	ldr	r3, [r7, #4]
2000042e:	6819      	ldr	r1, [r3, #0]
20000430:	68fb      	ldr	r3, [r7, #12]
20000432:	3304      	adds	r3, #4
20000434:	005b      	lsls	r3, r3, #1
20000436:	18cb      	adds	r3, r1, r3
20000438:	3305      	adds	r3, #5
2000043a:	781b      	ldrb	r3, [r3, #0]
2000043c:	18d3      	adds	r3, r2, r3
2000043e:	2201      	movs	r2, #1
20000440:	0019      	movs	r1, r3
20000442:	f000 fa81 	bl	20000948 <pixel>
	for(int i = 0; i < o->geo->numPoints; i++){
20000446:	68fb      	ldr	r3, [r7, #12]
20000448:	3301      	adds	r3, #1
2000044a:	60fb      	str	r3, [r7, #12]
2000044c:	687b      	ldr	r3, [r7, #4]
2000044e:	681b      	ldr	r3, [r3, #0]
20000450:	681b      	ldr	r3, [r3, #0]
20000452:	68fa      	ldr	r2, [r7, #12]
20000454:	429a      	cmp	r2, r3
20000456:	dbdc      	blt.n	20000412 <draw_object+0xe>
	}
}
20000458:	46c0      	nop			; (mov r8, r8)
2000045a:	46bd      	mov	sp, r7
2000045c:	b004      	add	sp, #16
2000045e:	bd80      	pop	{r7, pc}

20000460 <clear_object>:

void clear_object(POBJECT o){
20000460:	b580      	push	{r7, lr}
20000462:	b084      	sub	sp, #16
20000464:	af00      	add	r7, sp, #0
20000466:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < o->geo->numPoints; i++){
20000468:	2300      	movs	r3, #0
2000046a:	60fb      	str	r3, [r7, #12]
2000046c:	e01c      	b.n	200004a8 <clear_object+0x48>
		pixel(o->posX + o->geo->px[i].x, o->posY + o->geo->px[i].y, 0);
2000046e:	687b      	ldr	r3, [r7, #4]
20000470:	68da      	ldr	r2, [r3, #12]
20000472:	687b      	ldr	r3, [r7, #4]
20000474:	6819      	ldr	r1, [r3, #0]
20000476:	68fb      	ldr	r3, [r7, #12]
20000478:	3304      	adds	r3, #4
2000047a:	005b      	lsls	r3, r3, #1
2000047c:	18cb      	adds	r3, r1, r3
2000047e:	3304      	adds	r3, #4
20000480:	781b      	ldrb	r3, [r3, #0]
20000482:	18d0      	adds	r0, r2, r3
20000484:	687b      	ldr	r3, [r7, #4]
20000486:	691a      	ldr	r2, [r3, #16]
20000488:	687b      	ldr	r3, [r7, #4]
2000048a:	6819      	ldr	r1, [r3, #0]
2000048c:	68fb      	ldr	r3, [r7, #12]
2000048e:	3304      	adds	r3, #4
20000490:	005b      	lsls	r3, r3, #1
20000492:	18cb      	adds	r3, r1, r3
20000494:	3305      	adds	r3, #5
20000496:	781b      	ldrb	r3, [r3, #0]
20000498:	18d3      	adds	r3, r2, r3
2000049a:	2200      	movs	r2, #0
2000049c:	0019      	movs	r1, r3
2000049e:	f000 fa53 	bl	20000948 <pixel>
	for(int i = 0; i < o->geo->numPoints; i++){
200004a2:	68fb      	ldr	r3, [r7, #12]
200004a4:	3301      	adds	r3, #1
200004a6:	60fb      	str	r3, [r7, #12]
200004a8:	687b      	ldr	r3, [r7, #4]
200004aa:	681b      	ldr	r3, [r3, #0]
200004ac:	681b      	ldr	r3, [r3, #0]
200004ae:	68fa      	ldr	r2, [r7, #12]
200004b0:	429a      	cmp	r2, r3
200004b2:	dbdc      	blt.n	2000046e <clear_object+0xe>
	}
}
200004b4:	46c0      	nop			; (mov r8, r8)
200004b6:	46bd      	mov	sp, r7
200004b8:	b004      	add	sp, #16
200004ba:	bd80      	pop	{r7, pc}

200004bc <move_object>:


void move_object(POBJECT object){
200004bc:	b590      	push	{r4, r7, lr}
200004be:	b083      	sub	sp, #12
200004c0:	af00      	add	r7, sp, #0
200004c2:	6078      	str	r0, [r7, #4]
	if(object->posX >118){
200004c4:	687b      	ldr	r3, [r7, #4]
200004c6:	68db      	ldr	r3, [r3, #12]
200004c8:	2b76      	cmp	r3, #118	; 0x76
200004ca:	dd09      	ble.n	200004e0 <move_object+0x24>
		object->set_speed(object, -2, object->dirY);
200004cc:	687b      	ldr	r3, [r7, #4]
200004ce:	6a1c      	ldr	r4, [r3, #32]
200004d0:	687b      	ldr	r3, [r7, #4]
200004d2:	689a      	ldr	r2, [r3, #8]
200004d4:	2302      	movs	r3, #2
200004d6:	4259      	negs	r1, r3
200004d8:	687b      	ldr	r3, [r7, #4]
200004da:	0018      	movs	r0, r3
200004dc:	47a0      	blx	r4
200004de:	e00b      	b.n	200004f8 <move_object+0x3c>
	} else if (object->posX <10){
200004e0:	687b      	ldr	r3, [r7, #4]
200004e2:	68db      	ldr	r3, [r3, #12]
200004e4:	2b09      	cmp	r3, #9
200004e6:	dc07      	bgt.n	200004f8 <move_object+0x3c>
		object->set_speed(object, 2, object->dirY);
200004e8:	687b      	ldr	r3, [r7, #4]
200004ea:	6a1c      	ldr	r4, [r3, #32]
200004ec:	687b      	ldr	r3, [r7, #4]
200004ee:	689a      	ldr	r2, [r3, #8]
200004f0:	687b      	ldr	r3, [r7, #4]
200004f2:	2102      	movs	r1, #2
200004f4:	0018      	movs	r0, r3
200004f6:	47a0      	blx	r4
	}
	if (object->posY <10){
200004f8:	687b      	ldr	r3, [r7, #4]
200004fa:	691b      	ldr	r3, [r3, #16]
200004fc:	2b09      	cmp	r3, #9
200004fe:	dc08      	bgt.n	20000512 <move_object+0x56>
		object->set_speed(object, object->dirX, 2);
20000500:	687b      	ldr	r3, [r7, #4]
20000502:	6a1c      	ldr	r4, [r3, #32]
20000504:	687b      	ldr	r3, [r7, #4]
20000506:	6859      	ldr	r1, [r3, #4]
20000508:	687b      	ldr	r3, [r7, #4]
2000050a:	2202      	movs	r2, #2
2000050c:	0018      	movs	r0, r3
2000050e:	47a0      	blx	r4
20000510:	e00c      	b.n	2000052c <move_object+0x70>
	} else if (object->posY >54){
20000512:	687b      	ldr	r3, [r7, #4]
20000514:	691b      	ldr	r3, [r3, #16]
20000516:	2b36      	cmp	r3, #54	; 0x36
20000518:	dd08      	ble.n	2000052c <move_object+0x70>
		object->set_speed(object, object->dirX, -2);
2000051a:	687b      	ldr	r3, [r7, #4]
2000051c:	6a1c      	ldr	r4, [r3, #32]
2000051e:	687b      	ldr	r3, [r7, #4]
20000520:	6859      	ldr	r1, [r3, #4]
20000522:	2302      	movs	r3, #2
20000524:	425a      	negs	r2, r3
20000526:	687b      	ldr	r3, [r7, #4]
20000528:	0018      	movs	r0, r3
2000052a:	47a0      	blx	r4
	}
	clear_object(object);
2000052c:	687b      	ldr	r3, [r7, #4]
2000052e:	0018      	movs	r0, r3
20000530:	f7ff ff96 	bl	20000460 <clear_object>
	object->posX += object->dirX;
20000534:	687b      	ldr	r3, [r7, #4]
20000536:	68da      	ldr	r2, [r3, #12]
20000538:	687b      	ldr	r3, [r7, #4]
2000053a:	685b      	ldr	r3, [r3, #4]
2000053c:	18d2      	adds	r2, r2, r3
2000053e:	687b      	ldr	r3, [r7, #4]
20000540:	60da      	str	r2, [r3, #12]
	object->posY += object->dirY;
20000542:	687b      	ldr	r3, [r7, #4]
20000544:	691a      	ldr	r2, [r3, #16]
20000546:	687b      	ldr	r3, [r7, #4]
20000548:	689b      	ldr	r3, [r3, #8]
2000054a:	18d2      	adds	r2, r2, r3
2000054c:	687b      	ldr	r3, [r7, #4]
2000054e:	611a      	str	r2, [r3, #16]
	
	if(object->posX < 1 || object->posX + object->geo->sizeX > 128){
20000550:	687b      	ldr	r3, [r7, #4]
20000552:	68db      	ldr	r3, [r3, #12]
20000554:	2b00      	cmp	r3, #0
20000556:	dd07      	ble.n	20000568 <move_object+0xac>
20000558:	687b      	ldr	r3, [r7, #4]
2000055a:	68da      	ldr	r2, [r3, #12]
2000055c:	687b      	ldr	r3, [r7, #4]
2000055e:	681b      	ldr	r3, [r3, #0]
20000560:	685b      	ldr	r3, [r3, #4]
20000562:	18d3      	adds	r3, r2, r3
20000564:	2b80      	cmp	r3, #128	; 0x80
20000566:	dd04      	ble.n	20000572 <move_object+0xb6>
		object->dirX = -object->dirX;
20000568:	687b      	ldr	r3, [r7, #4]
2000056a:	685b      	ldr	r3, [r3, #4]
2000056c:	425a      	negs	r2, r3
2000056e:	687b      	ldr	r3, [r7, #4]
20000570:	605a      	str	r2, [r3, #4]
	}
	
	if(object->posY < 1 || object->posY + object->geo->sizeY > 64){
20000572:	687b      	ldr	r3, [r7, #4]
20000574:	691b      	ldr	r3, [r3, #16]
20000576:	2b00      	cmp	r3, #0
20000578:	dd07      	ble.n	2000058a <move_object+0xce>
2000057a:	687b      	ldr	r3, [r7, #4]
2000057c:	691a      	ldr	r2, [r3, #16]
2000057e:	687b      	ldr	r3, [r7, #4]
20000580:	681b      	ldr	r3, [r3, #0]
20000582:	689b      	ldr	r3, [r3, #8]
20000584:	18d3      	adds	r3, r2, r3
20000586:	2b40      	cmp	r3, #64	; 0x40
20000588:	dd04      	ble.n	20000594 <move_object+0xd8>
		object->dirY = -object->dirY;
2000058a:	687b      	ldr	r3, [r7, #4]
2000058c:	689b      	ldr	r3, [r3, #8]
2000058e:	425a      	negs	r2, r3
20000590:	687b      	ldr	r3, [r7, #4]
20000592:	609a      	str	r2, [r3, #8]
	}
	draw_object(object);
20000594:	687b      	ldr	r3, [r7, #4]
20000596:	0018      	movs	r0, r3
20000598:	f7ff ff34 	bl	20000404 <draw_object>
}
2000059c:	46c0      	nop			; (mov r8, r8)
2000059e:	46bd      	mov	sp, r7
200005a0:	b003      	add	sp, #12
200005a2:	bd90      	pop	{r4, r7, pc}

200005a4 <graphic_ctrl_bit_set>:
#include "defines.h"

void graphic_ctrl_bit_set(unsigned char x){
200005a4:	b580      	push	{r7, lr}
200005a6:	b082      	sub	sp, #8
200005a8:	af00      	add	r7, sp, #0
200005aa:	0002      	movs	r2, r0
200005ac:	1dfb      	adds	r3, r7, #7
200005ae:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow |= x & ~B_SELECT;
200005b0:	4b09      	ldr	r3, [pc, #36]	; (200005d8 <graphic_ctrl_bit_set+0x34>)
200005b2:	7d1b      	ldrb	r3, [r3, #20]
200005b4:	b2db      	uxtb	r3, r3
200005b6:	b25a      	sxtb	r2, r3
200005b8:	1dfb      	adds	r3, r7, #7
200005ba:	781b      	ldrb	r3, [r3, #0]
200005bc:	b25b      	sxtb	r3, r3
200005be:	2104      	movs	r1, #4
200005c0:	438b      	bics	r3, r1
200005c2:	b25b      	sxtb	r3, r3
200005c4:	4313      	orrs	r3, r2
200005c6:	b25a      	sxtb	r2, r3
200005c8:	4b03      	ldr	r3, [pc, #12]	; (200005d8 <graphic_ctrl_bit_set+0x34>)
200005ca:	b2d2      	uxtb	r2, r2
200005cc:	751a      	strb	r2, [r3, #20]
}
200005ce:	46c0      	nop			; (mov r8, r8)
200005d0:	46bd      	mov	sp, r7
200005d2:	b002      	add	sp, #8
200005d4:	bd80      	pop	{r7, pc}
200005d6:	46c0      	nop			; (mov r8, r8)
200005d8:	40021000 	andmi	r1, r2, r0

200005dc <graphic_ctrl_bit_clear>:


//VÃ¤lj grafisk display och nollstÃ¤ll de bitar som Ã¤r 1 i x
void graphic_ctrl_bit_clear(unsigned char x){
200005dc:	b580      	push	{r7, lr}
200005de:	b082      	sub	sp, #8
200005e0:	af00      	add	r7, sp, #0
200005e2:	0002      	movs	r2, r0
200005e4:	1dfb      	adds	r3, r7, #7
200005e6:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow &= (~x & ~B_SELECT);
200005e8:	4b08      	ldr	r3, [pc, #32]	; (2000060c <graphic_ctrl_bit_clear+0x30>)
200005ea:	7d1b      	ldrb	r3, [r3, #20]
200005ec:	b2db      	uxtb	r3, r3
200005ee:	1dfa      	adds	r2, r7, #7
200005f0:	7812      	ldrb	r2, [r2, #0]
200005f2:	43d2      	mvns	r2, r2
200005f4:	b2d2      	uxtb	r2, r2
200005f6:	4013      	ands	r3, r2
200005f8:	b2db      	uxtb	r3, r3
200005fa:	4a04      	ldr	r2, [pc, #16]	; (2000060c <graphic_ctrl_bit_clear+0x30>)
200005fc:	2104      	movs	r1, #4
200005fe:	438b      	bics	r3, r1
20000600:	b2db      	uxtb	r3, r3
20000602:	7513      	strb	r3, [r2, #20]
}
20000604:	46c0      	nop			; (mov r8, r8)
20000606:	46bd      	mov	sp, r7
20000608:	b002      	add	sp, #8
2000060a:	bd80      	pop	{r7, pc}
2000060c:	40021000 	andmi	r1, r2, r0

20000610 <select_controller>:


//Konfigurera CS-signalerna
void select_controller(unsigned char controller){
20000610:	b580      	push	{r7, lr}
20000612:	b082      	sub	sp, #8
20000614:	af00      	add	r7, sp, #0
20000616:	0002      	movs	r2, r0
20000618:	1dfb      	adds	r3, r7, #7
2000061a:	701a      	strb	r2, [r3, #0]
    switch(controller){
2000061c:	1dfb      	adds	r3, r7, #7
2000061e:	781b      	ldrb	r3, [r3, #0]
20000620:	2b08      	cmp	r3, #8
20000622:	d00c      	beq.n	2000063e <select_controller+0x2e>
20000624:	dc02      	bgt.n	2000062c <select_controller+0x1c>
20000626:	2b00      	cmp	r3, #0
20000628:	d005      	beq.n	20000636 <select_controller+0x26>
2000062a:	e01a      	b.n	20000662 <select_controller+0x52>
2000062c:	2b10      	cmp	r3, #16
2000062e:	d00d      	beq.n	2000064c <select_controller+0x3c>
20000630:	2b18      	cmp	r3, #24
20000632:	d012      	beq.n	2000065a <select_controller+0x4a>
20000634:	e015      	b.n	20000662 <select_controller+0x52>
        case 0:
            graphic_ctrl_bit_clear(B_CS1 | B_CS2);
20000636:	2018      	movs	r0, #24
20000638:	f7ff ffd0 	bl	200005dc <graphic_ctrl_bit_clear>
            break;
2000063c:	e014      	b.n	20000668 <select_controller+0x58>
        case B_CS1:
            graphic_ctrl_bit_set(B_CS1);
2000063e:	2008      	movs	r0, #8
20000640:	f7ff ffb0 	bl	200005a4 <graphic_ctrl_bit_set>
            graphic_ctrl_bit_clear(B_CS2);
20000644:	2010      	movs	r0, #16
20000646:	f7ff ffc9 	bl	200005dc <graphic_ctrl_bit_clear>
            break;
2000064a:	e00d      	b.n	20000668 <select_controller+0x58>
        case B_CS2:
            graphic_ctrl_bit_set(B_CS2);
2000064c:	2010      	movs	r0, #16
2000064e:	f7ff ffa9 	bl	200005a4 <graphic_ctrl_bit_set>
            graphic_ctrl_bit_clear(B_CS1);
20000652:	2008      	movs	r0, #8
20000654:	f7ff ffc2 	bl	200005dc <graphic_ctrl_bit_clear>
            break;
20000658:	e006      	b.n	20000668 <select_controller+0x58>
        case (B_CS1 | B_CS2):
            graphic_ctrl_bit_set(B_CS1 | B_CS2);
2000065a:	2018      	movs	r0, #24
2000065c:	f7ff ffa2 	bl	200005a4 <graphic_ctrl_bit_set>
			break;
20000660:	e002      	b.n	20000668 <select_controller+0x58>
        default:
            graphic_ctrl_bit_clear(B_CS1 | B_CS2);
20000662:	2018      	movs	r0, #24
20000664:	f7ff ffba 	bl	200005dc <graphic_ctrl_bit_clear>
    }
}
20000668:	46c0      	nop			; (mov r8, r8)
2000066a:	46bd      	mov	sp, r7
2000066c:	b002      	add	sp, #8
2000066e:	bd80      	pop	{r7, pc}

20000670 <graphic_wait_ready>:




//UndersÃ¶k ''busy'' flaggan, och returnera frÃ¥n funktion nÃ¤r den blir 0
void graphic_wait_ready(void){
20000670:	b580      	push	{r7, lr}
20000672:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_clear(B_E);
20000674:	2040      	movs	r0, #64	; 0x40
20000676:	f7ff ffb1 	bl	200005dc <graphic_ctrl_bit_clear>
	
	GPIO_E.moder = 0x00005555;  //15-8 utgÃ¥ng, 7-0 ingÃ¥ng
2000067a:	4b12      	ldr	r3, [pc, #72]	; (200006c4 <graphic_wait_ready+0x54>)
2000067c:	4a12      	ldr	r2, [pc, #72]	; (200006c8 <graphic_wait_ready+0x58>)
2000067e:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_RS);
20000680:	2001      	movs	r0, #1
20000682:	f7ff ffab 	bl	200005dc <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_set(B_RW); //GÃ¶r sÃ¥ vi kollar status
20000686:	2002      	movs	r0, #2
20000688:	f7ff ff8c 	bl	200005a4 <graphic_ctrl_bit_set>
	delay_500ns();
2000068c:	f7ff fdba 	bl	20000204 <delay_500ns>
	
	while(GPIO_E.idrHigh & 1<<7){ //gÃ¶r detta medan busy-flaggan inte Ã¤r 0
20000690:	e009      	b.n	200006a6 <graphic_wait_ready+0x36>
		graphic_ctrl_bit_set(B_E);
20000692:	2040      	movs	r0, #64	; 0x40
20000694:	f7ff ff86 	bl	200005a4 <graphic_ctrl_bit_set>
		delay_500ns();
20000698:	f7ff fdb4 	bl	20000204 <delay_500ns>
		graphic_ctrl_bit_clear(B_E);
2000069c:	2040      	movs	r0, #64	; 0x40
2000069e:	f7ff ff9d 	bl	200005dc <graphic_ctrl_bit_clear>
		delay_500ns();
200006a2:	f7ff fdaf 	bl	20000204 <delay_500ns>
	while(GPIO_E.idrHigh & 1<<7){ //gÃ¶r detta medan busy-flaggan inte Ã¤r 0
200006a6:	4b07      	ldr	r3, [pc, #28]	; (200006c4 <graphic_wait_ready+0x54>)
200006a8:	7c5b      	ldrb	r3, [r3, #17]
200006aa:	b2db      	uxtb	r3, r3
200006ac:	b25b      	sxtb	r3, r3
200006ae:	2b00      	cmp	r3, #0
200006b0:	dbef      	blt.n	20000692 <graphic_wait_ready+0x22>
	}
	
	graphic_ctrl_bit_set(B_E);
200006b2:	2040      	movs	r0, #64	; 0x40
200006b4:	f7ff ff76 	bl	200005a4 <graphic_ctrl_bit_set>
	GPIO_E.moder = 0x55555555; //15-0 utgÃ¥ng
200006b8:	4b02      	ldr	r3, [pc, #8]	; (200006c4 <graphic_wait_ready+0x54>)
200006ba:	4a04      	ldr	r2, [pc, #16]	; (200006cc <graphic_wait_ready+0x5c>)
200006bc:	601a      	str	r2, [r3, #0]
}
200006be:	46c0      	nop			; (mov r8, r8)
200006c0:	46bd      	mov	sp, r7
200006c2:	bd80      	pop	{r7, pc}
200006c4:	40021000 	andmi	r1, r2, r0
200006c8:	00005555 	andeq	r5, r0, r5, asr r5
200006cc:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200006d0 <graphic_read>:



unsigned char graphic_read(unsigned char controller){
200006d0:	b580      	push	{r7, lr}
200006d2:	b084      	sub	sp, #16
200006d4:	af00      	add	r7, sp, #0
200006d6:	0002      	movs	r2, r0
200006d8:	1dfb      	adds	r3, r7, #7
200006da:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
200006dc:	2040      	movs	r0, #64	; 0x40
200006de:	f7ff ff7d 	bl	200005dc <graphic_ctrl_bit_clear>
	
	GPIO_E.moder = 0x00005555;  //15-8 utgÃ¥ng, 7-0 ingÃ¥ng
200006e2:	4b1d      	ldr	r3, [pc, #116]	; (20000758 <graphic_read+0x88>)
200006e4:	4a1d      	ldr	r2, [pc, #116]	; (2000075c <graphic_read+0x8c>)
200006e6:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_set(B_RS);
200006e8:	2001      	movs	r0, #1
200006ea:	f7ff ff5b 	bl	200005a4 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_set(B_RW); //GÃ¶r sÃ¥ vi kan lÃ¤sa data
200006ee:	2002      	movs	r0, #2
200006f0:	f7ff ff58 	bl	200005a4 <graphic_ctrl_bit_set>
	select_controller(controller);
200006f4:	1dfb      	adds	r3, r7, #7
200006f6:	781b      	ldrb	r3, [r3, #0]
200006f8:	0018      	movs	r0, r3
200006fa:	f7ff ff89 	bl	20000610 <select_controller>
	delay_500ns();
200006fe:	f7ff fd81 	bl	20000204 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
20000702:	2040      	movs	r0, #64	; 0x40
20000704:	f7ff ff4e 	bl	200005a4 <graphic_ctrl_bit_set>
	delay_500ns();
20000708:	f7ff fd7c 	bl	20000204 <delay_500ns>
	unsigned char RV = GPIO_E.idrHigh;
2000070c:	4a12      	ldr	r2, [pc, #72]	; (20000758 <graphic_read+0x88>)
2000070e:	230f      	movs	r3, #15
20000710:	18fb      	adds	r3, r7, r3
20000712:	7c52      	ldrb	r2, [r2, #17]
20000714:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20000716:	2040      	movs	r0, #64	; 0x40
20000718:	f7ff ff60 	bl	200005dc <graphic_ctrl_bit_clear>
	GPIO_E.moder = 0x55555555; //15-0 utgÃ¥ng
2000071c:	4b0e      	ldr	r3, [pc, #56]	; (20000758 <graphic_read+0x88>)
2000071e:	4a10      	ldr	r2, [pc, #64]	; (20000760 <graphic_read+0x90>)
20000720:	601a      	str	r2, [r3, #0]
	
	if (controller == B_CS1){
20000722:	1dfb      	adds	r3, r7, #7
20000724:	781b      	ldrb	r3, [r3, #0]
20000726:	2b08      	cmp	r3, #8
20000728:	d105      	bne.n	20000736 <graphic_read+0x66>
		select_controller(B_CS1);
2000072a:	2008      	movs	r0, #8
2000072c:	f7ff ff70 	bl	20000610 <select_controller>
		graphic_wait_ready();
20000730:	f7ff ff9e 	bl	20000670 <graphic_wait_ready>
20000734:	e008      	b.n	20000748 <graphic_read+0x78>
	} else if (controller == B_CS2){
20000736:	1dfb      	adds	r3, r7, #7
20000738:	781b      	ldrb	r3, [r3, #0]
2000073a:	2b10      	cmp	r3, #16
2000073c:	d104      	bne.n	20000748 <graphic_read+0x78>
		select_controller(B_CS2);
2000073e:	2010      	movs	r0, #16
20000740:	f7ff ff66 	bl	20000610 <select_controller>
		graphic_wait_ready();
20000744:	f7ff ff94 	bl	20000670 <graphic_wait_ready>
	}
	return RV;
20000748:	230f      	movs	r3, #15
2000074a:	18fb      	adds	r3, r7, r3
2000074c:	781b      	ldrb	r3, [r3, #0]
}
2000074e:	0018      	movs	r0, r3
20000750:	46bd      	mov	sp, r7
20000752:	b004      	add	sp, #16
20000754:	bd80      	pop	{r7, pc}
20000756:	46c0      	nop			; (mov r8, r8)
20000758:	40021000 	andmi	r1, r2, r0
2000075c:	00005555 	andeq	r5, r0, r5, asr r5
20000760:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000764 <graphic_write>:


void graphic_write(unsigned char value, unsigned char controller){
20000764:	b580      	push	{r7, lr}
20000766:	b082      	sub	sp, #8
20000768:	af00      	add	r7, sp, #0
2000076a:	0002      	movs	r2, r0
2000076c:	1dfb      	adds	r3, r7, #7
2000076e:	701a      	strb	r2, [r3, #0]
20000770:	1dbb      	adds	r3, r7, #6
20000772:	1c0a      	adds	r2, r1, #0
20000774:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrHigh = value;
20000776:	4a1a      	ldr	r2, [pc, #104]	; (200007e0 <graphic_write+0x7c>)
20000778:	1dfb      	adds	r3, r7, #7
2000077a:	781b      	ldrb	r3, [r3, #0]
2000077c:	7553      	strb	r3, [r2, #21]
	select_controller(controller);
2000077e:	1dbb      	adds	r3, r7, #6
20000780:	781b      	ldrb	r3, [r3, #0]
20000782:	0018      	movs	r0, r3
20000784:	f7ff ff44 	bl	20000610 <select_controller>
	delay_500ns();
20000788:	f7ff fd3c 	bl	20000204 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
2000078c:	2040      	movs	r0, #64	; 0x40
2000078e:	f7ff ff09 	bl	200005a4 <graphic_ctrl_bit_set>
	delay_500ns();
20000792:	f7ff fd37 	bl	20000204 <delay_500ns>
	graphic_ctrl_bit_clear(B_E);
20000796:	2040      	movs	r0, #64	; 0x40
20000798:	f7ff ff20 	bl	200005dc <graphic_ctrl_bit_clear>
	
	if (controller & B_CS1){
2000079c:	1dbb      	adds	r3, r7, #6
2000079e:	781b      	ldrb	r3, [r3, #0]
200007a0:	2208      	movs	r2, #8
200007a2:	4013      	ands	r3, r2
200007a4:	d005      	beq.n	200007b2 <graphic_write+0x4e>
		select_controller(B_CS1);
200007a6:	2008      	movs	r0, #8
200007a8:	f7ff ff32 	bl	20000610 <select_controller>
		graphic_wait_ready();
200007ac:	f7ff ff60 	bl	20000670 <graphic_wait_ready>
200007b0:	e009      	b.n	200007c6 <graphic_write+0x62>
	} else if (controller & B_CS2){
200007b2:	1dbb      	adds	r3, r7, #6
200007b4:	781b      	ldrb	r3, [r3, #0]
200007b6:	2210      	movs	r2, #16
200007b8:	4013      	ands	r3, r2
200007ba:	d004      	beq.n	200007c6 <graphic_write+0x62>
		select_controller(B_CS2);
200007bc:	2010      	movs	r0, #16
200007be:	f7ff ff27 	bl	20000610 <select_controller>
		graphic_wait_ready();
200007c2:	f7ff ff55 	bl	20000670 <graphic_wait_ready>
	}
	
	GPIO_E.odrHigh = 0;
200007c6:	4b06      	ldr	r3, [pc, #24]	; (200007e0 <graphic_write+0x7c>)
200007c8:	2200      	movs	r2, #0
200007ca:	755a      	strb	r2, [r3, #21]
	graphic_ctrl_bit_set(B_E);
200007cc:	2040      	movs	r0, #64	; 0x40
200007ce:	f7ff fee9 	bl	200005a4 <graphic_ctrl_bit_set>
	select_controller(0);
200007d2:	2000      	movs	r0, #0
200007d4:	f7ff ff1c 	bl	20000610 <select_controller>
}
200007d8:	46c0      	nop			; (mov r8, r8)
200007da:	46bd      	mov	sp, r7
200007dc:	b002      	add	sp, #8
200007de:	bd80      	pop	{r7, pc}
200007e0:	40021000 	andmi	r1, r2, r0

200007e4 <graphic_write_command>:


void graphic_write_command(unsigned char command, unsigned char controller){
200007e4:	b580      	push	{r7, lr}
200007e6:	b082      	sub	sp, #8
200007e8:	af00      	add	r7, sp, #0
200007ea:	0002      	movs	r2, r0
200007ec:	1dfb      	adds	r3, r7, #7
200007ee:	701a      	strb	r2, [r3, #0]
200007f0:	1dbb      	adds	r3, r7, #6
200007f2:	1c0a      	adds	r2, r1, #0
200007f4:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
200007f6:	2040      	movs	r0, #64	; 0x40
200007f8:	f7ff fef0 	bl	200005dc <graphic_ctrl_bit_clear>
	select_controller(controller);
200007fc:	1dbb      	adds	r3, r7, #6
200007fe:	781b      	ldrb	r3, [r3, #0]
20000800:	0018      	movs	r0, r3
20000802:	f7ff ff05 	bl	20000610 <select_controller>
	graphic_ctrl_bit_clear(B_RS);
20000806:	2001      	movs	r0, #1
20000808:	f7ff fee8 	bl	200005dc <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RW);
2000080c:	2002      	movs	r0, #2
2000080e:	f7ff fee5 	bl	200005dc <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20000812:	1dbb      	adds	r3, r7, #6
20000814:	781a      	ldrb	r2, [r3, #0]
20000816:	1dfb      	adds	r3, r7, #7
20000818:	781b      	ldrb	r3, [r3, #0]
2000081a:	0011      	movs	r1, r2
2000081c:	0018      	movs	r0, r3
2000081e:	f7ff ffa1 	bl	20000764 <graphic_write>
}
20000822:	46c0      	nop			; (mov r8, r8)
20000824:	46bd      	mov	sp, r7
20000826:	b002      	add	sp, #8
20000828:	bd80      	pop	{r7, pc}

2000082a <graphic_write_data>:

void graphic_write_data(unsigned char data, unsigned char controller){
2000082a:	b580      	push	{r7, lr}
2000082c:	b082      	sub	sp, #8
2000082e:	af00      	add	r7, sp, #0
20000830:	0002      	movs	r2, r0
20000832:	1dfb      	adds	r3, r7, #7
20000834:	701a      	strb	r2, [r3, #0]
20000836:	1dbb      	adds	r3, r7, #6
20000838:	1c0a      	adds	r2, r1, #0
2000083a:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
2000083c:	2040      	movs	r0, #64	; 0x40
2000083e:	f7ff fecd 	bl	200005dc <graphic_ctrl_bit_clear>
	select_controller(controller);
20000842:	1dbb      	adds	r3, r7, #6
20000844:	781b      	ldrb	r3, [r3, #0]
20000846:	0018      	movs	r0, r3
20000848:	f7ff fee2 	bl	20000610 <select_controller>
	graphic_ctrl_bit_set(B_RS);
2000084c:	2001      	movs	r0, #1
2000084e:	f7ff fea9 	bl	200005a4 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_clear(B_RW);
20000852:	2002      	movs	r0, #2
20000854:	f7ff fec2 	bl	200005dc <graphic_ctrl_bit_clear>
	graphic_write(data, controller);
20000858:	1dbb      	adds	r3, r7, #6
2000085a:	781a      	ldrb	r2, [r3, #0]
2000085c:	1dfb      	adds	r3, r7, #7
2000085e:	781b      	ldrb	r3, [r3, #0]
20000860:	0011      	movs	r1, r2
20000862:	0018      	movs	r0, r3
20000864:	f7ff ff7e 	bl	20000764 <graphic_write>
}
20000868:	46c0      	nop			; (mov r8, r8)
2000086a:	46bd      	mov	sp, r7
2000086c:	b002      	add	sp, #8
2000086e:	bd80      	pop	{r7, pc}

20000870 <graphic_read_data>:

unsigned char graphic_read_data(unsigned char controller){
20000870:	b580      	push	{r7, lr}
20000872:	b082      	sub	sp, #8
20000874:	af00      	add	r7, sp, #0
20000876:	0002      	movs	r2, r0
20000878:	1dfb      	adds	r3, r7, #7
2000087a:	701a      	strb	r2, [r3, #0]
	graphic_read(controller); //Nonsens
2000087c:	1dfb      	adds	r3, r7, #7
2000087e:	781b      	ldrb	r3, [r3, #0]
20000880:	0018      	movs	r0, r3
20000882:	f7ff ff25 	bl	200006d0 <graphic_read>
	return graphic_read(controller); //korrekt data
20000886:	1dfb      	adds	r3, r7, #7
20000888:	781b      	ldrb	r3, [r3, #0]
2000088a:	0018      	movs	r0, r3
2000088c:	f7ff ff20 	bl	200006d0 <graphic_read>
20000890:	0003      	movs	r3, r0
}
20000892:	0018      	movs	r0, r3
20000894:	46bd      	mov	sp, r7
20000896:	b002      	add	sp, #8
20000898:	bd80      	pop	{r7, pc}

2000089a <graphic_initialize>:

void graphic_initialize(void){
2000089a:	b580      	push	{r7, lr}
2000089c:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_set(B_E);
2000089e:	2040      	movs	r0, #64	; 0x40
200008a0:	f7ff fe80 	bl	200005a4 <graphic_ctrl_bit_set>
	delay_mikro(10);
200008a4:	200a      	movs	r0, #10
200008a6:	f7ff fcb6 	bl	20000216 <delay_mikro>
	graphic_ctrl_bit_clear(B_CS1 | B_CS2 | B_RST | B_E);
200008aa:	2078      	movs	r0, #120	; 0x78
200008ac:	f7ff fe96 	bl	200005dc <graphic_ctrl_bit_clear>
	delay_milli(30);
200008b0:	201e      	movs	r0, #30
200008b2:	f7ff fcc6 	bl	20000242 <delay_milli>
	graphic_ctrl_bit_set(B_RST);
200008b6:	2020      	movs	r0, #32
200008b8:	f7ff fe74 	bl	200005a4 <graphic_ctrl_bit_set>
	graphic_write_command(LCD_OFF, B_CS1|B_CS2);
200008bc:	2118      	movs	r1, #24
200008be:	203e      	movs	r0, #62	; 0x3e
200008c0:	f7ff ff90 	bl	200007e4 <graphic_write_command>
	graphic_write_command(LCD_ON, B_CS1|B_CS2);         //toggla display
200008c4:	2118      	movs	r1, #24
200008c6:	203f      	movs	r0, #63	; 0x3f
200008c8:	f7ff ff8c 	bl	200007e4 <graphic_write_command>
	graphic_write_command(LCD_DISP_START, B_CS1|B_CS2); //start=0
200008cc:	2118      	movs	r1, #24
200008ce:	20c0      	movs	r0, #192	; 0xc0
200008d0:	f7ff ff88 	bl	200007e4 <graphic_write_command>
	graphic_write_command(LCD_SET_ADD, B_CS1|B_CS2);    //add=0
200008d4:	2118      	movs	r1, #24
200008d6:	2040      	movs	r0, #64	; 0x40
200008d8:	f7ff ff84 	bl	200007e4 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE, B_CS1|B_CS2);   //page=0
200008dc:	2118      	movs	r1, #24
200008de:	20b8      	movs	r0, #184	; 0xb8
200008e0:	f7ff ff80 	bl	200007e4 <graphic_write_command>
	select_controller(0);                               //deaktivera bÃ¥da CS-signalerna
200008e4:	2000      	movs	r0, #0
200008e6:	f7ff fe93 	bl	20000610 <select_controller>
}
200008ea:	46c0      	nop			; (mov r8, r8)
200008ec:	46bd      	mov	sp, r7
200008ee:	bd80      	pop	{r7, pc}

200008f0 <graphic_clear_screen>:

void graphic_clear_screen(void){
200008f0:	b580      	push	{r7, lr}
200008f2:	b082      	sub	sp, #8
200008f4:	af00      	add	r7, sp, #0
	for (int i = 0; i<=7; i++){
200008f6:	2300      	movs	r3, #0
200008f8:	607b      	str	r3, [r7, #4]
200008fa:	e01e      	b.n	2000093a <graphic_clear_screen+0x4a>
		graphic_write_command(LCD_SET_PAGE | i, B_CS1|B_CS2);
200008fc:	687b      	ldr	r3, [r7, #4]
200008fe:	b25b      	sxtb	r3, r3
20000900:	2248      	movs	r2, #72	; 0x48
20000902:	4252      	negs	r2, r2
20000904:	4313      	orrs	r3, r2
20000906:	b25b      	sxtb	r3, r3
20000908:	b2db      	uxtb	r3, r3
2000090a:	2118      	movs	r1, #24
2000090c:	0018      	movs	r0, r3
2000090e:	f7ff ff69 	bl	200007e4 <graphic_write_command>
		graphic_write_command(LCD_SET_ADD | 0, B_CS1|B_CS2);
20000912:	2118      	movs	r1, #24
20000914:	2040      	movs	r0, #64	; 0x40
20000916:	f7ff ff65 	bl	200007e4 <graphic_write_command>
		for(int w = 0; w<=63; w++){
2000091a:	2300      	movs	r3, #0
2000091c:	603b      	str	r3, [r7, #0]
2000091e:	e006      	b.n	2000092e <graphic_clear_screen+0x3e>
			graphic_write_data(0, B_CS1|B_CS2);
20000920:	2118      	movs	r1, #24
20000922:	2000      	movs	r0, #0
20000924:	f7ff ff81 	bl	2000082a <graphic_write_data>
		for(int w = 0; w<=63; w++){
20000928:	683b      	ldr	r3, [r7, #0]
2000092a:	3301      	adds	r3, #1
2000092c:	603b      	str	r3, [r7, #0]
2000092e:	683b      	ldr	r3, [r7, #0]
20000930:	2b3f      	cmp	r3, #63	; 0x3f
20000932:	ddf5      	ble.n	20000920 <graphic_clear_screen+0x30>
	for (int i = 0; i<=7; i++){
20000934:	687b      	ldr	r3, [r7, #4]
20000936:	3301      	adds	r3, #1
20000938:	607b      	str	r3, [r7, #4]
2000093a:	687b      	ldr	r3, [r7, #4]
2000093c:	2b07      	cmp	r3, #7
2000093e:	dddd      	ble.n	200008fc <graphic_clear_screen+0xc>
		}
	}
}
20000940:	46c0      	nop			; (mov r8, r8)
20000942:	46bd      	mov	sp, r7
20000944:	b002      	add	sp, #8
20000946:	bd80      	pop	{r7, pc}

20000948 <pixel>:

void pixel(unsigned char x, unsigned char y, unsigned char set){
20000948:	b5f0      	push	{r4, r5, r6, r7, lr}
2000094a:	b085      	sub	sp, #20
2000094c:	af00      	add	r7, sp, #0
2000094e:	0004      	movs	r4, r0
20000950:	0008      	movs	r0, r1
20000952:	0011      	movs	r1, r2
20000954:	1dfb      	adds	r3, r7, #7
20000956:	1c22      	adds	r2, r4, #0
20000958:	701a      	strb	r2, [r3, #0]
2000095a:	1dbb      	adds	r3, r7, #6
2000095c:	1c02      	adds	r2, r0, #0
2000095e:	701a      	strb	r2, [r3, #0]
20000960:	1d7b      	adds	r3, r7, #5
20000962:	1c0a      	adds	r2, r1, #0
20000964:	701a      	strb	r2, [r3, #0]
	if(x < 1 || x > 128 || y < 1 || y > 64 || set < 0 || set > 1){  //kolla sÃ¥ vÃ¤rdena Ã¤r tillÃ¥tna
20000966:	1dfb      	adds	r3, r7, #7
20000968:	781b      	ldrb	r3, [r3, #0]
2000096a:	2b00      	cmp	r3, #0
2000096c:	d100      	bne.n	20000970 <pixel+0x28>
2000096e:	e0cb      	b.n	20000b08 <pixel+0x1c0>
20000970:	1dfb      	adds	r3, r7, #7
20000972:	781b      	ldrb	r3, [r3, #0]
20000974:	2b80      	cmp	r3, #128	; 0x80
20000976:	d900      	bls.n	2000097a <pixel+0x32>
20000978:	e0c6      	b.n	20000b08 <pixel+0x1c0>
2000097a:	1dbb      	adds	r3, r7, #6
2000097c:	781b      	ldrb	r3, [r3, #0]
2000097e:	2b00      	cmp	r3, #0
20000980:	d100      	bne.n	20000984 <pixel+0x3c>
20000982:	e0c1      	b.n	20000b08 <pixel+0x1c0>
20000984:	1dbb      	adds	r3, r7, #6
20000986:	781b      	ldrb	r3, [r3, #0]
20000988:	2b40      	cmp	r3, #64	; 0x40
2000098a:	d900      	bls.n	2000098e <pixel+0x46>
2000098c:	e0bc      	b.n	20000b08 <pixel+0x1c0>
2000098e:	1d7b      	adds	r3, r7, #5
20000990:	781b      	ldrb	r3, [r3, #0]
20000992:	2b01      	cmp	r3, #1
20000994:	d900      	bls.n	20000998 <pixel+0x50>
20000996:	e0b7      	b.n	20000b08 <pixel+0x1c0>
		return;
	}
	
	unsigned char index = (y-1)/8;
20000998:	1dbb      	adds	r3, r7, #6
2000099a:	781b      	ldrb	r3, [r3, #0]
2000099c:	3b01      	subs	r3, #1
2000099e:	2b00      	cmp	r3, #0
200009a0:	da00      	bge.n	200009a4 <pixel+0x5c>
200009a2:	3307      	adds	r3, #7
200009a4:	10db      	asrs	r3, r3, #3
200009a6:	001a      	movs	r2, r3
200009a8:	230c      	movs	r3, #12
200009aa:	18fb      	adds	r3, r7, r3
200009ac:	701a      	strb	r2, [r3, #0]
	unsigned char bitmask;
	unsigned char controller;
	unsigned char x_fysisk;
	
	switch((y-1) % 8){
200009ae:	1dbb      	adds	r3, r7, #6
200009b0:	781b      	ldrb	r3, [r3, #0]
200009b2:	3b01      	subs	r3, #1
200009b4:	4a56      	ldr	r2, [pc, #344]	; (20000b10 <pixel+0x1c8>)
200009b6:	4013      	ands	r3, r2
200009b8:	d504      	bpl.n	200009c4 <pixel+0x7c>
200009ba:	3b01      	subs	r3, #1
200009bc:	2208      	movs	r2, #8
200009be:	4252      	negs	r2, r2
200009c0:	4313      	orrs	r3, r2
200009c2:	3301      	adds	r3, #1
200009c4:	2b07      	cmp	r3, #7
200009c6:	d82c      	bhi.n	20000a22 <pixel+0xda>
200009c8:	009a      	lsls	r2, r3, #2
200009ca:	4b52      	ldr	r3, [pc, #328]	; (20000b14 <pixel+0x1cc>)
200009cc:	18d3      	adds	r3, r2, r3
200009ce:	681b      	ldr	r3, [r3, #0]
200009d0:	469f      	mov	pc, r3
		case 0:
			bitmask = 1;
200009d2:	230f      	movs	r3, #15
200009d4:	18fb      	adds	r3, r7, r3
200009d6:	2201      	movs	r2, #1
200009d8:	701a      	strb	r2, [r3, #0]
			break;
200009da:	e022      	b.n	20000a22 <pixel+0xda>
		case 1:
			bitmask = 2;
200009dc:	230f      	movs	r3, #15
200009de:	18fb      	adds	r3, r7, r3
200009e0:	2202      	movs	r2, #2
200009e2:	701a      	strb	r2, [r3, #0]
			break;
200009e4:	e01d      	b.n	20000a22 <pixel+0xda>
		case 2:
			bitmask = 4;
200009e6:	230f      	movs	r3, #15
200009e8:	18fb      	adds	r3, r7, r3
200009ea:	2204      	movs	r2, #4
200009ec:	701a      	strb	r2, [r3, #0]
			break;
200009ee:	e018      	b.n	20000a22 <pixel+0xda>
		case 3:
			bitmask = 8;
200009f0:	230f      	movs	r3, #15
200009f2:	18fb      	adds	r3, r7, r3
200009f4:	2208      	movs	r2, #8
200009f6:	701a      	strb	r2, [r3, #0]
			break;
200009f8:	e013      	b.n	20000a22 <pixel+0xda>
		case 4:
			bitmask = 0x10;
200009fa:	230f      	movs	r3, #15
200009fc:	18fb      	adds	r3, r7, r3
200009fe:	2210      	movs	r2, #16
20000a00:	701a      	strb	r2, [r3, #0]
			break;
20000a02:	e00e      	b.n	20000a22 <pixel+0xda>
		case 5:
			bitmask = 0x20;
20000a04:	230f      	movs	r3, #15
20000a06:	18fb      	adds	r3, r7, r3
20000a08:	2220      	movs	r2, #32
20000a0a:	701a      	strb	r2, [r3, #0]
			break;
20000a0c:	e009      	b.n	20000a22 <pixel+0xda>
		case 6:
			bitmask = 0x40;
20000a0e:	230f      	movs	r3, #15
20000a10:	18fb      	adds	r3, r7, r3
20000a12:	2240      	movs	r2, #64	; 0x40
20000a14:	701a      	strb	r2, [r3, #0]
			break;
20000a16:	e004      	b.n	20000a22 <pixel+0xda>
		case 7:
			bitmask = 0x80;
20000a18:	230f      	movs	r3, #15
20000a1a:	18fb      	adds	r3, r7, r3
20000a1c:	2280      	movs	r2, #128	; 0x80
20000a1e:	701a      	strb	r2, [r3, #0]
			break;
20000a20:	46c0      	nop			; (mov r8, r8)
	}
	
	if(set == 0){
20000a22:	1d7b      	adds	r3, r7, #5
20000a24:	781b      	ldrb	r3, [r3, #0]
20000a26:	2b00      	cmp	r3, #0
20000a28:	d105      	bne.n	20000a36 <pixel+0xee>
		bitmask = ~bitmask;
20000a2a:	220f      	movs	r2, #15
20000a2c:	18bb      	adds	r3, r7, r2
20000a2e:	18ba      	adds	r2, r7, r2
20000a30:	7812      	ldrb	r2, [r2, #0]
20000a32:	43d2      	mvns	r2, r2
20000a34:	701a      	strb	r2, [r3, #0]
	}
	
	if(x > 64){
20000a36:	1dfb      	adds	r3, r7, #7
20000a38:	781b      	ldrb	r3, [r3, #0]
20000a3a:	2b40      	cmp	r3, #64	; 0x40
20000a3c:	d90a      	bls.n	20000a54 <pixel+0x10c>
		controller = B_CS2;
20000a3e:	230e      	movs	r3, #14
20000a40:	18fb      	adds	r3, r7, r3
20000a42:	2210      	movs	r2, #16
20000a44:	701a      	strb	r2, [r3, #0]
		x_fysisk = x - 65;
20000a46:	230d      	movs	r3, #13
20000a48:	18fb      	adds	r3, r7, r3
20000a4a:	1dfa      	adds	r2, r7, #7
20000a4c:	7812      	ldrb	r2, [r2, #0]
20000a4e:	3a41      	subs	r2, #65	; 0x41
20000a50:	701a      	strb	r2, [r3, #0]
20000a52:	e009      	b.n	20000a68 <pixel+0x120>
	} else{
		controller = B_CS1;
20000a54:	230e      	movs	r3, #14
20000a56:	18fb      	adds	r3, r7, r3
20000a58:	2208      	movs	r2, #8
20000a5a:	701a      	strb	r2, [r3, #0]
		x_fysisk = x - 1;
20000a5c:	230d      	movs	r3, #13
20000a5e:	18fb      	adds	r3, r7, r3
20000a60:	1dfa      	adds	r2, r7, #7
20000a62:	7812      	ldrb	r2, [r2, #0]
20000a64:	3a01      	subs	r2, #1
20000a66:	701a      	strb	r2, [r3, #0]
	}
	
	graphic_write_command(LCD_SET_ADD | x_fysisk, controller);
20000a68:	260d      	movs	r6, #13
20000a6a:	19bb      	adds	r3, r7, r6
20000a6c:	781b      	ldrb	r3, [r3, #0]
20000a6e:	2240      	movs	r2, #64	; 0x40
20000a70:	4313      	orrs	r3, r2
20000a72:	b2da      	uxtb	r2, r3
20000a74:	250e      	movs	r5, #14
20000a76:	197b      	adds	r3, r7, r5
20000a78:	781b      	ldrb	r3, [r3, #0]
20000a7a:	0019      	movs	r1, r3
20000a7c:	0010      	movs	r0, r2
20000a7e:	f7ff feb1 	bl	200007e4 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE | index, controller);
20000a82:	230c      	movs	r3, #12
20000a84:	18fb      	adds	r3, r7, r3
20000a86:	781b      	ldrb	r3, [r3, #0]
20000a88:	2248      	movs	r2, #72	; 0x48
20000a8a:	4252      	negs	r2, r2
20000a8c:	4313      	orrs	r3, r2
20000a8e:	b2da      	uxtb	r2, r3
20000a90:	197b      	adds	r3, r7, r5
20000a92:	781b      	ldrb	r3, [r3, #0]
20000a94:	0019      	movs	r1, r3
20000a96:	0010      	movs	r0, r2
20000a98:	f7ff fea4 	bl	200007e4 <graphic_write_command>
	unsigned char temp = graphic_read_data(controller);
20000a9c:	230b      	movs	r3, #11
20000a9e:	18fc      	adds	r4, r7, r3
20000aa0:	197b      	adds	r3, r7, r5
20000aa2:	781b      	ldrb	r3, [r3, #0]
20000aa4:	0018      	movs	r0, r3
20000aa6:	f7ff fee3 	bl	20000870 <graphic_read_data>
20000aaa:	0003      	movs	r3, r0
20000aac:	7023      	strb	r3, [r4, #0]
	graphic_write_command(LCD_SET_ADD | x_fysisk, controller);
20000aae:	19bb      	adds	r3, r7, r6
20000ab0:	781b      	ldrb	r3, [r3, #0]
20000ab2:	2240      	movs	r2, #64	; 0x40
20000ab4:	4313      	orrs	r3, r2
20000ab6:	b2da      	uxtb	r2, r3
20000ab8:	197b      	adds	r3, r7, r5
20000aba:	781b      	ldrb	r3, [r3, #0]
20000abc:	0019      	movs	r1, r3
20000abe:	0010      	movs	r0, r2
20000ac0:	f7ff fe90 	bl	200007e4 <graphic_write_command>
	
	
	if(set == 1){
20000ac4:	1d7b      	adds	r3, r7, #5
20000ac6:	781b      	ldrb	r3, [r3, #0]
20000ac8:	2b01      	cmp	r3, #1
20000aca:	d109      	bne.n	20000ae0 <pixel+0x198>
		bitmask = (bitmask | temp);
20000acc:	220f      	movs	r2, #15
20000ace:	18bb      	adds	r3, r7, r2
20000ad0:	18b9      	adds	r1, r7, r2
20000ad2:	220b      	movs	r2, #11
20000ad4:	18ba      	adds	r2, r7, r2
20000ad6:	7809      	ldrb	r1, [r1, #0]
20000ad8:	7812      	ldrb	r2, [r2, #0]
20000ada:	430a      	orrs	r2, r1
20000adc:	701a      	strb	r2, [r3, #0]
20000ade:	e008      	b.n	20000af2 <pixel+0x1aa>
	} else{
		bitmask = (bitmask & temp);
20000ae0:	220f      	movs	r2, #15
20000ae2:	18bb      	adds	r3, r7, r2
20000ae4:	18ba      	adds	r2, r7, r2
20000ae6:	210b      	movs	r1, #11
20000ae8:	1879      	adds	r1, r7, r1
20000aea:	7812      	ldrb	r2, [r2, #0]
20000aec:	7809      	ldrb	r1, [r1, #0]
20000aee:	400a      	ands	r2, r1
20000af0:	701a      	strb	r2, [r3, #0]
	}
	
	graphic_write_data(bitmask, controller);
20000af2:	230e      	movs	r3, #14
20000af4:	18fb      	adds	r3, r7, r3
20000af6:	781a      	ldrb	r2, [r3, #0]
20000af8:	230f      	movs	r3, #15
20000afa:	18fb      	adds	r3, r7, r3
20000afc:	781b      	ldrb	r3, [r3, #0]
20000afe:	0011      	movs	r1, r2
20000b00:	0018      	movs	r0, r3
20000b02:	f7ff fe92 	bl	2000082a <graphic_write_data>
20000b06:	e000      	b.n	20000b0a <pixel+0x1c2>
		return;
20000b08:	46c0      	nop			; (mov r8, r8)
}
20000b0a:	46bd      	mov	sp, r7
20000b0c:	b005      	add	sp, #20
20000b0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
20000b10:	80000007 	andhi	r0, r0, r7
20000b14:	20000b8c 	andcs	r0, r0, ip, lsl #23

20000b18 <second_count>:
20000b18:	00000000 	andeq	r0, r0, r0

20000b1c <delay_count>:
20000b1c:	00000000 	andeq	r0, r0, r0

20000b20 <systick_flag>:
20000b20:	00000000 	andeq	r0, r0, r0

20000b24 <ball_geometry>:
20000b24:	0000000c 	andeq	r0, r0, ip
20000b28:	00000004 	andeq	r0, r0, r4
20000b2c:	00000004 	andeq	r0, r0, r4
20000b30:	02000100 	andeq	r0, r0, #0, 2
20000b34:	01010001 	tsteq	r1, r1
20000b38:	03010201 	movweq	r0, #4609	; 0x1201
20000b3c:	01020002 	tsteq	r2, r2
20000b40:	03020202 	movweq	r0, #8706	; 0x2202
20000b44:	00000203 	andeq	r0, r0, r3, lsl #4
	...

20000b58 <ball>:
20000b58:	20000b24 	andcs	r0, r0, r4, lsr #22
20000b5c:	00000000 	andeq	r0, r0, r0
20000b60:	00000002 	andeq	r0, r0, r2
20000b64:	00000001 	andeq	r0, r0, r1
20000b68:	00000001 	andeq	r0, r0, r1
20000b6c:	20000405 	andcs	r0, r0, r5, lsl #8
20000b70:	20000461 	andcs	r0, r0, r1, ror #8
20000b74:	200004bd 			; <UNDEFINED> instruction: 0x200004bd
20000b78:	200003e5 	andcs	r0, r0, r5, ror #7
20000b7c:	0a030201 	beq	200c1388 <ball+0xc0830>
20000b80:	0b060504 	bleq	20181f98 <ball+0x181440>
20000b84:	0c090807 	stceq	8, cr0, [r9], {7}
20000b88:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000b58 <ball>
20000b8c:	200009d2 	ldrdcs	r0, [r0], -r2
20000b90:	200009dc 	ldrdcs	r0, [r0], -ip
20000b94:	200009e6 	andcs	r0, r0, r6, ror #19
20000b98:	200009f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
20000b9c:	200009fa 	strdcs	r0, [r0], -sl
20000ba0:	20000a04 	andcs	r0, r0, r4, lsl #20
20000ba4:	20000a0e 	andcs	r0, r0, lr, lsl #20
20000ba8:	20000a18 	andcs	r0, r0, r8, lsl sl

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000009e6 	andeq	r0, r0, r6, ror #19
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000012 	andeq	r0, r0, r2, lsl r0
      10:	0003e90c 	andeq	lr, r3, ip, lsl #18
      14:	00027d00 	andeq	r7, r2, r0, lsl #26
      18:	00001000 	andeq	r1, r0, r0
      1c:	00017420 	andeq	r7, r1, r0, lsr #8
      20:	00000000 	andeq	r0, r0, r0
      24:	06010200 	streq	r0, [r1], -r0, lsl #4
      28:	00000336 	andeq	r0, r0, r6, lsr r3
      2c:	34080102 	strcc	r0, [r8], #-258	; 0xfffffefe
      30:	02000003 	andeq	r0, r0, #3
      34:	03500502 	cmpeq	r0, #8388608	; 0x800000
      38:	02020000 	andeq	r0, r2, #0
      3c:	00024807 	andeq	r4, r2, r7, lsl #16
      40:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      44:	0000012b 	andeq	r0, r0, fp, lsr #2
      48:	da070402 	ble	1c1058 <startup-0x1fe3efa8>
      4c:	02000000 	andeq	r0, r0, #0
      50:	01260508 			; <UNDEFINED> instruction: 0x01260508
      54:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      58:	0000d507 	andeq	sp, r0, r7, lsl #10
      5c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
      60:	00746e69 	rsbseq	r6, r4, r9, ror #28
      64:	df070402 	svcle	0x00070402
      68:	04000000 	streq	r0, [r0], #-0
      6c:	02ba0504 	adcseq	r0, sl, #4, 10	; 0x1000000
      70:	22020000 	andcs	r0, r2, #0
      74:	00000078 	andeq	r0, r0, r8, ror r0
      78:	007e0406 	rsbseq	r0, lr, r6, lsl #8
      7c:	2f070000 	svccs	0x00070000
      80:	05000004 	streq	r0, [r0, #-4]
      84:	0000030e 	andeq	r0, r0, lr, lsl #6
      88:	00412c03 	subeq	r2, r1, r3, lsl #24
      8c:	44050000 	strmi	r0, [r5], #-0
      90:	03000004 	movweq	r0, #4
      94:	00004172 	andeq	r4, r0, r2, ror r1
      98:	02c20800 	sbceq	r0, r2, #0, 16
      9c:	65040000 	strvs	r0, [r4, #-0]
      a0:	00006401 	andeq	r6, r0, r1, lsl #8
      a4:	03040900 	movweq	r0, #18688	; 0x4900
      a8:	0000c4a6 	andeq	ip, r0, r6, lsr #9
      ac:	02b40a00 	adcseq	r0, r4, #0, 20
      b0:	a8030000 	stmdage	r3, {}	; <UNPREDICTABLE>
      b4:	00000099 	muleq	r0, r9, r0
      b8:	00021c0a 	andeq	r1, r2, sl, lsl #24
      bc:	c4a90300 	strtgt	r0, [r9], #768	; 0x300
      c0:	00000000 	andeq	r0, r0, r0
      c4:	00002c0b 	andeq	r2, r0, fp, lsl #24
      c8:	0000d400 	andeq	sp, r0, r0, lsl #8
      cc:	00640c00 	rsbeq	r0, r4, r0, lsl #24
      d0:	00030000 	andeq	r0, r3, r0
      d4:	a303080d 	movwge	r0, #14349	; 0x380d
      d8:	000000f5 	strdeq	r0, [r0], -r5
      dc:	0004270e 	andeq	r2, r4, lr, lsl #14
      e0:	5da50300 	stcpl	3, cr0, [r5]
      e4:	00000000 	andeq	r0, r0, r0
      e8:	0004360e 	andeq	r3, r4, lr, lsl #12
      ec:	a5aa0300 	strge	r0, [sl, #768]!	; 0x300
      f0:	04000000 	streq	r0, [r0], #-0
      f4:	03780500 	cmneq	r8, #0, 10
      f8:	ab030000 	blge	c0100 <startup-0x1ff3ff00>
      fc:	000000d4 	ldrdeq	r0, [r0], -r4
     100:	0001e505 	andeq	lr, r1, r5, lsl #10
     104:	6daf0300 	stcvs	3, cr0, [pc]	; 10c <startup-0x1ffffef4>
     108:	05000000 	streq	r0, [r0, #-0]
     10c:	00000482 	andeq	r0, r0, r2, lsl #9
     110:	00481605 	subeq	r1, r8, r5, lsl #12
     114:	f60f0000 			; <UNDEFINED> instruction: 0xf60f0000
     118:	18000001 	stmdane	r0, {r0}
     11c:	01692f05 	cmneq	r9, r5, lsl #30
     120:	990e0000 	stmdbls	lr, {}	; <UNPREDICTABLE>
     124:	05000003 	streq	r0, [r0, #-3]
     128:	00016931 	andeq	r6, r1, r1, lsr r9
     12c:	5f100000 	svcpl	0x00100000
     130:	3205006b 	andcc	r0, r5, #107	; 0x6b
     134:	0000005d 	andeq	r0, r0, sp, asr r0
     138:	03e10e04 	mvneq	r0, #4, 28	; 0x40
     13c:	32050000 	andcc	r0, r5, #0
     140:	0000005d 	andeq	r0, r0, sp, asr r0
     144:	01d90e08 	bicseq	r0, r9, r8, lsl #28
     148:	32050000 	andcc	r0, r5, #0
     14c:	0000005d 	andeq	r0, r0, sp, asr r0
     150:	04b70e0c 	ldrteq	r0, [r7], #3596	; 0xe0c
     154:	32050000 	andcc	r0, r5, #0
     158:	0000005d 	andeq	r0, r0, sp, asr r0
     15c:	785f1010 	ldmdavc	pc, {r4, ip}^	; <UNPREDICTABLE>
     160:	6f330500 	svcvs	0x00330500
     164:	14000001 	strne	r0, [r0], #-1
     168:	16040600 	strne	r0, [r4], -r0, lsl #12
     16c:	0b000001 	bleq	178 <startup-0x1ffffe88>
     170:	0000010b 	andeq	r0, r0, fp, lsl #2
     174:	0000017f 	andeq	r0, r0, pc, ror r1
     178:	0000640c 	andeq	r6, r0, ip, lsl #8
     17c:	0f000000 	svceq	0x00000000
     180:	00000217 	andeq	r0, r0, r7, lsl r2
     184:	f8370524 			; <UNDEFINED> instruction: 0xf8370524
     188:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     18c:	0000011d 	andeq	r0, r0, sp, lsl r1
     190:	005d3905 	subseq	r3, sp, r5, lsl #18
     194:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     198:	0000044c 	andeq	r0, r0, ip, asr #8
     19c:	005d3a05 	subseq	r3, sp, r5, lsl #20
     1a0:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     1a4:	0000014a 	andeq	r0, r0, sl, asr #2
     1a8:	005d3b05 	subseq	r3, sp, r5, lsl #22
     1ac:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     1b0:	00000552 	andeq	r0, r0, r2, asr r5
     1b4:	005d3c05 	subseq	r3, sp, r5, lsl #24
     1b8:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     1bc:	000002f2 	strdeq	r0, [r0], -r2
     1c0:	005d3d05 	subseq	r3, sp, r5, lsl #26
     1c4:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     1c8:	000002d1 	ldrdeq	r0, [r0], -r1
     1cc:	005d3e05 	subseq	r3, sp, r5, lsl #28
     1d0:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     1d4:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
     1d8:	005d3f05 	subseq	r3, sp, r5, lsl #30
     1dc:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
     1e0:	0000035a 	andeq	r0, r0, sl, asr r3
     1e4:	005d4005 	subseq	r4, sp, r5
     1e8:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
     1ec:	00000508 	andeq	r0, r0, r8, lsl #10
     1f0:	005d4105 	subseq	r4, sp, r5, lsl #2
     1f4:	00200000 	eoreq	r0, r0, r0
     1f8:	00015911 	andeq	r5, r1, r1, lsl r9
     1fc:	05010800 	streq	r0, [r1, #-2048]	; 0xfffff800
     200:	0002384a 	andeq	r3, r2, sl, asr #16
     204:	01c50e00 	biceq	r0, r5, r0, lsl #28
     208:	4b050000 	blmi	140210 <startup-0x1febfdf0>
     20c:	00000238 	andeq	r0, r0, r8, lsr r2
     210:	00000e00 	andeq	r0, r0, r0, lsl #28
     214:	4c050000 	stcmi	0, cr0, [r5], {-0}
     218:	00000238 	andeq	r0, r0, r8, lsr r2
     21c:	04741280 	ldrbteq	r1, [r4], #-640	; 0xfffffd80
     220:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
     224:	0000010b 	andeq	r0, r0, fp, lsl #2
     228:	7e120100 	mufvcs	f0, f2, f0
     22c:	05000001 	streq	r0, [r0, #-1]
     230:	00010b51 	andeq	r0, r1, r1, asr fp
     234:	00010400 	andeq	r0, r1, r0, lsl #8
     238:	00006b0b 	andeq	r6, r0, fp, lsl #22
     23c:	00024800 	andeq	r4, r2, r0, lsl #16
     240:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     244:	001f0000 	andseq	r0, pc, r0
     248:	0002fb11 	andeq	pc, r2, r1, lsl fp	; <UNPREDICTABLE>
     24c:	05019000 	streq	r9, [r1, #-0]
     250:	0002865d 	andeq	r8, r2, sp, asr r6
     254:	03990e00 	orrseq	r0, r9, #0, 28
     258:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
     25c:	00000286 	andeq	r0, r0, r6, lsl #5
     260:	03b10e00 			; <UNDEFINED> instruction: 0x03b10e00
     264:	5f050000 	svcpl	0x00050000
     268:	0000005d 	andeq	r0, r0, sp, asr r0
     26c:	01d40e04 	bicseq	r0, r4, r4, lsl #28
     270:	61050000 	mrsvs	r0, (UNDEF: 5)
     274:	0000028c 	andeq	r0, r0, ip, lsl #5
     278:	01590e08 	cmpeq	r9, r8, lsl #28
     27c:	62050000 	andvs	r0, r5, #0
     280:	000001f8 	strdeq	r0, [r0], -r8
     284:	04060088 	streq	r0, [r6], #-136	; 0xffffff78
     288:	00000248 	andeq	r0, r0, r8, asr #4
     28c:	00029c0b 	andeq	r9, r2, fp, lsl #24
     290:	00029c00 	andeq	r9, r2, r0, lsl #24
     294:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     298:	001f0000 	andseq	r0, pc, r0
     29c:	02a20406 	adceq	r0, r2, #100663296	; 0x6000000
     2a0:	0f130000 	svceq	0x00130000
     2a4:	00000364 	andeq	r0, r0, r4, ror #6
     2a8:	c8750508 	ldmdagt	r5!, {r3, r8, sl}^
     2ac:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
     2b0:	00000144 	andeq	r0, r0, r4, asr #2
     2b4:	02c87605 	sbceq	r7, r8, #5242880	; 0x500000
     2b8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     2bc:	0000000c 	andeq	r0, r0, ip
     2c0:	005d7705 	subseq	r7, sp, r5, lsl #14
     2c4:	00040000 	andeq	r0, r4, r0
     2c8:	002c0406 	eoreq	r0, ip, r6, lsl #8
     2cc:	830f0000 	movwhi	r0, #61440	; 0xf000
     2d0:	68000003 	stmdavs	r0, {r0, r1}
     2d4:	03f8b505 	mvnseq	fp, #20971520	; 0x1400000
     2d8:	5f100000 	svcpl	0x00100000
     2dc:	b6050070 			; <UNDEFINED> instruction: 0xb6050070
     2e0:	000002c8 	andeq	r0, r0, r8, asr #5
     2e4:	725f1000 	subsvc	r1, pc, #0
     2e8:	5db70500 	cfldr32pl	mvfx0, [r7]
     2ec:	04000000 	streq	r0, [r0], #-0
     2f0:	00775f10 	rsbseq	r5, r7, r0, lsl pc
     2f4:	005db805 	subseq	fp, sp, r5, lsl #16
     2f8:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     2fc:	00000177 	andeq	r0, r0, r7, ror r1
     300:	0033b905 	eorseq	fp, r3, r5, lsl #18
     304:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     308:	00000233 	andeq	r0, r0, r3, lsr r2
     30c:	0033ba05 	eorseq	fp, r3, r5, lsl #20
     310:	100e0000 	andne	r0, lr, r0
     314:	0066625f 	rsbeq	r6, r6, pc, asr r2
     318:	02a3bb05 	adceq	fp, r3, #5120	; 0x1400
     31c:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     320:	000000ec 	andeq	r0, r0, ip, ror #1
     324:	005dbc05 	subseq	fp, sp, r5, lsl #24
     328:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
     32c:	00000167 	andeq	r0, r0, r7, ror #2
     330:	006bc305 	rsbeq	ip, fp, r5, lsl #6
     334:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
     338:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
     33c:	0565c505 	strbeq	ip, [r5, #-1285]!	; 0xfffffafb
     340:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
     344:	000007ec 	andeq	r0, r0, ip, ror #15
     348:	058fc705 	streq	ip, [pc, #1797]	; a55 <startup-0x1ffff5ab>
     34c:	0e240000 	cdpeq	0, 2, cr0, cr4, cr0, {0}
     350:	0000043e 	andeq	r0, r0, lr, lsr r4
     354:	05b3ca05 	ldreq	ip, [r3, #2565]!	; 0xa05
     358:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
     35c:	00000522 	andeq	r0, r0, r2, lsr #10
     360:	05cdcb05 	strbeq	ip, [sp, #2821]	; 0xb05
     364:	102c0000 	eorne	r0, ip, r0
     368:	0062755f 	rsbeq	r7, r2, pc, asr r5
     36c:	02a3ce05 	adceq	ip, r3, #5, 28	; 0x50
     370:	10300000 	eorsne	r0, r0, r0
     374:	0070755f 	rsbseq	r7, r0, pc, asr r5
     378:	02c8cf05 	sbceq	ip, r8, #5, 30
     37c:	10380000 	eorsne	r0, r8, r0
     380:	0072755f 	rsbseq	r7, r2, pc, asr r5
     384:	005dd005 	subseq	sp, sp, r5
     388:	0e3c0000 	cdpeq	0, 3, cr0, cr12, cr0, {0}
     38c:	00000134 	andeq	r0, r0, r4, lsr r1
     390:	05d3d305 	ldrbeq	sp, [r3, #773]	; 0x305
     394:	0e400000 	cdpeq	0, 4, cr0, cr0, cr0, {0}
     398:	000004fa 	strdeq	r0, [r0], -sl
     39c:	05e3d405 	strbeq	sp, [r3, #1029]!	; 0x405
     3a0:	10430000 	subne	r0, r3, r0
     3a4:	00626c5f 	rsbeq	r6, r2, pc, asr ip
     3a8:	02a3d705 	adceq	sp, r3, #1310720	; 0x140000
     3ac:	0e440000 	cdpeq	0, 4, cr0, cr4, cr0, {0}
     3b0:	0000018d 	andeq	r0, r0, sp, lsl #3
     3b4:	005dda05 	subseq	sp, sp, r5, lsl #20
     3b8:	0e4c0000 	cdpeq	0, 4, cr0, cr12, cr0, {0}
     3bc:	0000019e 	muleq	r0, lr, r1
     3c0:	0083db05 	addeq	sp, r3, r5, lsl #22
     3c4:	0e500000 	cdpeq	0, 5, cr0, cr0, cr0, {0}
     3c8:	000007df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     3cc:	0416de05 	ldreq	sp, [r6], #-3589	; 0xfffff1fb
     3d0:	0e540000 	cdpeq	0, 5, cr0, cr4, cr0, {0}
     3d4:	00000430 	andeq	r0, r0, r0, lsr r4
     3d8:	0100e205 	tsteq	r0, r5, lsl #4
     3dc:	0e580000 	cdpeq	0, 5, cr0, cr8, cr0, {0}
     3e0:	0000038b 	andeq	r0, r0, fp, lsl #7
     3e4:	00f5e405 	rscseq	lr, r5, r5, lsl #8
     3e8:	0e5c0000 	cdpeq	0, 5, cr0, cr12, cr0, {0}
     3ec:	000002c9 	andeq	r0, r0, r9, asr #5
     3f0:	005de505 	subseq	lr, sp, r5, lsl #10
     3f4:	00640000 	rsbeq	r0, r4, r0
     3f8:	00005d14 	andeq	r5, r0, r4, lsl sp
     3fc:	00041600 	andeq	r1, r4, r0, lsl #12
     400:	04161500 	ldreq	r1, [r6], #-1280	; 0xfffffb00
     404:	6b150000 	blvs	54040c <startup-0x1fabfbf4>
     408:	15000000 	strne	r0, [r0, #-0]
     40c:	00000553 	andeq	r0, r0, r3, asr r5
     410:	00005d15 	andeq	r5, r0, r5, lsl sp
     414:	04060000 	streq	r0, [r6], #-0
     418:	00000421 	andeq	r0, r0, r1, lsr #8
     41c:	00041616 	andeq	r1, r4, r6, lsl r6
     420:	04f31700 	ldrbteq	r1, [r3], #1792	; 0x700
     424:	04280000 	strteq	r0, [r8], #-0
     428:	53023905 	movwpl	r3, #10501	; 0x2905
     42c:	18000005 	stmdane	r0, {r0, r2}
     430:	00000349 	andeq	r0, r0, r9, asr #6
     434:	5d023b05 	vstrpl	d3, [r2, #-20]	; 0xffffffec
     438:	00000000 	andeq	r0, r0, r0
     43c:	00018618 	andeq	r8, r1, r8, lsl r6
     440:	02400500 	subeq	r0, r0, #0, 10
     444:	0000063a 	andeq	r0, r0, sl, lsr r6
     448:	02231804 	eoreq	r1, r3, #4, 16	; 0x40000
     44c:	40050000 	andmi	r0, r5, r0
     450:	00063a02 	andeq	r3, r6, r2, lsl #20
     454:	ee180800 	cdp	8, 1, cr0, cr8, cr0, {0}
     458:	05000001 	streq	r0, [r0, #-1]
     45c:	063a0240 	ldrteq	r0, [sl], -r0, asr #4
     460:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
     464:	000003ac 	andeq	r0, r0, ip, lsr #7
     468:	5d024205 	sfmpl	f4, 4, [r2, #-20]	; 0xffffffec
     46c:	10000000 	andne	r0, r0, r0
     470:	0000a318 	andeq	sl, r0, r8, lsl r3
     474:	02430500 	subeq	r0, r3, #0, 10
     478:	0000081c 	andeq	r0, r0, ip, lsl r8
     47c:	03c81814 	biceq	r1, r8, #20, 16	; 0x140000
     480:	46050000 	strmi	r0, [r5], -r0
     484:	00005d02 	andeq	r5, r0, r2, lsl #26
     488:	b6183000 	ldrlt	r3, [r8], -r0
     48c:	05000003 	streq	r0, [r0, #-3]
     490:	08310247 	ldmdaeq	r1!, {r0, r1, r2, r6, r9}
     494:	18340000 	ldmdane	r4!, {}	; <UNPREDICTABLE>
     498:	00000303 	andeq	r0, r0, r3, lsl #6
     49c:	5d024905 	vstrpl.16	s8, [r2, #-10]	; <UNPREDICTABLE>
     4a0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
     4a4:	0003be18 	andeq	fp, r3, r8, lsl lr
     4a8:	024b0500 	subeq	r0, fp, #0, 10
     4ac:	00000842 	andeq	r0, r0, r2, asr #16
     4b0:	02ac183c 	adceq	r1, ip, #60, 16	; 0x3c0000
     4b4:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
     4b8:	00016902 	andeq	r6, r1, r2, lsl #18
     4bc:	0d184000 	ldceq	0, cr4, [r8, #-0]
     4c0:	05000002 	streq	r0, [r0, #-2]
     4c4:	005d024f 	subseq	r0, sp, pc, asr #4
     4c8:	18440000 	stmdane	r4, {}^	; <UNPREDICTABLE>
     4cc:	00000541 	andeq	r0, r0, r1, asr #10
     4d0:	69025005 	stmdbvs	r2, {r0, r2, ip, lr}
     4d4:	48000001 	stmdami	r0, {r0}
     4d8:	00031518 	andeq	r1, r3, r8, lsl r5
     4dc:	02510500 	subseq	r0, r1, #0, 10
     4e0:	00000848 	andeq	r0, r0, r8, asr #16
     4e4:	022b184c 	eoreq	r1, fp, #76, 16	; 0x4c0000
     4e8:	54050000 	strpl	r0, [r5], #-0
     4ec:	00005d02 	andeq	r5, r0, r2, lsl #26
     4f0:	96185000 	ldrls	r5, [r8], -r0
     4f4:	05000001 	streq	r0, [r0, #-1]
     4f8:	05530255 	ldrbeq	r0, [r3, #-597]	; 0xfffffdab
     4fc:	18540000 	ldmdane	r4, {}^	; <UNPREDICTABLE>
     500:	00000342 	andeq	r0, r0, r2, asr #6
     504:	fa027805 	blx	9e520 <startup-0x1ff61ae0>
     508:	58000007 	stmdapl	r0, {r0, r1, r2}
     50c:	0002fb19 	andeq	pc, r2, r9, lsl fp	; <UNPREDICTABLE>
     510:	027c0500 	rsbseq	r0, ip, #0, 10
     514:	00000286 	andeq	r0, r0, r6, lsl #5
     518:	5b190148 	blpl	640a40 <startup-0x1f9bf5c0>
     51c:	05000002 	streq	r0, [r0, #-2]
     520:	0248027d 	subeq	r0, r8, #-805306361	; 0xd0000007
     524:	014c0000 	mrseq	r0, (UNDEF: 76)
     528:	0004e919 	andeq	lr, r4, r9, lsl r9
     52c:	02810500 	addeq	r0, r1, #0, 10
     530:	00000859 	andeq	r0, r0, r9, asr r8
     534:	6f1902dc 	svcvs	0x001902dc
     538:	05000001 	streq	r0, [r0, #-1]
     53c:	05ff0286 	ldrbeq	r0, [pc, #646]!	; 7ca <startup-0x1ffff836>
     540:	02e00000 	rsceq	r0, r0, #0
     544:	00015419 	andeq	r5, r1, r9, lsl r4
     548:	02880500 	addeq	r0, r8, #0, 10
     54c:	00000865 	andeq	r0, r0, r5, ror #16
     550:	060002ec 	streq	r0, [r0], -ip, ror #5
     554:	00055904 	andeq	r5, r5, r4, lsl #18
     558:	08010200 	stmdaeq	r1, {r9}
     55c:	0000033d 	andeq	r0, r0, sp, lsr r3
     560:	00055916 	andeq	r5, r5, r6, lsl r9
     564:	f8040600 			; <UNDEFINED> instruction: 0xf8040600
     568:	14000003 	strne	r0, [r0], #-3
     56c:	0000005d 	andeq	r0, r0, sp, asr r0
     570:	00000589 	andeq	r0, r0, r9, lsl #11
     574:	00041615 	andeq	r1, r4, r5, lsl r6
     578:	006b1500 	rsbeq	r1, fp, r0, lsl #10
     57c:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
     580:	15000005 	strne	r0, [r0, #-5]
     584:	0000005d 	andeq	r0, r0, sp, asr r0
     588:	60040600 	andvs	r0, r4, r0, lsl #12
     58c:	06000005 	streq	r0, [r0], -r5
     590:	00056b04 	andeq	r6, r5, r4, lsl #22
     594:	008e1400 	addeq	r1, lr, r0, lsl #8
     598:	05b30000 	ldreq	r0, [r3, #0]!
     59c:	16150000 	ldrne	r0, [r5], -r0
     5a0:	15000004 	strne	r0, [r0, #-4]
     5a4:	0000006b 	andeq	r0, r0, fp, rrx
     5a8:	00008e15 	andeq	r8, r0, r5, lsl lr
     5ac:	005d1500 	subseq	r1, sp, r0, lsl #10
     5b0:	06000000 	streq	r0, [r0], -r0
     5b4:	00059504 	andeq	r9, r5, r4, lsl #10
     5b8:	005d1400 	subseq	r1, sp, r0, lsl #8
     5bc:	05cd0000 	strbeq	r0, [sp]
     5c0:	16150000 	ldrne	r0, [r5], -r0
     5c4:	15000004 	strne	r0, [r0, #-4]
     5c8:	0000006b 	andeq	r0, r0, fp, rrx
     5cc:	b9040600 	stmdblt	r4, {r9, sl}
     5d0:	0b000005 	bleq	5ec <startup-0x1ffffa14>
     5d4:	0000002c 	andeq	r0, r0, ip, lsr #32
     5d8:	000005e3 	andeq	r0, r0, r3, ror #11
     5dc:	0000640c 	andeq	r6, r0, ip, lsl #8
     5e0:	0b000200 	bleq	de8 <startup-0x1ffff218>
     5e4:	0000002c 	andeq	r0, r0, ip, lsr #32
     5e8:	000005f3 	strdeq	r0, [r0], -r3
     5ec:	0000640c 	andeq	r6, r0, ip, lsl #8
     5f0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     5f4:	00000371 	andeq	r0, r0, r1, ror r3
     5f8:	ce011f05 	cdpgt	15, 0, cr1, cr1, cr5, {0}
     5fc:	1a000002 	bne	60c <startup-0x1ffff9f4>
     600:	000004c6 	andeq	r0, r0, r6, asr #9
     604:	0123050c 			; <UNDEFINED> instruction: 0x0123050c
     608:	00000634 	andeq	r0, r0, r4, lsr r6
     60c:	00039918 	andeq	r9, r3, r8, lsl r9
     610:	01250500 			; <UNDEFINED> instruction: 0x01250500
     614:	00000634 	andeq	r0, r0, r4, lsr r6
     618:	02411800 	subeq	r1, r1, #0, 16
     61c:	26050000 	strcs	r0, [r5], -r0
     620:	00005d01 	andeq	r5, r0, r1, lsl #26
     624:	6b180400 	blvs	60162c <startup-0x1f9fe9d4>
     628:	05000003 	streq	r0, [r0, #-3]
     62c:	063a0127 	ldrteq	r0, [sl], -r7, lsr #2
     630:	00080000 	andeq	r0, r8, r0
     634:	05ff0406 	ldrbeq	r0, [pc, #1030]!	; a42 <startup-0x1ffff5be>
     638:	04060000 	streq	r0, [r6], #-0
     63c:	000005f3 	strdeq	r0, [r0], -r3
     640:	0000931a 	andeq	r9, r0, sl, lsl r3
     644:	3f050e00 	svccc	0x00050e00
     648:	00067501 	andeq	r7, r6, r1, lsl #10
     64c:	04211800 	strteq	r1, [r1], #-2048	; 0xfffff800
     650:	40050000 	andmi	r0, r5, r0
     654:	00067501 	andeq	r7, r6, r1, lsl #10
     658:	61180000 	tstvs	r8, r0
     65c:	05000004 	streq	r0, [r0, #-4]
     660:	06750141 	ldrbteq	r0, [r5], -r1, asr #2
     664:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
     668:	0000047d 	andeq	r0, r0, sp, ror r4
     66c:	3a014205 	bcc	50e88 <startup-0x1ffaf178>
     670:	0c000000 	stceq	0, cr0, [r0], {-0}
     674:	003a0b00 	eorseq	r0, sl, r0, lsl #22
     678:	06850000 	streq	r0, [r5], r0
     67c:	640c0000 	strvs	r0, [ip], #-0
     680:	02000000 	andeq	r0, r0, #0
     684:	05d01b00 	ldrbeq	r1, [r0, #2816]	; 0xb00
     688:	07860259 			; <UNDEFINED> instruction: 0x07860259
     68c:	aa180000 	bge	600694 <startup-0x1f9ff96c>
     690:	05000004 	streq	r0, [r0, #-4]
     694:	0064025b 	rsbeq	r0, r4, fp, asr r2
     698:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     69c:	00000467 	andeq	r0, r0, r7, ror #8
     6a0:	53025c05 	movwpl	r5, #11269	; 0x2c05
     6a4:	04000005 	streq	r0, [r0], #-5
     6a8:	00027018 	andeq	r7, r2, r8, lsl r0
     6ac:	025d0500 	subseq	r0, sp, #0, 10
     6b0:	00000786 	andeq	r0, r0, r6, lsl #15
     6b4:	05131808 	ldreq	r1, [r3, #-2056]	; 0xfffff7f8
     6b8:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
     6bc:	00017f02 	andeq	r7, r1, r2, lsl #30
     6c0:	fe182400 	cdp2	4, 1, cr2, cr8, cr0, {0}
     6c4:	05000001 	streq	r0, [r0, #-1]
     6c8:	005d025f 	subseq	r0, sp, pc, asr r2
     6cc:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
     6d0:	00000394 	muleq	r0, r4, r3
     6d4:	56026005 	strpl	r6, [r2], -r5
     6d8:	50000000 	andpl	r0, r0, r0
     6dc:	00052918 	andeq	r2, r5, r8, lsl r9
     6e0:	02610500 	rsbeq	r0, r1, #0, 10
     6e4:	00000640 	andeq	r0, r0, r0, asr #12
     6e8:	039f1858 	orrseq	r1, pc, #88, 16	; 0x580000
     6ec:	62050000 	andvs	r0, r5, #0
     6f0:	0000f502 	andeq	pc, r0, r2, lsl #10
     6f4:	33186800 	tstcc	r8, #0, 16
     6f8:	05000005 	streq	r0, [r0, #-5]
     6fc:	00f50263 	rscseq	r0, r5, r3, ror #4
     700:	18700000 	ldmdane	r0!, {}^	; <UNPREDICTABLE>
     704:	00000326 	andeq	r0, r0, r6, lsr #6
     708:	f5026405 			; <UNDEFINED> instruction: 0xf5026405
     70c:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
     710:	0004d518 	andeq	sp, r4, r8, lsl r5
     714:	02650500 	rsbeq	r0, r5, #0, 10
     718:	00000796 	muleq	r0, r6, r7
     71c:	02641880 	rsbeq	r1, r4, #128, 16	; 0x800000
     720:	66050000 	strvs	r0, [r5], -r0
     724:	0007a602 	andeq	sl, r7, r2, lsl #12
     728:	8a188800 	bhi	622730 <startup-0x1f9dd8d0>
     72c:	05000004 	streq	r0, [r0, #-4]
     730:	005d0267 	subseq	r0, sp, r7, ror #4
     734:	18a00000 	stmiane	r0!, {}	; <UNPREDICTABLE>
     738:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
     73c:	f5026805 			; <UNDEFINED> instruction: 0xf5026805
     740:	a4000000 	strge	r0, [r0], #-0
     744:	00010618 	andeq	r0, r1, r8, lsl r6
     748:	02690500 	rsbeq	r0, r9, #0, 10
     74c:	000000f5 	strdeq	r0, [r0], -r5
     750:	01a618ac 			; <UNDEFINED> instruction: 0x01a618ac
     754:	6a050000 	bvs	14075c <startup-0x1febf8a4>
     758:	0000f502 	andeq	pc, r0, r2, lsl #10
     75c:	b518b400 	ldrlt	fp, [r8, #-1024]	; 0xfffffc00
     760:	05000000 	streq	r0, [r0, #-0]
     764:	00f5026b 	rscseq	r0, r5, fp, ror #4
     768:	18bc0000 	ldmne	ip!, {}	; <UNPREDICTABLE>
     76c:	000000c4 	andeq	r0, r0, r4, asr #1
     770:	f5026c05 			; <UNDEFINED> instruction: 0xf5026c05
     774:	c4000000 	strgt	r0, [r0], #-0
     778:	00034718 	andeq	r4, r3, r8, lsl r7
     77c:	026d0500 	rsbeq	r0, sp, #0, 10
     780:	0000005d 	andeq	r0, r0, sp, asr r0
     784:	590b00cc 	stmdbpl	fp, {r2, r3, r6, r7}
     788:	96000005 	strls	r0, [r0], -r5
     78c:	0c000007 	stceq	0, cr0, [r0], {7}
     790:	00000064 	andeq	r0, r0, r4, rrx
     794:	590b0019 	stmdbpl	fp, {r0, r3, r4}
     798:	a6000005 	strge	r0, [r0], -r5
     79c:	0c000007 	stceq	0, cr0, [r0], {7}
     7a0:	00000064 	andeq	r0, r0, r4, rrx
     7a4:	590b0007 	stmdbpl	fp, {r0, r1, r2}
     7a8:	b6000005 	strlt	r0, [r0], -r5
     7ac:	0c000007 	stceq	0, cr0, [r0], {7}
     7b0:	00000064 	andeq	r0, r0, r4, rrx
     7b4:	f01b0017 			; <UNDEFINED> instruction: 0xf01b0017
     7b8:	da027205 	ble	9cfd4 <startup-0x1ff6302c>
     7bc:	18000007 	stmdane	r0, {r0, r1, r2}
     7c0:	000002e6 	andeq	r0, r0, r6, ror #5
     7c4:	da027505 	ble	9dbe0 <startup-0x1ff62420>
     7c8:	00000007 	andeq	r0, r0, r7
     7cc:	0004cc18 	andeq	ip, r4, r8, lsl ip
     7d0:	02760500 	rsbseq	r0, r6, #0, 10
     7d4:	000007ea 	andeq	r0, r0, sl, ror #15
     7d8:	c80b0078 	stmdagt	fp, {r3, r4, r5, r6}
     7dc:	ea000002 	b	7ec <startup-0x1ffff814>
     7e0:	0c000007 	stceq	0, cr0, [r0], {7}
     7e4:	00000064 	andeq	r0, r0, r4, rrx
     7e8:	640b001d 	strvs	r0, [fp], #-29	; 0xffffffe3
     7ec:	fa000000 	blx	7f4 <startup-0x1ffff80c>
     7f0:	0c000007 	stceq	0, cr0, [r0], {7}
     7f4:	00000064 	andeq	r0, r0, r4, rrx
     7f8:	f01c001d 			; <UNDEFINED> instruction: 0xf01c001d
     7fc:	1c025705 	stcne	7, cr5, [r2], {5}
     800:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
     804:	000004f3 	strdeq	r0, [r0], -r3
     808:	85026e05 	strhi	r6, [r2, #-3589]	; 0xfffff1fb
     80c:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
     810:	00000500 	andeq	r0, r0, r0, lsl #10
     814:	b6027705 	strlt	r7, [r2], -r5, lsl #14
     818:	00000007 	andeq	r0, r0, r7
     81c:	0005590b 	andeq	r5, r5, fp, lsl #18
     820:	00082c00 	andeq	r2, r8, r0, lsl #24
     824:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     828:	00180000 	andseq	r0, r8, r0
     82c:	0000fb07 	andeq	pc, r0, r7, lsl #22
     830:	2c040600 	stccs	6, cr0, [r4], {-0}
     834:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
     838:	00000842 	andeq	r0, r0, r2, asr #16
     83c:	00041615 	andeq	r1, r4, r5, lsl r6
     840:	04060000 	streq	r0, [r6], #-0
     844:	00000837 	andeq	r0, r0, r7, lsr r8
     848:	01690406 	cmneq	r9, r6, lsl #8
     84c:	591e0000 	ldmdbpl	lr, {}	; <UNPREDICTABLE>
     850:	15000008 	strne	r0, [r0, #-8]
     854:	0000005d 	andeq	r0, r0, sp, asr r0
     858:	5f040600 	svcpl	0x00040600
     85c:	06000008 	streq	r0, [r0], -r8
     860:	00084e04 	andeq	r4, r8, r4, lsl #28
     864:	05f30b00 	ldrbeq	r0, [r3, #2816]!	; 0xb00
     868:	08750000 	ldmdaeq	r5!, {}^	; <UNPREDICTABLE>
     86c:	640c0000 	strvs	r0, [ip], #-0
     870:	02000000 	andeq	r0, r0, #0
     874:	049e1f00 	ldreq	r1, [lr], #3840	; 0xf00
     878:	07050000 	streq	r0, [r5, -r0]
     87c:	00041603 	andeq	r1, r4, r3, lsl #12
     880:	04971f00 	ldreq	r1, [r7], #3840	; 0xf00
     884:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
     888:	00041c03 	andeq	r1, r4, r3, lsl #24
     88c:	06180d00 	ldreq	r0, [r8], -r0, lsl #26
     890:	00091a21 	andeq	r1, r9, r1, lsr #20
     894:	01df0e00 	bicseq	r0, pc, r0, lsl #28
     898:	22060000 	andcs	r0, r6, #0
     89c:	00000064 	andeq	r0, r0, r4, rrx
     8a0:	00ae0e00 	adceq	r0, lr, r0, lsl #28
     8a4:	23060000 	movwcs	r0, #24576	; 0x6000
     8a8:	0000003a 	andeq	r0, r0, sl, lsr r0
     8ac:	02db0e04 	sbcseq	r0, fp, #4, 28	; 0x40
     8b0:	24060000 	strcs	r0, [r6], #-0
     8b4:	0000003a 	andeq	r0, r0, sl, lsr r0
     8b8:	02390e06 	eorseq	r0, r9, #6, 28	; 0x60
     8bc:	25060000 	strcs	r0, [r6, #-0]
     8c0:	00000064 	andeq	r0, r0, r4, rrx
     8c4:	00f50e08 	rscseq	r0, r5, r8, lsl #28
     8c8:	26060000 	strcs	r0, [r6], -r0
     8cc:	00000064 	andeq	r0, r0, r4, rrx
     8d0:	01cd0e0c 	biceq	r0, sp, ip, lsl #28
     8d4:	27060000 	strcs	r0, [r6, -r0]
     8d8:	0000002c 	andeq	r0, r0, ip, lsr #32
     8dc:	009b0e10 	addseq	r0, fp, r0, lsl lr
     8e0:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
     8e4:	0000002c 	andeq	r0, r0, ip, lsr #32
     8e8:	05460e11 	strbeq	r0, [r6, #-3601]	; 0xfffff1ef
     8ec:	29060000 	stmdbcs	r6, {}	; <UNPREDICTABLE>
     8f0:	0000003a 	andeq	r0, r0, sl, lsr r0
     8f4:	031f0e12 	tsteq	pc, #288	; 0x120
     8f8:	2a060000 	bcs	180900 <startup-0x1fe7f700>
     8fc:	0000002c 	andeq	r0, r0, ip, lsr #32
     900:	01150e14 	tsteq	r5, r4, lsl lr
     904:	2b060000 	blcs	18090c <startup-0x1fe7f6f4>
     908:	0000002c 	andeq	r0, r0, ip, lsr #32
     90c:	04550e15 	ldrbeq	r0, [r5], #-3605	; 0xfffff1eb
     910:	2c060000 	stccs	0, cr0, [r6], {-0}
     914:	0000003a 	andeq	r0, r0, sl, lsr r0
     918:	2e050016 	mcrcs	0, 0, r0, cr5, cr6, {0}
     91c:	06000005 	streq	r0, [r0], -r5
     920:	00088d2d 	andeq	r8, r8, sp, lsr #26
     924:	02ed2000 	rsceq	r2, sp, #0
     928:	23010000 	movwcs	r0, #4096	; 0x1000
     92c:	0000002c 	andeq	r0, r0, ip, lsr #32
     930:	200000fc 	strdcs	r0, [r0], -ip
     934:	00000088 	andeq	r0, r0, r8, lsl #1
     938:	09699c01 	stmdbeq	r9!, {r0, sl, fp, ip, pc}^
     93c:	72210000 	eorvc	r0, r1, #0
     940:	0100776f 	tsteq	r0, pc, ror #14
     944:	00002c25 	andeq	r2, r0, r5, lsr #24
     948:	6f910200 	svcvs	0x00910200
     94c:	6c6f6321 	stclvs	3, cr6, [pc], #-132	; 8d0 <startup-0x1ffff730>
     950:	2c250100 	stfcss	f0, [r5], #-0
     954:	02000000 	andeq	r0, r0, #0
     958:	6b216e91 	blvs	85c3a4 <startup-0x1f7a3c5c>
     95c:	01007965 	tsteq	r0, r5, ror #18
     960:	00096926 	andeq	r6, r9, r6, lsr #18
     964:	5c910200 	lfmpl	f0, 4, [r1], {0}
     968:	002c0b00 	eoreq	r0, ip, r0, lsl #22
     96c:	09790000 	ldmdbeq	r9!, {}^	; <UNPREDICTABLE>
     970:	640c0000 	strvs	r0, [ip], #-0
     974:	0f000000 	svceq	0x00000000
     978:	013a2000 	teqeq	sl, r0
     97c:	11010000 	mrsne	r0, (UNDEF: 1)
     980:	0000002c 	andeq	r0, r0, ip, lsr #32
     984:	20000068 	andcs	r0, r0, r8, rrx
     988:	00000094 	muleq	r0, r4, r0
     98c:	09c99c01 	stmibeq	r9, {r0, sl, fp, ip, pc}^
     990:	63210000 			; <UNDEFINED> instruction: 0x63210000
     994:	2c130100 	ldfcss	f0, [r3], {-0}
     998:	02000000 	andeq	r0, r0, #0
     99c:	72216e91 	eorvc	r6, r1, #2320	; 0x910
     9a0:	0100776f 	tsteq	r0, pc, ror #14
     9a4:	00002c14 	andeq	r2, r0, r4, lsl ip
     9a8:	6f910200 	svcvs	0x00910200
     9ac:	6c6f6321 	stclvs	3, cr6, [pc], #-132	; 930 <startup-0x1ffff6d0>
     9b0:	2c140100 	ldfcss	f0, [r4], {-0}
     9b4:	02000000 	andeq	r0, r0, #0
     9b8:	6b216d91 	blvs	85c004 <startup-0x1f7a3ffc>
     9bc:	01007965 	tsteq	r0, r5, ror #18
     9c0:	00096915 	andeq	r6, r9, r5, lsl r9
     9c4:	5c910200 	lfmpl	f0, 4, [r1], {0}
     9c8:	04df2200 	ldrbeq	r2, [pc], #512	; 9d0 <startup-0x1ffff630>
     9cc:	04010000 	streq	r0, [r1], #-0
     9d0:	20000010 	andcs	r0, r0, r0, lsl r0
     9d4:	00000058 	andeq	r0, r0, r8, asr r0
     9d8:	72239c01 	eorvc	r9, r3, #256	; 0x100
     9dc:	0100776f 	tsteq	r0, pc, ror #14
     9e0:	00002c04 	andeq	r2, r0, r4, lsl #24
     9e4:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     9e8:	009f0000 	addseq	r0, pc, r0
     9ec:	00040000 	andeq	r0, r4, r0
     9f0:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     9f4:	00120104 	andseq	r0, r2, r4, lsl #2
     9f8:	9f0c0000 	svcls	0x000c0000
     9fc:	7d000005 	stcvc	0, cr0, [r0, #-20]	; 0xffffffec
     a00:	84000002 	strhi	r0, [r0], #-2
     a04:	3c200001 	stccc	0, cr0, [r0], #-4
     a08:	a1000000 	mrsge	r0, (UNDEF: 0)
     a0c:	02000001 	andeq	r0, r0, #1
     a10:	00df0704 	sbcseq	r0, pc, r4, lsl #14
     a14:	02020000 	andeq	r0, r2, #0
     a18:	00024807 	andeq	r4, r2, r7, lsl #16
     a1c:	08010200 	stmdaeq	r1, {r9}
     a20:	00000334 	andeq	r0, r0, r4, lsr r3
     a24:	00055c03 	andeq	r5, r5, r3, lsl #24
     a28:	52040200 	andpl	r0, r4, #0, 4
     a2c:	05000000 	streq	r0, [r0, #-0]
     a30:	000b1803 	andeq	r1, fp, r3, lsl #16
     a34:	05040420 	streq	r0, [r4, #-1056]	; 0xfffffbe0
     a38:	00746e69 	rsbseq	r6, r4, r9, ror #28
     a3c:	00004b05 	andeq	r4, r0, r5, lsl #22
     a40:	05750300 	ldrbeq	r0, [r5, #-768]!	; 0xfffffd00
     a44:	05020000 	streq	r0, [r2, #-0]
     a48:	00000052 	andeq	r0, r0, r2, asr r0
     a4c:	0b200305 	bleq	801668 <startup-0x1f7fe998>
     a50:	69032000 	stmdbvs	r3, {sp}
     a54:	02000005 	andeq	r0, r0, #5
     a58:	00005206 	andeq	r5, r0, r6, lsl #4
     a5c:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
     a60:	0620000b 	strteq	r0, [r0], -fp
     a64:	0000058b 	andeq	r0, r0, fp, lsl #11
     a68:	01840401 	orreq	r0, r4, r1, lsl #8
     a6c:	003c2000 	eorseq	r2, ip, r0
     a70:	9c010000 	stcls	0, cr0, [r1], {-0}
     a74:	0001a007 	andeq	sl, r1, r7
     a78:	00000420 	andeq	r0, r0, r0, lsr #8
     a7c:	05820800 	streq	r0, [r2, #2048]	; 0x800
     a80:	0b010000 	bleq	40a88 <startup-0x1ffbf578>
     a84:	0000004b 	andeq	r0, r0, fp, asr #32
     a88:	00000009 	andeq	r0, r0, r9
     a8c:	00011300 	andeq	r1, r1, r0, lsl #6
     a90:	49000400 	stmdbmi	r0, {sl}
     a94:	04000002 	streq	r0, [r0], #-2
     a98:	00001201 	andeq	r1, r0, r1, lsl #4
     a9c:	06040c00 	streq	r0, [r4], -r0, lsl #24
     aa0:	027d0000 	rsbseq	r0, sp, #0
     aa4:	01c00000 	biceq	r0, r0, r0
     aa8:	01142000 	tsteq	r4, r0
     aac:	02170000 	andseq	r0, r7, #0
     ab0:	04020000 	streq	r0, [r2], #-0
     ab4:	0000df07 	andeq	sp, r0, r7, lsl #30
     ab8:	07020200 	streq	r0, [r2, -r0, lsl #4]
     abc:	00000248 	andeq	r0, r0, r8, asr #4
     ac0:	34080102 	strcc	r0, [r8], #-258	; 0xfffffefe
     ac4:	03000003 	movweq	r0, #3
     ac8:	0000055c 	andeq	r0, r0, ip, asr r5
     acc:	00520402 	subseq	r0, r2, r2, lsl #8
     ad0:	03050000 	movweq	r0, #20480	; 0x5000
     ad4:	20000b18 	andcs	r0, r0, r8, lsl fp
     ad8:	69050404 	stmdbvs	r5, {r2, sl}
     adc:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
     ae0:	0000004b 	andeq	r0, r0, fp, asr #32
     ae4:	00057503 	andeq	r7, r5, r3, lsl #10
     ae8:	52050200 	andpl	r0, r5, #0, 4
     aec:	05000000 	streq	r0, [r0, #-0]
     af0:	000b2003 	andeq	r2, fp, r3
     af4:	05690320 	strbeq	r0, [r9, #-800]!	; 0xfffffce0
     af8:	06020000 	streq	r0, [r2], -r0
     afc:	00000052 	andeq	r0, r0, r2, asr r0
     b00:	0b1c0305 	bleq	70171c <startup-0x1f8fe8e4>
     b04:	3c062000 	stccc	0, cr2, [r6], {-0}
     b08:	01000006 	tsteq	r0, r6
     b0c:	0002a430 	andeq	sl, r2, r0, lsr r4
     b10:	00003020 	andeq	r3, r0, r0, lsr #32
     b14:	9d9c0100 	ldflss	f0, [ip]
     b18:	07000000 	streq	r0, [r0, -r0]
     b1c:	00000429 	andeq	r0, r0, r9, lsr #8
     b20:	00253001 	eoreq	r3, r5, r1
     b24:	91020000 	mrsls	r0, (UNDEF: 2)
     b28:	82080074 	andhi	r0, r8, #116	; 0x74
     b2c:	01000005 	tsteq	r0, r5
     b30:	00026827 	andeq	r6, r2, r7, lsr #16
     b34:	00003c20 	andeq	r3, r0, r0, lsr #24
     b38:	069c0100 	ldreq	r0, [ip], r0, lsl #2
     b3c:	000005d4 	ldrdeq	r0, [r0], -r4
     b40:	02421e01 	subeq	r1, r2, #1, 28
     b44:	00262000 	eoreq	r2, r6, r0
     b48:	9c010000 	stcls	0, cr0, [r1], {-0}
     b4c:	000000d1 	ldrdeq	r0, [r0], -r1
     b50:	00736d09 	rsbseq	r6, r3, r9, lsl #26
     b54:	00251e01 	eoreq	r1, r5, r1, lsl #28
     b58:	91020000 	mrsls	r0, (UNDEF: 2)
     b5c:	e0060074 	and	r0, r6, r4, ror r0
     b60:	01000005 	tsteq	r0, r5
     b64:	00021613 	andeq	r1, r2, r3, lsl r6
     b68:	00002c20 	andeq	r2, r0, r0, lsr #24
     b6c:	f49c0100 			; <UNDEFINED> instruction: 0xf49c0100
     b70:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     b74:	01007375 	tsteq	r0, r5, ror r3
     b78:	00002513 	andeq	r2, r0, r3, lsl r5
     b7c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     b80:	05f80a00 	ldrbeq	r0, [r8, #2560]!	; 0xa00
     b84:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     b88:	20000204 	andcs	r0, r0, r4, lsl #4
     b8c:	00000012 	andeq	r0, r0, r2, lsl r0
     b90:	ec089c01 	stc	12, cr9, [r8], {1}
     b94:	01000005 	tsteq	r0, r5
     b98:	0001c004 	andeq	ip, r1, r4
     b9c:	00004420 	andeq	r4, r0, r0, lsr #8
     ba0:	009c0100 	addseq	r0, ip, r0, lsl #2
     ba4:	00000b49 	andeq	r0, r0, r9, asr #22
     ba8:	02f30004 	rscseq	r0, r3, #4
     bac:	01040000 	mrseq	r0, (UNDEF: 4)
     bb0:	00000012 	andeq	r0, r0, r2, lsl r0
     bb4:	0006740c 	andeq	r7, r6, ip, lsl #8
     bb8:	00027d00 	andeq	r7, r2, r0, lsl #26
	...
     bc4:	0002b600 	andeq	fp, r2, r0, lsl #12
     bc8:	06010200 	streq	r0, [r1], -r0, lsl #4
     bcc:	00000336 	andeq	r0, r0, r6, lsr r3
     bd0:	34080102 	strcc	r0, [r8], #-258	; 0xfffffefe
     bd4:	02000003 	andeq	r0, r0, #3
     bd8:	03500502 	cmpeq	r0, #8388608	; 0x800000
     bdc:	02020000 	andeq	r0, r2, #0
     be0:	00024807 	andeq	r4, r2, r7, lsl #16
     be4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
     be8:	0000012b 	andeq	r0, r0, fp, lsr #2
     bec:	da070402 	ble	1c1bfc <startup-0x1fe3e404>
     bf0:	02000000 	andeq	r0, r0, #0
     bf4:	01260508 			; <UNDEFINED> instruction: 0x01260508
     bf8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     bfc:	0000d507 	andeq	sp, r0, r7, lsl #10
     c00:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
     c04:	00746e69 	rsbseq	r6, r4, r9, ror #28
     c08:	00005d04 	andeq	r5, r0, r4, lsl #26
     c0c:	07040200 	streq	r0, [r4, -r0, lsl #4]
     c10:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     c14:	ba060405 	blt	181c30 <startup-0x1fe7e3d0>
     c18:	02000002 	andeq	r0, r0, #2
     c1c:	00007d22 	andeq	r7, r0, r2, lsr #26
     c20:	83040700 	movwhi	r0, #18176	; 0x4700
     c24:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     c28:	0000042f 	andeq	r0, r0, pc, lsr #8
     c2c:	00030e06 	andeq	r0, r3, r6, lsl #28
     c30:	412c0300 			; <UNDEFINED> instruction: 0x412c0300
     c34:	06000000 	streq	r0, [r0], -r0
     c38:	00000444 	andeq	r0, r0, r4, asr #8
     c3c:	00417203 	subeq	r7, r1, r3, lsl #4
     c40:	c2090000 	andgt	r0, r9, #0
     c44:	04000002 	streq	r0, [r0], #-2
     c48:	00690165 	rsbeq	r0, r9, r5, ror #2
     c4c:	040a0000 	streq	r0, [sl], #-0
     c50:	00c9a603 	sbceq	sl, r9, r3, lsl #12
     c54:	b40b0000 	strlt	r0, [fp], #-0
     c58:	03000002 	movweq	r0, #2
     c5c:	00009ea8 	andeq	r9, r0, r8, lsr #29
     c60:	021c0b00 	andseq	r0, ip, #0, 22
     c64:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
     c68:	000000c9 	andeq	r0, r0, r9, asr #1
     c6c:	002c0c00 	eoreq	r0, ip, r0, lsl #24
     c70:	00d90000 	sbcseq	r0, r9, r0
     c74:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
     c78:	03000000 	movweq	r0, #0
     c7c:	03080e00 	movweq	r0, #36352	; 0x8e00
     c80:	0000faa3 	andeq	pc, r0, r3, lsr #21
     c84:	04270f00 	strteq	r0, [r7], #-3840	; 0xfffff100
     c88:	a5030000 	strge	r0, [r3, #-0]
     c8c:	0000005d 	andeq	r0, r0, sp, asr r0
     c90:	04360f00 	ldrteq	r0, [r6], #-3840	; 0xfffff100
     c94:	aa030000 	bge	c0c9c <startup-0x1ff3f364>
     c98:	000000aa 	andeq	r0, r0, sl, lsr #1
     c9c:	78060004 	stmdavc	r6, {r2}
     ca0:	03000003 	movweq	r0, #3
     ca4:	0000d9ab 	andeq	sp, r0, fp, lsr #19
     ca8:	01e50600 	mvneq	r0, r0, lsl #12
     cac:	af030000 	svcge	0x00030000
     cb0:	00000072 	andeq	r0, r0, r2, ror r0
     cb4:	00048206 	andeq	r8, r4, r6, lsl #4
     cb8:	48160500 	ldmdami	r6, {r8, sl}
     cbc:	10000000 	andne	r0, r0, r0
     cc0:	000001f6 	strdeq	r0, [r0], -r6
     cc4:	6e2f0518 	mcrvs	5, 1, r0, cr15, cr8, {0}
     cc8:	0f000001 	svceq	0x00000001
     ccc:	00000399 	muleq	r0, r9, r3
     cd0:	016e3105 	cmneq	lr, r5, lsl #2
     cd4:	11000000 	mrsne	r0, (UNDEF: 0)
     cd8:	05006b5f 	streq	r6, [r0, #-2911]	; 0xfffff4a1
     cdc:	00005d32 	andeq	r5, r0, r2, lsr sp
     ce0:	e10f0400 	tst	pc, r0, lsl #8
     ce4:	05000003 	streq	r0, [r0, #-3]
     ce8:	00005d32 	andeq	r5, r0, r2, lsr sp
     cec:	d90f0800 	stmdble	pc, {fp}	; <UNPREDICTABLE>
     cf0:	05000001 	streq	r0, [r0, #-1]
     cf4:	00005d32 	andeq	r5, r0, r2, lsr sp
     cf8:	b70f0c00 	strlt	r0, [pc, -r0, lsl #24]
     cfc:	05000004 	streq	r0, [r0, #-4]
     d00:	00005d32 	andeq	r5, r0, r2, lsr sp
     d04:	5f111000 	svcpl	0x00111000
     d08:	33050078 	movwcc	r0, #20600	; 0x5078
     d0c:	00000174 	andeq	r0, r0, r4, ror r1
     d10:	04070014 	streq	r0, [r7], #-20	; 0xffffffec
     d14:	0000011b 	andeq	r0, r0, fp, lsl r1
     d18:	0001100c 	andeq	r1, r1, ip
     d1c:	00018400 	andeq	r8, r1, r0, lsl #8
     d20:	00690d00 	rsbeq	r0, r9, r0, lsl #26
     d24:	00000000 	andeq	r0, r0, r0
     d28:	00021710 	andeq	r1, r2, r0, lsl r7
     d2c:	37052400 	strcc	r2, [r5, -r0, lsl #8]
     d30:	000001fd 	strdeq	r0, [r0], -sp
     d34:	00011d0f 	andeq	r1, r1, pc, lsl #26
     d38:	5d390500 	cfldr32pl	mvfx0, [r9, #-0]
     d3c:	00000000 	andeq	r0, r0, r0
     d40:	00044c0f 	andeq	r4, r4, pc, lsl #24
     d44:	5d3a0500 	cfldr32pl	mvfx0, [sl, #-0]
     d48:	04000000 	streq	r0, [r0], #-0
     d4c:	00014a0f 	andeq	r4, r1, pc, lsl #20
     d50:	5d3b0500 	cfldr32pl	mvfx0, [fp, #-0]
     d54:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     d58:	0005520f 	andeq	r5, r5, pc, lsl #4
     d5c:	5d3c0500 	cfldr32pl	mvfx0, [ip, #-0]
     d60:	0c000000 	stceq	0, cr0, [r0], {-0}
     d64:	0002f20f 	andeq	pc, r2, pc, lsl #4
     d68:	5d3d0500 	cfldr32pl	mvfx0, [sp, #-0]
     d6c:	10000000 	andne	r0, r0, r0
     d70:	0002d10f 	andeq	sp, r2, pc, lsl #2
     d74:	5d3e0500 	cfldr32pl	mvfx0, [lr, #-0]
     d78:	14000000 	strne	r0, [r0], #-0
     d7c:	0004bc0f 	andeq	fp, r4, pc, lsl #24
     d80:	5d3f0500 	cfldr32pl	mvfx0, [pc, #-0]	; d88 <startup-0x1ffff278>
     d84:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     d88:	00035a0f 	andeq	r5, r3, pc, lsl #20
     d8c:	5d400500 	cfstr64pl	mvdx0, [r0, #-0]
     d90:	1c000000 	stcne	0, cr0, [r0], {-0}
     d94:	0005080f 	andeq	r0, r5, pc, lsl #16
     d98:	5d410500 	cfstr64pl	mvdx0, [r1, #-0]
     d9c:	20000000 	andcs	r0, r0, r0
     da0:	01591200 	cmpeq	r9, r0, lsl #4
     da4:	01080000 	mrseq	r0, (UNDEF: 8)
     da8:	023d4a05 	eorseq	r4, sp, #20480	; 0x5000
     dac:	c50f0000 	strgt	r0, [pc, #-0]	; db4 <startup-0x1ffff24c>
     db0:	05000001 	streq	r0, [r0, #-1]
     db4:	00023d4b 	andeq	r3, r2, fp, asr #26
     db8:	000f0000 	andeq	r0, pc, r0
     dbc:	05000000 	streq	r0, [r0, #-0]
     dc0:	00023d4c 	andeq	r3, r2, ip, asr #26
     dc4:	74138000 	ldrvc	r8, [r3], #-0
     dc8:	05000004 	streq	r0, [r0, #-4]
     dcc:	0001104e 	andeq	r1, r1, lr, asr #32
     dd0:	13010000 	movwne	r0, #4096	; 0x1000
     dd4:	0000017e 	andeq	r0, r0, lr, ror r1
     dd8:	01105105 	tsteq	r0, r5, lsl #2
     ddc:	01040000 	mrseq	r0, (UNDEF: 4)
     de0:	00700c00 	rsbseq	r0, r0, r0, lsl #24
     de4:	024d0000 	subeq	r0, sp, #0
     de8:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
     dec:	1f000000 	svcne	0x00000000
     df0:	02fb1200 	rscseq	r1, fp, #0, 4
     df4:	01900000 	orrseq	r0, r0, r0
     df8:	028b5d05 	addeq	r5, fp, #320	; 0x140
     dfc:	990f0000 	stmdbls	pc, {}	; <UNPREDICTABLE>
     e00:	05000003 	streq	r0, [r0, #-3]
     e04:	00028b5e 	andeq	r8, r2, lr, asr fp
     e08:	b10f0000 	mrslt	r0, CPSR
     e0c:	05000003 	streq	r0, [r0, #-3]
     e10:	00005d5f 	andeq	r5, r0, pc, asr sp
     e14:	d40f0400 	strle	r0, [pc], #-1024	; e1c <startup-0x1ffff1e4>
     e18:	05000001 	streq	r0, [r0, #-1]
     e1c:	00029161 	andeq	r9, r2, r1, ror #2
     e20:	590f0800 	stmdbpl	pc, {fp}	; <UNPREDICTABLE>
     e24:	05000001 	streq	r0, [r0, #-1]
     e28:	0001fd62 	andeq	pc, r1, r2, ror #26
     e2c:	07008800 	streq	r8, [r0, -r0, lsl #16]
     e30:	00024d04 	andeq	r4, r2, r4, lsl #26
     e34:	02a10c00 	adceq	r0, r1, #0, 24
     e38:	02a10000 	adceq	r0, r1, #0
     e3c:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
     e40:	1f000000 	svcne	0x00000000
     e44:	a7040700 	strge	r0, [r4, -r0, lsl #14]
     e48:	14000002 	strne	r0, [r0], #-2
     e4c:	00036410 	andeq	r6, r3, r0, lsl r4
     e50:	75050800 	strvc	r0, [r5, #-2048]	; 0xfffff800
     e54:	000002cd 	andeq	r0, r0, sp, asr #5
     e58:	0001440f 	andeq	r4, r1, pc, lsl #8
     e5c:	cd760500 	cfldr64gt	mvdx0, [r6, #-0]
     e60:	00000002 	andeq	r0, r0, r2
     e64:	00000c0f 	andeq	r0, r0, pc, lsl #24
     e68:	5d770500 	cfldr64pl	mvdx0, [r7, #-0]
     e6c:	04000000 	streq	r0, [r0], #-0
     e70:	2c040700 	stccs	7, cr0, [r4], {-0}
     e74:	10000000 	andne	r0, r0, r0
     e78:	00000383 	andeq	r0, r0, r3, lsl #7
     e7c:	fdb50568 	ldc2	5, cr0, [r5, #416]!	; 0x1a0
     e80:	11000003 	tstne	r0, r3
     e84:	0500705f 	streq	r7, [r0, #-95]	; 0xffffffa1
     e88:	0002cdb6 			; <UNDEFINED> instruction: 0x0002cdb6
     e8c:	5f110000 	svcpl	0x00110000
     e90:	b7050072 	smlsdxlt	r5, r2, r0, r0
     e94:	0000005d 	andeq	r0, r0, sp, asr r0
     e98:	775f1104 	ldrbvc	r1, [pc, -r4, lsl #2]
     e9c:	5db80500 	cfldr32pl	mvfx0, [r8]
     ea0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     ea4:	0001770f 	andeq	r7, r1, pc, lsl #14
     ea8:	33b90500 			; <UNDEFINED> instruction: 0x33b90500
     eac:	0c000000 	stceq	0, cr0, [r0], {-0}
     eb0:	0002330f 	andeq	r3, r2, pc, lsl #6
     eb4:	33ba0500 			; <UNDEFINED> instruction: 0x33ba0500
     eb8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     ebc:	66625f11 	uqadd16vs	r5, r2, r1
     ec0:	a8bb0500 	ldmge	fp!, {r8, sl}
     ec4:	10000002 	andne	r0, r0, r2
     ec8:	0000ec0f 	andeq	lr, r0, pc, lsl #24
     ecc:	5dbc0500 	cfldr32pl	mvfx0, [ip]
     ed0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     ed4:	0001670f 	andeq	r6, r1, pc, lsl #14
     ed8:	70c30500 	sbcvc	r0, r3, r0, lsl #10
     edc:	1c000000 	stcne	0, cr0, [r0], {-0}
     ee0:	00089f0f 	andeq	r9, r8, pc, lsl #30
     ee4:	6ac50500 	bvs	ff1422ec <ball+0xdf141794>
     ee8:	20000005 	andcs	r0, r0, r5
     eec:	0007ec0f 	andeq	lr, r7, pc, lsl #24
     ef0:	94c70500 	strbls	r0, [r7], #1280	; 0x500
     ef4:	24000005 	strcs	r0, [r0], #-5
     ef8:	00043e0f 	andeq	r3, r4, pc, lsl #28
     efc:	b8ca0500 	stmialt	sl, {r8, sl}^
     f00:	28000005 	stmdacs	r0, {r0, r2}
     f04:	0005220f 	andeq	r2, r5, pc, lsl #4
     f08:	d2cb0500 	sbcle	r0, fp, #0, 10
     f0c:	2c000005 	stccs	0, cr0, [r0], {5}
     f10:	62755f11 	rsbsvs	r5, r5, #17, 30	; 0x44
     f14:	a8ce0500 	stmiage	lr, {r8, sl}^
     f18:	30000002 	andcc	r0, r0, r2
     f1c:	70755f11 	rsbsvc	r5, r5, r1, lsl pc
     f20:	cdcf0500 	cfstr64gt	mvdx0, [pc]	; f28 <startup-0x1ffff0d8>
     f24:	38000002 	stmdacc	r0, {r1}
     f28:	72755f11 	rsbsvc	r5, r5, #17, 30	; 0x44
     f2c:	5dd00500 	cfldr64pl	mvdx0, [r0]
     f30:	3c000000 	stccc	0, cr0, [r0], {-0}
     f34:	0001340f 	andeq	r3, r1, pc, lsl #8
     f38:	d8d30500 	ldmle	r3, {r8, sl}^
     f3c:	40000005 	andmi	r0, r0, r5
     f40:	0004fa0f 	andeq	pc, r4, pc, lsl #20
     f44:	e8d40500 	ldm	r4, {r8, sl}^
     f48:	43000005 	movwmi	r0, #5
     f4c:	626c5f11 	rsbvs	r5, ip, #17, 30	; 0x44
     f50:	a8d70500 	ldmge	r7, {r8, sl}^
     f54:	44000002 	strmi	r0, [r0], #-2
     f58:	00018d0f 	andeq	r8, r1, pc, lsl #26
     f5c:	5dda0500 	cfldr64pl	mvdx0, [sl]
     f60:	4c000000 	stcmi	0, cr0, [r0], {-0}
     f64:	00019e0f 	andeq	r9, r1, pc, lsl #28
     f68:	88db0500 	ldmhi	fp, {r8, sl}^
     f6c:	50000000 	andpl	r0, r0, r0
     f70:	0007df0f 	andeq	sp, r7, pc, lsl #30
     f74:	1bde0500 	blne	ff78237c <ball+0xdf781824>
     f78:	54000004 	strpl	r0, [r0], #-4
     f7c:	0004300f 	andeq	r3, r4, pc
     f80:	05e20500 	strbeq	r0, [r2, #1280]!	; 0x500
     f84:	58000001 	stmdapl	r0, {r0}
     f88:	00038b0f 	andeq	r8, r3, pc, lsl #22
     f8c:	fae40500 	blx	ff902394 <ball+0xdf90183c>
     f90:	5c000000 	stcpl	0, cr0, [r0], {-0}
     f94:	0002c90f 	andeq	ip, r2, pc, lsl #18
     f98:	5de50500 	cfstr64pl	mvdx0, [r5]
     f9c:	64000000 	strvs	r0, [r0], #-0
     fa0:	005d1500 	subseq	r1, sp, r0, lsl #10
     fa4:	041b0000 	ldreq	r0, [fp], #-0
     fa8:	1b160000 	blne	580fb0 <startup-0x1fa7f050>
     fac:	16000004 	strne	r0, [r0], -r4
     fb0:	00000070 	andeq	r0, r0, r0, ror r0
     fb4:	00055816 	andeq	r5, r5, r6, lsl r8
     fb8:	005d1600 	subseq	r1, sp, r0, lsl #12
     fbc:	07000000 	streq	r0, [r0, -r0]
     fc0:	00042604 	andeq	r2, r4, r4, lsl #12
     fc4:	041b1700 	ldreq	r1, [fp], #-1792	; 0xfffff900
     fc8:	f3180000 	vhadd.u16	d0, d8, d0
     fcc:	28000004 	stmdacs	r0, {r2}
     fd0:	02390504 	eorseq	r0, r9, #4, 10	; 0x1000000
     fd4:	00000558 	andeq	r0, r0, r8, asr r5
     fd8:	00034919 	andeq	r4, r3, r9, lsl r9
     fdc:	023b0500 	eorseq	r0, fp, #0, 10
     fe0:	0000005d 	andeq	r0, r0, sp, asr r0
     fe4:	01861900 	orreq	r1, r6, r0, lsl #18
     fe8:	40050000 	andmi	r0, r5, r0
     fec:	00063f02 	andeq	r3, r6, r2, lsl #30
     ff0:	23190400 	tstcs	r9, #0, 8
     ff4:	05000002 	streq	r0, [r0, #-2]
     ff8:	063f0240 	ldrteq	r0, [pc], -r0, asr #4
     ffc:	19080000 	stmdbne	r8, {}	; <UNPREDICTABLE>
    1000:	000001ee 	andeq	r0, r0, lr, ror #3
    1004:	3f024005 	svccc	0x00024005
    1008:	0c000006 	stceq	0, cr0, [r0], {6}
    100c:	0003ac19 	andeq	sl, r3, r9, lsl ip
    1010:	02420500 	subeq	r0, r2, #0, 10
    1014:	0000005d 	andeq	r0, r0, sp, asr r0
    1018:	00a31910 	adceq	r1, r3, r0, lsl r9
    101c:	43050000 	movwmi	r0, #20480	; 0x5000
    1020:	00082102 	andeq	r2, r8, r2, lsl #2
    1024:	c8191400 	ldmdagt	r9, {sl, ip}
    1028:	05000003 	streq	r0, [r0, #-3]
    102c:	005d0246 	subseq	r0, sp, r6, asr #4
    1030:	19300000 	ldmdbne	r0!, {}	; <UNPREDICTABLE>
    1034:	000003b6 			; <UNDEFINED> instruction: 0x000003b6
    1038:	36024705 	strcc	r4, [r2], -r5, lsl #14
    103c:	34000008 	strcc	r0, [r0], #-8
    1040:	00030319 	andeq	r0, r3, r9, lsl r3
    1044:	02490500 	subeq	r0, r9, #0, 10
    1048:	0000005d 	andeq	r0, r0, sp, asr r0
    104c:	03be1938 			; <UNDEFINED> instruction: 0x03be1938
    1050:	4b050000 	blmi	141058 <startup-0x1febefa8>
    1054:	00084702 	andeq	r4, r8, r2, lsl #14
    1058:	ac193c00 	ldcge	12, cr3, [r9], {-0}
    105c:	05000002 	streq	r0, [r0, #-2]
    1060:	016e024e 	cmneq	lr, lr, asr #4
    1064:	19400000 	stmdbne	r0, {}^	; <UNPREDICTABLE>
    1068:	0000020d 	andeq	r0, r0, sp, lsl #4
    106c:	5d024f05 	stcpl	15, cr4, [r2, #-20]	; 0xffffffec
    1070:	44000000 	strmi	r0, [r0], #-0
    1074:	00054119 	andeq	r4, r5, r9, lsl r1
    1078:	02500500 	subseq	r0, r0, #0, 10
    107c:	0000016e 	andeq	r0, r0, lr, ror #2
    1080:	03151948 	tsteq	r5, #72, 18	; 0x120000
    1084:	51050000 	mrspl	r0, (UNDEF: 5)
    1088:	00084d02 	andeq	r4, r8, r2, lsl #26
    108c:	2b194c00 	blcs	654094 <startup-0x1f9abf6c>
    1090:	05000002 	streq	r0, [r0, #-2]
    1094:	005d0254 	subseq	r0, sp, r4, asr r2
    1098:	19500000 	ldmdbne	r0, {}^	; <UNPREDICTABLE>
    109c:	00000196 	muleq	r0, r6, r1
    10a0:	58025505 	stmdapl	r2, {r0, r2, r8, sl, ip, lr}
    10a4:	54000005 	strpl	r0, [r0], #-5
    10a8:	00034219 	andeq	r4, r3, r9, lsl r2
    10ac:	02780500 	rsbseq	r0, r8, #0, 10
    10b0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    10b4:	02fb1a58 	rscseq	r1, fp, #88, 20	; 0x58000
    10b8:	7c050000 	stcvc	0, cr0, [r5], {-0}
    10bc:	00028b02 	andeq	r8, r2, r2, lsl #22
    10c0:	1a014800 	bne	530c8 <startup-0x1ffacf38>
    10c4:	0000025b 	andeq	r0, r0, fp, asr r2
    10c8:	4d027d05 	stcmi	13, cr7, [r2, #-20]	; 0xffffffec
    10cc:	4c000002 	stcmi	0, cr0, [r0], {2}
    10d0:	04e91a01 	strbteq	r1, [r9], #2561	; 0xa01
    10d4:	81050000 	mrshi	r0, (UNDEF: 5)
    10d8:	00085e02 	andeq	r5, r8, r2, lsl #28
    10dc:	1a02dc00 	bne	b80e4 <startup-0x1ff47f1c>
    10e0:	0000016f 	andeq	r0, r0, pc, ror #2
    10e4:	04028605 	streq	r8, [r2], #-1541	; 0xfffff9fb
    10e8:	e0000006 	and	r0, r0, r6
    10ec:	01541a02 	cmpeq	r4, r2, lsl #20
    10f0:	88050000 	stmdahi	r5, {}	; <UNPREDICTABLE>
    10f4:	00086a02 	andeq	r6, r8, r2, lsl #20
    10f8:	0002ec00 	andeq	lr, r2, r0, lsl #24
    10fc:	055e0407 	ldrbeq	r0, [lr, #-1031]	; 0xfffffbf9
    1100:	01020000 	mrseq	r0, (UNDEF: 2)
    1104:	00033d08 	andeq	r3, r3, r8, lsl #26
    1108:	055e1700 	ldrbeq	r1, [lr, #-1792]	; 0xfffff900
    110c:	04070000 	streq	r0, [r7], #-0
    1110:	000003fd 	strdeq	r0, [r0], -sp
    1114:	00005d15 	andeq	r5, r0, r5, lsl sp
    1118:	00058e00 	andeq	r8, r5, r0, lsl #28
    111c:	041b1600 	ldreq	r1, [fp], #-1536	; 0xfffffa00
    1120:	70160000 	andsvc	r0, r6, r0
    1124:	16000000 	strne	r0, [r0], -r0
    1128:	0000058e 	andeq	r0, r0, lr, lsl #11
    112c:	00005d16 	andeq	r5, r0, r6, lsl sp
    1130:	04070000 	streq	r0, [r7], #-0
    1134:	00000565 	andeq	r0, r0, r5, ror #10
    1138:	05700407 	ldrbeq	r0, [r0, #-1031]!	; 0xfffffbf9
    113c:	93150000 	tstls	r5, #0
    1140:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    1144:	16000005 	strne	r0, [r0], -r5
    1148:	0000041b 	andeq	r0, r0, fp, lsl r4
    114c:	00007016 	andeq	r7, r0, r6, lsl r0
    1150:	00931600 	addseq	r1, r3, r0, lsl #12
    1154:	5d160000 	ldcpl	0, cr0, [r6, #-0]
    1158:	00000000 	andeq	r0, r0, r0
    115c:	059a0407 	ldreq	r0, [sl, #1031]	; 0x407
    1160:	5d150000 	ldcpl	0, cr0, [r5, #-0]
    1164:	d2000000 	andle	r0, r0, #0
    1168:	16000005 	strne	r0, [r0], -r5
    116c:	0000041b 	andeq	r0, r0, fp, lsl r4
    1170:	00007016 	andeq	r7, r0, r6, lsl r0
    1174:	04070000 	streq	r0, [r7], #-0
    1178:	000005be 			; <UNDEFINED> instruction: 0x000005be
    117c:	00002c0c 	andeq	r2, r0, ip, lsl #24
    1180:	0005e800 	andeq	lr, r5, r0, lsl #16
    1184:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    1188:	00020000 	andeq	r0, r2, r0
    118c:	00002c0c 	andeq	r2, r0, ip, lsl #24
    1190:	0005f800 	andeq	pc, r5, r0, lsl #16
    1194:	00690d00 	rsbeq	r0, r9, r0, lsl #26
    1198:	00000000 	andeq	r0, r0, r0
    119c:	00037109 	andeq	r7, r3, r9, lsl #2
    11a0:	011f0500 	tsteq	pc, r0, lsl #10
    11a4:	000002d3 	ldrdeq	r0, [r0], -r3
    11a8:	0004c61b 	andeq	ip, r4, fp, lsl r6
    11ac:	23050c00 	movwcs	r0, #23552	; 0x5c00
    11b0:	00063901 	andeq	r3, r6, r1, lsl #18
    11b4:	03991900 	orrseq	r1, r9, #0, 18
    11b8:	25050000 	strcs	r0, [r5, #-0]
    11bc:	00063901 	andeq	r3, r6, r1, lsl #18
    11c0:	41190000 	tstmi	r9, r0
    11c4:	05000002 	streq	r0, [r0, #-2]
    11c8:	005d0126 	subseq	r0, sp, r6, lsr #2
    11cc:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
    11d0:	0000036b 	andeq	r0, r0, fp, ror #6
    11d4:	3f012705 	svccc	0x00012705
    11d8:	08000006 	stmdaeq	r0, {r1, r2}
    11dc:	04040700 	streq	r0, [r4], #-1792	; 0xfffff900
    11e0:	07000006 	streq	r0, [r0, -r6]
    11e4:	0005f804 	andeq	pc, r5, r4, lsl #16
    11e8:	00931b00 	addseq	r1, r3, r0, lsl #22
    11ec:	050e0000 	streq	r0, [lr, #-0]
    11f0:	067a013f 			; <UNDEFINED> instruction: 0x067a013f
    11f4:	21190000 	tstcs	r9, r0
    11f8:	05000004 	streq	r0, [r0, #-4]
    11fc:	067a0140 	ldrbteq	r0, [sl], -r0, asr #2
    1200:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    1204:	00000461 	andeq	r0, r0, r1, ror #8
    1208:	7a014105 	bvc	51624 <startup-0x1ffae9dc>
    120c:	06000006 	streq	r0, [r0], -r6
    1210:	00047d19 	andeq	r7, r4, r9, lsl sp
    1214:	01420500 	cmpeq	r2, r0, lsl #10
    1218:	0000003a 	andeq	r0, r0, sl, lsr r0
    121c:	3a0c000c 	bcc	301254 <startup-0x1fcfedac>
    1220:	8a000000 	bhi	1228 <startup-0x1fffedd8>
    1224:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    1228:	00000069 	andeq	r0, r0, r9, rrx
    122c:	d01c0002 	andsle	r0, ip, r2
    1230:	8b025905 	blhi	9764c <startup-0x1ff689b4>
    1234:	19000007 	stmdbne	r0, {r0, r1, r2}
    1238:	000004aa 	andeq	r0, r0, sl, lsr #9
    123c:	69025b05 	stmdbvs	r2, {r0, r2, r8, r9, fp, ip, lr}
    1240:	00000000 	andeq	r0, r0, r0
    1244:	00046719 	andeq	r6, r4, r9, lsl r7
    1248:	025c0500 	subseq	r0, ip, #0, 10
    124c:	00000558 	andeq	r0, r0, r8, asr r5
    1250:	02701904 	rsbseq	r1, r0, #4, 18	; 0x10000
    1254:	5d050000 	stcpl	0, cr0, [r5, #-0]
    1258:	00078b02 	andeq	r8, r7, r2, lsl #22
    125c:	13190800 	tstne	r9, #0, 16
    1260:	05000005 	streq	r0, [r0, #-5]
    1264:	0184025e 	orreq	r0, r4, lr, asr r2
    1268:	19240000 	stmdbne	r4!, {}	; <UNPREDICTABLE>
    126c:	000001fe 	strdeq	r0, [r0], -lr
    1270:	5d025f05 	stcpl	15, cr5, [r2, #-20]	; 0xffffffec
    1274:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    1278:	00039419 	andeq	r9, r3, r9, lsl r4
    127c:	02600500 	rsbeq	r0, r0, #0, 10
    1280:	00000056 	andeq	r0, r0, r6, asr r0
    1284:	05291950 	streq	r1, [r9, #-2384]!	; 0xfffff6b0
    1288:	61050000 	mrsvs	r0, (UNDEF: 5)
    128c:	00064502 	andeq	r4, r6, r2, lsl #10
    1290:	9f195800 	svcls	0x00195800
    1294:	05000003 	streq	r0, [r0, #-3]
    1298:	00fa0262 	rscseq	r0, sl, r2, ror #4
    129c:	19680000 	stmdbne	r8!, {}^	; <UNPREDICTABLE>
    12a0:	00000533 	andeq	r0, r0, r3, lsr r5
    12a4:	fa026305 	blx	99ec0 <startup-0x1ff66140>
    12a8:	70000000 	andvc	r0, r0, r0
    12ac:	00032619 	andeq	r2, r3, r9, lsl r6
    12b0:	02640500 	rsbeq	r0, r4, #0, 10
    12b4:	000000fa 	strdeq	r0, [r0], -sl
    12b8:	04d51978 	ldrbeq	r1, [r5], #2424	; 0x978
    12bc:	65050000 	strvs	r0, [r5, #-0]
    12c0:	00079b02 	andeq	r9, r7, r2, lsl #22
    12c4:	64198000 	ldrvs	r8, [r9], #-0
    12c8:	05000002 	streq	r0, [r0, #-2]
    12cc:	07ab0266 	streq	r0, [fp, r6, ror #4]!
    12d0:	19880000 	stmibne	r8, {}	; <UNPREDICTABLE>
    12d4:	0000048a 	andeq	r0, r0, sl, lsl #9
    12d8:	5d026705 	stcpl	7, cr6, [r2, #-20]	; 0xffffffec
    12dc:	a0000000 	andge	r0, r0, r0
    12e0:	0001b719 	andeq	fp, r1, r9, lsl r7
    12e4:	02680500 	rsbeq	r0, r8, #0, 10
    12e8:	000000fa 	strdeq	r0, [r0], -sl
    12ec:	010619a4 	smlatbeq	r6, r4, r9, r1
    12f0:	69050000 	stmdbvs	r5, {}	; <UNPREDICTABLE>
    12f4:	0000fa02 	andeq	pc, r0, r2, lsl #20
    12f8:	a619ac00 	ldrge	sl, [r9], -r0, lsl #24
    12fc:	05000001 	streq	r0, [r0, #-1]
    1300:	00fa026a 	rscseq	r0, sl, sl, ror #4
    1304:	19b40000 	ldmibne	r4!, {}	; <UNPREDICTABLE>
    1308:	000000b5 	strheq	r0, [r0], -r5
    130c:	fa026b05 	blx	9bf28 <startup-0x1ff640d8>
    1310:	bc000000 	stclt	0, cr0, [r0], {-0}
    1314:	0000c419 	andeq	ip, r0, r9, lsl r4
    1318:	026c0500 	rsbeq	r0, ip, #0, 10
    131c:	000000fa 	strdeq	r0, [r0], -sl
    1320:	034719c4 	movteq	r1, #31172	; 0x79c4
    1324:	6d050000 	stcvs	0, cr0, [r5, #-0]
    1328:	00005d02 	andeq	r5, r0, r2, lsl #26
    132c:	0c00cc00 	stceq	12, cr12, [r0], {-0}
    1330:	0000055e 	andeq	r0, r0, lr, asr r5
    1334:	0000079b 	muleq	r0, fp, r7
    1338:	0000690d 	andeq	r6, r0, sp, lsl #18
    133c:	0c001900 			; <UNDEFINED> instruction: 0x0c001900
    1340:	0000055e 	andeq	r0, r0, lr, asr r5
    1344:	000007ab 	andeq	r0, r0, fp, lsr #15
    1348:	0000690d 	andeq	r6, r0, sp, lsl #18
    134c:	0c000700 	stceq	7, cr0, [r0], {-0}
    1350:	0000055e 	andeq	r0, r0, lr, asr r5
    1354:	000007bb 			; <UNDEFINED> instruction: 0x000007bb
    1358:	0000690d 	andeq	r6, r0, sp, lsl #18
    135c:	1c001700 	stcne	7, cr1, [r0], {-0}
    1360:	027205f0 	rsbseq	r0, r2, #240, 10	; 0x3c000000
    1364:	000007df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1368:	0002e619 	andeq	lr, r2, r9, lsl r6
    136c:	02750500 	rsbseq	r0, r5, #0, 10
    1370:	000007df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1374:	04cc1900 	strbeq	r1, [ip], #2304	; 0x900
    1378:	76050000 	strvc	r0, [r5], -r0
    137c:	0007ef02 	andeq	lr, r7, r2, lsl #30
    1380:	0c007800 	stceq	8, cr7, [r0], {-0}
    1384:	000002cd 	andeq	r0, r0, sp, asr #5
    1388:	000007ef 	andeq	r0, r0, pc, ror #15
    138c:	0000690d 	andeq	r6, r0, sp, lsl #18
    1390:	0c001d00 	stceq	13, cr1, [r0], {-0}
    1394:	00000069 	andeq	r0, r0, r9, rrx
    1398:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    139c:	0000690d 	andeq	r6, r0, sp, lsl #18
    13a0:	1d001d00 	stcne	13, cr1, [r0, #-0]
    13a4:	025705f0 	subseq	r0, r7, #240, 10	; 0x3c000000
    13a8:	00000821 	andeq	r0, r0, r1, lsr #16
    13ac:	0004f31e 	andeq	pc, r4, lr, lsl r3	; <UNPREDICTABLE>
    13b0:	026e0500 	rsbeq	r0, lr, #0, 10
    13b4:	0000068a 	andeq	r0, r0, sl, lsl #13
    13b8:	0005001e 	andeq	r0, r5, lr, lsl r0
    13bc:	02770500 	rsbseq	r0, r7, #0, 10
    13c0:	000007bb 			; <UNDEFINED> instruction: 0x000007bb
    13c4:	055e0c00 	ldrbeq	r0, [lr, #-3072]	; 0xfffff400
    13c8:	08310000 	ldmdaeq	r1!, {}	; <UNPREDICTABLE>
    13cc:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    13d0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    13d4:	00fb0800 	rscseq	r0, fp, r0, lsl #16
    13d8:	04070000 	streq	r0, [r7], #-0
    13dc:	00000831 	andeq	r0, r0, r1, lsr r8
    13e0:	0008471f 	andeq	r4, r8, pc, lsl r7
    13e4:	041b1600 	ldreq	r1, [fp], #-1536	; 0xfffffa00
    13e8:	07000000 	streq	r0, [r0, -r0]
    13ec:	00083c04 	andeq	r3, r8, r4, lsl #24
    13f0:	6e040700 	cdpvs	7, 0, cr0, cr4, cr0, {0}
    13f4:	1f000001 	svcne	0x00000001
    13f8:	0000085e 	andeq	r0, r0, lr, asr r8
    13fc:	00005d16 	andeq	r5, r0, r6, lsl sp
    1400:	04070000 	streq	r0, [r7], #-0
    1404:	00000864 	andeq	r0, r0, r4, ror #16
    1408:	08530407 	ldmdaeq	r3, {r0, r1, r2, sl}^
    140c:	f80c0000 			; <UNDEFINED> instruction: 0xf80c0000
    1410:	7a000005 	bvc	142c <startup-0x1fffebd4>
    1414:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
    1418:	00000069 	andeq	r0, r0, r9, rrx
    141c:	9e200002 	cdpls	0, 2, cr0, cr0, cr2, {0}
    1420:	05000004 	streq	r0, [r0, #-4]
    1424:	041b0307 	ldreq	r0, [fp], #-775	; 0xfffffcf9
    1428:	97200000 	strls	r0, [r0, -r0]!
    142c:	05000004 	streq	r0, [r0, #-4]
    1430:	04210308 	strteq	r0, [r1], #-776	; 0xfffffcf8
    1434:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
    1438:	091f2106 	ldmdbeq	pc, {r1, r2, r8, sp}	; <UNPREDICTABLE>
    143c:	df0f0000 	svcle	0x000f0000
    1440:	06000001 	streq	r0, [r0], -r1
    1444:	00006922 	andeq	r6, r0, r2, lsr #18
    1448:	ae0f0000 	cdpge	0, 0, cr0, cr15, cr0, {0}
    144c:	06000000 	streq	r0, [r0], -r0
    1450:	00003a23 	andeq	r3, r0, r3, lsr #20
    1454:	db0f0400 	blle	3c245c <startup-0x1fc3dba4>
    1458:	06000002 	streq	r0, [r0], -r2
    145c:	00003a24 	andeq	r3, r0, r4, lsr #20
    1460:	390f0600 	stmdbcc	pc, {r9, sl}	; <UNPREDICTABLE>
    1464:	06000002 	streq	r0, [r0], -r2
    1468:	00006925 	andeq	r6, r0, r5, lsr #18
    146c:	f50f0800 			; <UNDEFINED> instruction: 0xf50f0800
    1470:	06000000 	streq	r0, [r0], -r0
    1474:	00006926 	andeq	r6, r0, r6, lsr #18
    1478:	cd0f0c00 	stcgt	12, cr0, [pc, #-0]	; 1480 <startup-0x1fffeb80>
    147c:	06000001 	streq	r0, [r0], -r1
    1480:	00002c27 	andeq	r2, r0, r7, lsr #24
    1484:	9b0f1000 	blls	3c548c <startup-0x1fc3ab74>
    1488:	06000000 	streq	r0, [r0], -r0
    148c:	00002c28 	andeq	r2, r0, r8, lsr #24
    1490:	460f1100 	strmi	r1, [pc], -r0, lsl #2
    1494:	06000005 	streq	r0, [r0], -r5
    1498:	00003a29 	andeq	r3, r0, r9, lsr #20
    149c:	1f0f1200 	svcne	0x000f1200
    14a0:	06000003 	streq	r0, [r0], -r3
    14a4:	00002c2a 	andeq	r2, r0, sl, lsr #24
    14a8:	150f1400 	strne	r1, [pc, #-1024]	; 10b0 <startup-0x1fffef50>
    14ac:	06000001 	streq	r0, [r0], -r1
    14b0:	00002c2b 	andeq	r2, r0, fp, lsr #24
    14b4:	550f1500 	strpl	r1, [pc, #-1280]	; fbc <startup-0x1ffff044>
    14b8:	06000004 	streq	r0, [r0], -r4
    14bc:	00003a2c 	andeq	r3, r0, ip, lsr #20
    14c0:	06001600 	streq	r1, [r0], -r0, lsl #12
    14c4:	0000052e 	andeq	r0, r0, lr, lsr #10
    14c8:	08922d06 	ldmeq	r2, {r1, r2, r8, sl, fp, sp}
    14cc:	5c210000 	stcpl	0, cr0, [r1], #-0
    14d0:	07000005 	streq	r0, [r0, -r5]
    14d4:	00006404 	andeq	r6, r0, r4, lsl #8
    14d8:	18030500 	stmdane	r3, {r8, sl}
    14dc:	2120000b 			; <UNDEFINED> instruction: 0x2120000b
    14e0:	00000575 	andeq	r0, r0, r5, ror r5
    14e4:	00640507 	rsbeq	r0, r4, r7, lsl #10
    14e8:	03050000 	movweq	r0, #20480	; 0x5000
    14ec:	20000b20 	andcs	r0, r0, r0, lsr #22
    14f0:	00056921 	andeq	r6, r5, r1, lsr #18
    14f4:	64060700 	strvs	r0, [r6], #-1792	; 0xfffff900
    14f8:	05000000 	streq	r0, [r0, #-0]
    14fc:	000b1c03 	andeq	r1, fp, r3, lsl #24
    1500:	071e1020 	ldreq	r1, [lr, -r0, lsr #32]
    1504:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1508:	00097e04 	andeq	r7, r9, r4, lsl #28
    150c:	00781100 	rsbseq	r1, r8, r0, lsl #2
    1510:	002c0508 	eoreq	r0, ip, r8, lsl #10
    1514:	11000000 	mrsne	r0, (UNDEF: 0)
    1518:	06080079 			; <UNDEFINED> instruction: 0x06080079
    151c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1520:	6e060001 	cdpvs	0, 0, cr0, cr6, cr1, {0}
    1524:	08000006 	stmdaeq	r0, {r1, r2}
    1528:	00095d07 	andeq	r5, r9, r7, lsl #26
    152c:	06421000 	strbeq	r1, [r2], -r0
    1530:	08340000 	ldmdaeq	r4!, {}	; <UNPREDICTABLE>
    1534:	0009c509 	andeq	ip, r9, r9, lsl #10
    1538:	06b40f00 	ldrteq	r0, [r4], r0, lsl #30
    153c:	0a080000 	beq	201544 <startup-0x1fdfeabc>
    1540:	0000005d 	andeq	r0, r0, sp, asr r0
    1544:	07120f00 	ldreq	r0, [r2, -r0, lsl #30]
    1548:	0b080000 	bleq	201550 <startup-0x1fdfeab0>
    154c:	0000005d 	andeq	r0, r0, sp, asr r0
    1550:	07180f04 	ldreq	r0, [r8, -r4, lsl #30]
    1554:	0c080000 	stceq	0, cr0, [r8], {-0}
    1558:	0000005d 	andeq	r0, r0, sp, asr r0
    155c:	78701108 	ldmdavc	r0!, {r3, r8, ip}^
    1560:	c50d0800 	strgt	r0, [sp, #-2048]	; 0xfffff800
    1564:	0c000009 	stceq	0, cr0, [r0], {9}
    1568:	097e0c00 	ldmdbeq	lr!, {sl, fp}^
    156c:	09d50000 	ldmibeq	r5, {}^	; <UNPREDICTABLE>
    1570:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
    1574:	13000000 	movwne	r0, #0
    1578:	06c60600 	strbeq	r0, [r6], r0, lsl #12
    157c:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    1580:	000009e0 	andeq	r0, r0, r0, ror #19
    1584:	09890407 	stmibeq	r9, {r0, r1, r2, sl}
    1588:	f4100000 			; <UNDEFINED> instruction: 0xf4100000
    158c:	24000006 	strcs	r0, [r0], #-6
    1590:	0a5f1008 	beq	17c55b8 <startup-0x1e83aa48>
    1594:	67110000 	ldrvs	r0, [r1, -r0]
    1598:	08006f65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, sl, fp, sp, lr}
    159c:	0009d511 	andeq	sp, r9, r1, lsl r5
    15a0:	d50f0000 	strle	r0, [pc, #-0]	; 15a8 <startup-0x1fffea58>
    15a4:	08000006 	stmdaeq	r0, {r1, r2}
    15a8:	00005d12 	andeq	r5, r0, r2, lsl sp
    15ac:	da0f0400 	ble	3c25b4 <startup-0x1fc3da4c>
    15b0:	08000006 	stmdaeq	r0, {r1, r2}
    15b4:	00005d12 	andeq	r5, r0, r2, lsl sp
    15b8:	aa0f0800 	bge	3c35c0 <startup-0x1fc3ca40>
    15bc:	08000006 	stmdaeq	r0, {r1, r2}
    15c0:	00005d13 	andeq	r5, r0, r3, lsl sp
    15c4:	af0f0c00 	svcge	0x000f0c00
    15c8:	08000006 	stmdaeq	r0, {r1, r2}
    15cc:	00005d13 	andeq	r5, r0, r3, lsl sp
    15d0:	0d0f1000 	stceq	0, cr1, [pc, #-0]	; 15d8 <startup-0x1fffea28>
    15d4:	08000007 	stmdaeq	r0, {r0, r1, r2}
    15d8:	000a7014 	andeq	r7, sl, r4, lsl r0
    15dc:	090f1400 	stmdbeq	pc, {sl, ip}	; <UNPREDICTABLE>
    15e0:	08000008 	stmdaeq	r0, {r3}
    15e4:	000a7015 	andeq	r7, sl, r5, lsl r0
    15e8:	690f1800 	stmdbvs	pc, {fp, ip}	; <UNPREDICTABLE>
    15ec:	08000006 	stmdaeq	r0, {r1, r2}
    15f0:	000a7016 	andeq	r7, sl, r6, lsl r0
    15f4:	4c0f1c00 	stcmi	12, cr1, [pc], {-0}
    15f8:	08000006 	stmdaeq	r0, {r1, r2}
    15fc:	000a8b17 	andeq	r8, sl, r7, lsl fp
    1600:	1f002000 	svcne	0x00002000
    1604:	00000a6a 	andeq	r0, r0, sl, ror #20
    1608:	000a6a16 	andeq	r6, sl, r6, lsl sl
    160c:	04070000 	streq	r0, [r7], #-0
    1610:	000009e6 	andeq	r0, r0, r6, ror #19
    1614:	0a5f0407 	beq	17c2638 <startup-0x1e83d9c8>
    1618:	8b1f0000 	blhi	7c1620 <startup-0x1f83e9e0>
    161c:	1600000a 	strne	r0, [r0], -sl
    1620:	00000a6a 	andeq	r0, r0, sl, ror #20
    1624:	00005d16 	andeq	r5, r0, r6, lsl sp
    1628:	005d1600 	subseq	r1, sp, r0, lsl #12
    162c:	07000000 	streq	r0, [r0, -r0]
    1630:	000a7604 	andeq	r7, sl, r4, lsl #12
    1634:	06bf0600 	ldrteq	r0, [pc], r0, lsl #12
    1638:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    163c:	000009e6 	andeq	r0, r0, r6, ror #19
    1640:	0006be06 	andeq	fp, r6, r6, lsl #28
    1644:	6a180800 	bvs	60364c <startup-0x1f9fc9b4>
    1648:	2200000a 	andcs	r0, r0, #10
    164c:	000006d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1650:	0a910609 	beq	fe442e7c <ball+0xde442324>
    1654:	25230000 	strcs	r0, [r3, #-0]!
    1658:	01000007 	tsteq	r0, r7
    165c:	0003583b 	andeq	r5, r3, fp, lsr r8
    1660:	00008c20 	andeq	r8, r0, r0, lsr #24
    1664:	2a9c0100 	bcs	fe701a6c <ball+0xde700f14>
    1668:	2400000b 	strcs	r0, [r0], #-11
    166c:	3d010063 	stccc	0, cr0, [r1, #-396]	; 0xfffffe74
    1670:	0000055e 	andeq	r0, r0, lr, asr r5
    1674:	24739102 	ldrbtcs	r9, [r3], #-258	; 0xfffffefe
    1678:	3e010070 	mcrcc	0, 0, r0, cr1, cr0, {3}
    167c:	00000a9c 	muleq	r0, ip, sl
    1680:	25749102 	ldrbcs	r9, [r4, #-258]!	; 0xfffffefe
    1684:	00000656 	andeq	r0, r0, r6, asr r6
    1688:	005d4001 	subseq	r4, sp, r1
    168c:	0af00000 	beq	ffc01694 <ball+0xdfc00b3c>
    1690:	00260000 	eoreq	r0, r6, r0
    1694:	0006df25 	andeq	sp, r6, r5, lsr #30
    1698:	5d410100 	stfple	f0, [r1, #-0]
    169c:	01000000 	mrseq	r0, (UNDEF: 0)
    16a0:	2600000b 	strcs	r0, [r0], -fp
    16a4:	036e2700 	cmneq	lr, #0, 14
    16a8:	00702000 	rsbseq	r2, r0, r0
    16ac:	d4250000 	strtle	r0, [r5], #-0
    16b0:	01000005 	tsteq	r0, r5
    16b4:	00005d45 	andeq	r5, r0, r5, asr #26
    16b8:	000b1b00 	andeq	r1, fp, r0, lsl #22
    16bc:	28002600 	stmdacs	r0, {r9, sl, sp}
    16c0:	000002ed 	andeq	r0, r0, sp, ror #5
    16c4:	005d4601 	subseq	r4, sp, r1, lsl #12
    16c8:	00260000 	eoreq	r0, r6, r0
    16cc:	04290000 	strteq	r0, [r9], #-0
    16d0:	01000007 	tsteq	r0, r7
    16d4:	0002d424 	andeq	sp, r2, r4, lsr #8
    16d8:	00008420 	andeq	r8, r0, r0, lsr #8
    16dc:	299c0100 	ldmibcs	ip, {r8}
    16e0:	000006fc 	strdeq	r0, [r0], -ip
    16e4:	00001801 	andeq	r1, r0, r1, lsl #16
    16e8:	000c2000 	andeq	r2, ip, r0
    16ec:	9c010000 	stcls	0, cr0, [r1], {-0}
    16f0:	0002b100 	andeq	fp, r2, r0, lsl #2
    16f4:	0d000400 	cfstrseq	mvf0, [r0, #-0]
    16f8:	04000005 	streq	r0, [r0], #-5
    16fc:	00001201 	andeq	r1, r0, r1, lsl #4
    1700:	07580c00 	ldrbeq	r0, [r8, -r0, lsl #24]
    1704:	027d0000 	rsbseq	r0, sp, #0
    1708:	03e40000 	mvneq	r0, #0
    170c:	01c02000 	biceq	r2, r0, r0
    1710:	04660000 	strbteq	r0, [r6], #-0
    1714:	04020000 	streq	r0, [r2], #-0
    1718:	0000df07 	andeq	sp, r0, r7, lsl #30
    171c:	07020200 	streq	r0, [r2, -r0, lsl #4]
    1720:	00000248 	andeq	r0, r0, r8, asr #4
    1724:	34080102 	strcc	r0, [r8], #-258	; 0xfffffefe
    1728:	03000003 	movweq	r0, #3
    172c:	0000071e 	andeq	r0, r0, lr, lsl r7
    1730:	5b040202 	blpl	101f40 <startup-0x1fefe0c0>
    1734:	04000000 	streq	r0, [r0], #-0
    1738:	05020078 	streq	r0, [r2, #-120]	; 0xffffff88
    173c:	00000033 	andeq	r0, r0, r3, lsr r0
    1740:	00790400 	rsbseq	r0, r9, r0, lsl #8
    1744:	00330602 	eorseq	r0, r3, r2, lsl #12
    1748:	00010000 	andeq	r0, r1, r0
    174c:	00066e05 	andeq	r6, r6, r5, lsl #28
    1750:	3a070200 	bcc	1c1f58 <startup-0x1fe3e0a8>
    1754:	03000000 	movweq	r0, #0
    1758:	00000642 	andeq	r0, r0, r2, asr #12
    175c:	a2090234 	andge	r0, r9, #52, 4	; 0x40000003
    1760:	06000000 	streq	r0, [r0], -r0
    1764:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    1768:	00a20a02 	adceq	r0, r2, r2, lsl #20
    176c:	06000000 	streq	r0, [r0], -r0
    1770:	00000712 	andeq	r0, r0, r2, lsl r7
    1774:	00a20b02 	adceq	r0, r2, r2, lsl #22
    1778:	06040000 	streq	r0, [r4], -r0
    177c:	00000718 	andeq	r0, r0, r8, lsl r7
    1780:	00a20c02 	adceq	r0, r2, r2, lsl #24
    1784:	04080000 	streq	r0, [r8], #-0
    1788:	02007870 	andeq	r7, r0, #112, 16	; 0x700000
    178c:	0000a90d 	andeq	sl, r0, sp, lsl #18
    1790:	07000c00 	streq	r0, [r0, -r0, lsl #24]
    1794:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    1798:	5b080074 	blpl	201970 <startup-0x1fdfe690>
    179c:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    17a0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    17a4:	00000025 	andeq	r0, r0, r5, lsr #32
    17a8:	c7050013 	smladgt	r5, r3, r0, r0
    17ac:	02000006 	andeq	r0, r0, #6
    17b0:	0000660e 	andeq	r6, r0, lr, lsl #12
    17b4:	06c60500 	strbeq	r0, [r6], r0, lsl #10
    17b8:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    17bc:	000000cf 	andeq	r0, r0, pc, asr #1
    17c0:	0066040a 	rsbeq	r0, r6, sl, lsl #8
    17c4:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    17c8:	24000006 	strcs	r0, [r0], #-6
    17cc:	014e1002 	cmpeq	lr, r2
    17d0:	67040000 	strvs	r0, [r4, -r0]
    17d4:	02006f65 	andeq	r6, r0, #404	; 0x194
    17d8:	0000c411 	andeq	ip, r0, r1, lsl r4
    17dc:	d5060000 	strle	r0, [r6, #-0]
    17e0:	02000006 	andeq	r0, r0, #6
    17e4:	0000a212 	andeq	sl, r0, r2, lsl r2
    17e8:	da060400 	ble	1827f0 <startup-0x1fe7d810>
    17ec:	02000006 	andeq	r0, r0, #6
    17f0:	0000a212 	andeq	sl, r0, r2, lsl r2
    17f4:	aa060800 	bge	1837fc <startup-0x1fe7c804>
    17f8:	02000006 	andeq	r0, r0, #6
    17fc:	0000a213 	andeq	sl, r0, r3, lsl r2
    1800:	af060c00 	svcge	0x00060c00
    1804:	02000006 	andeq	r0, r0, #6
    1808:	0000a213 	andeq	sl, r0, r3, lsl r2
    180c:	0d061000 	stceq	0, cr1, [r6, #-0]
    1810:	02000007 	andeq	r0, r0, #7
    1814:	00015f14 	andeq	r5, r1, r4, lsl pc
    1818:	09061400 	stmdbeq	r6, {sl, ip}
    181c:	02000008 	andeq	r0, r0, #8
    1820:	00015f15 	andeq	r5, r1, r5, lsl pc
    1824:	69061800 	stmdbvs	r6, {fp, ip}
    1828:	02000006 	andeq	r0, r0, #6
    182c:	00015f16 	andeq	r5, r1, r6, lsl pc
    1830:	4c061c00 	stcmi	12, cr1, [r6], {-0}
    1834:	02000006 	andeq	r0, r0, #6
    1838:	00017a17 	andeq	r7, r1, r7, lsl sl
    183c:	0b002000 	bleq	9844 <startup-0x1fff67bc>
    1840:	00000159 	andeq	r0, r0, r9, asr r1
    1844:	0001590c 	andeq	r5, r1, ip, lsl #18
    1848:	040a0000 	streq	r0, [sl], #-0
    184c:	000000d5 	ldrdeq	r0, [r0], -r5
    1850:	014e040a 	cmpeq	lr, sl, lsl #8
    1854:	7a0b0000 	bvc	2c185c <startup-0x1fd3e7a4>
    1858:	0c000001 	stceq	0, cr0, [r0], {1}
    185c:	00000159 	andeq	r0, r0, r9, asr r1
    1860:	0000a20c 	andeq	sl, r0, ip, lsl #4
    1864:	00a20c00 	adceq	r0, r2, r0, lsl #24
    1868:	0a000000 	beq	1870 <startup-0x1fffe790>
    186c:	00016504 	andeq	r6, r1, r4, lsl #10
    1870:	06bf0500 	ldrteq	r0, [pc], r0, lsl #10
    1874:	18020000 	stmdane	r2, {}	; <UNPREDICTABLE>
    1878:	000000d5 	ldrdeq	r0, [r0], -r5
    187c:	0006be05 	andeq	fp, r6, r5, lsl #28
    1880:	59180200 	ldmdbpl	r8, {r9}
    1884:	0d000001 	stceq	0, cr0, [r0, #-4]
    1888:	00000743 	andeq	r0, r0, r3, asr #14
    188c:	00b90401 	adcseq	r0, r9, r1, lsl #8
    1890:	03050000 	movweq	r0, #20480	; 0x5000
    1894:	20000b24 	andcs	r0, r0, r4, lsr #22
    1898:	0006d00d 	andeq	sp, r6, sp
    189c:	803c0100 	eorshi	r0, ip, r0, lsl #2
    18a0:	05000001 	streq	r0, [r0, #-1]
    18a4:	000b5803 	andeq	r5, fp, r3, lsl #16
    18a8:	072a0e20 	streq	r0, [sl, -r0, lsr #28]!
    18ac:	23010000 	movwcs	r0, #4096	; 0x1000
    18b0:	200004bc 			; <UNDEFINED> instruction: 0x200004bc
    18b4:	000000e8 	andeq	r0, r0, r8, ror #1
    18b8:	01dc9c01 	bicseq	r9, ip, r1, lsl #24
    18bc:	2f0f0000 	svccs	0x000f0000
    18c0:	01000007 	tsteq	r0, r7
    18c4:	00018b23 	andeq	r8, r1, r3, lsr #22
    18c8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    18cc:	079f0e00 	ldreq	r0, [pc, r0, lsl #28]
    18d0:	1c010000 	stcne	0, cr0, [r1], {-0}
    18d4:	20000460 	andcs	r0, r0, r0, ror #8
    18d8:	0000005c 	andeq	r0, r0, ip, asr r0
    18dc:	022b9c01 	eoreq	r9, fp, #256	; 0x100
    18e0:	6f100000 	svcvs	0x00100000
    18e4:	8b1c0100 	blhi	701cec <startup-0x1f8fe314>
    18e8:	02000001 	andeq	r0, r0, #1
    18ec:	68116c91 	ldmdavs	r1, {r0, r4, r7, sl, fp, sp, lr}
    18f0:	4c200004 	stcmi	0, cr0, [r0], #-16
    18f4:	12000000 	andne	r0, r0, #0
    18f8:	1d010069 	stcne	0, cr0, [r1, #-420]	; 0xfffffe5c
    18fc:	000000a2 	andeq	r0, r0, r2, lsr #1
    1900:	11749102 	cmnne	r4, r2, lsl #2
    1904:	2000046e 	andcs	r0, r0, lr, ror #8
    1908:	00000034 	andeq	r0, r0, r4, lsr r0
    190c:	00073d13 	andeq	r3, r7, r3, lsl sp
    1910:	a2180100 	andsge	r0, r8, #0, 2
    1914:	14000000 	strne	r0, [r0], #-0
    1918:	00000000 	andeq	r0, r0, r0
    191c:	0007ac0e 	andeq	sl, r7, lr, lsl #24
    1920:	04160100 	ldreq	r0, [r6], #-256	; 0xffffff00
    1924:	5c200004 	stcpl	0, cr0, [r0], #-16
    1928:	01000000 	mrseq	r0, (UNDEF: 0)
    192c:	00027a9c 	muleq	r2, ip, sl
    1930:	006f1000 	rsbeq	r1, pc, r0
    1934:	018b1601 	orreq	r1, fp, r1, lsl #12
    1938:	91020000 	mrsls	r0, (UNDEF: 2)
    193c:	040c116c 	streq	r1, [ip], #-364	; 0xfffffe94
    1940:	004c2000 	subeq	r2, ip, r0
    1944:	69120000 	ldmdbvs	r2, {}	; <UNPREDICTABLE>
    1948:	a2170100 	andsge	r0, r7, #0, 2
    194c:	02000000 	andeq	r0, r0, #0
    1950:	12117491 	andsne	r7, r1, #-1862270976	; 0x91000000
    1954:	34200004 	strtcc	r0, [r0], #-4
    1958:	13000000 	movwne	r0, #0
    195c:	0000073d 	andeq	r0, r0, sp, lsr r7
    1960:	00a21801 	adceq	r1, r2, r1, lsl #16
    1964:	00140000 	andseq	r0, r4, r0
    1968:	15000000 	strne	r0, [r0, #-0]
    196c:	0000078e 	andeq	r0, r0, lr, lsl #15
    1970:	03e41101 	mvneq	r1, #1073741824	; 0x40000000
    1974:	00202000 	eoreq	r2, r0, r0
    1978:	9c010000 	stcls	0, cr0, [r1], {-0}
    197c:	01006f10 	tsteq	r0, r0, lsl pc
    1980:	00018b11 	andeq	r8, r1, r1, lsl fp
    1984:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1988:	0007510f 	andeq	r5, r7, pc, lsl #2
    198c:	a2110100 	andsge	r0, r1, #0, 2
    1990:	02000000 	andeq	r0, r0, #0
    1994:	360f7091 			; <UNDEFINED> instruction: 0x360f7091
    1998:	01000007 	tsteq	r0, r7
    199c:	0000a211 	andeq	sl, r0, r1, lsl r2
    19a0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    19a4:	03660000 	cmneq	r6, #0
    19a8:	00040000 	andeq	r0, r4, r0
    19ac:	0000062b 	andeq	r0, r0, fp, lsr #12
    19b0:	00120104 	andseq	r0, r2, r4, lsl #2
    19b4:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    19b8:	7d000008 	stcvc	0, cr0, [r0, #-32]	; 0xffffffe0
    19bc:	a4000002 	strge	r0, [r0], #-2
    19c0:	74200005 	strtvc	r0, [r0], #-5
    19c4:	25000005 	strcs	r0, [r0, #-5]
    19c8:	02000005 	andeq	r0, r0, #5
    19cc:	b2210218 	eorlt	r0, r1, #24, 4	; 0x80000001
    19d0:	03000000 	movweq	r0, #0
    19d4:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    19d8:	00b22202 	adcseq	r2, r2, r2, lsl #4
    19dc:	03000000 	movweq	r0, #0
    19e0:	000000ae 	andeq	r0, r0, lr, lsr #1
    19e4:	00b92302 	adcseq	r2, r9, r2, lsl #6
    19e8:	03040000 	movweq	r0, #16384	; 0x4000
    19ec:	000002db 	ldrdeq	r0, [r0], -fp
    19f0:	00b92402 	adcseq	r2, r9, r2, lsl #8
    19f4:	03060000 	movweq	r0, #24576	; 0x6000
    19f8:	00000239 	andeq	r0, r0, r9, lsr r2
    19fc:	00b22502 	adcseq	r2, r2, r2, lsl #10
    1a00:	03080000 	movweq	r0, #32768	; 0x8000
    1a04:	000000f5 	strdeq	r0, [r0], -r5
    1a08:	00b22602 	adcseq	r2, r2, r2, lsl #12
    1a0c:	030c0000 	movweq	r0, #49152	; 0xc000
    1a10:	000001cd 	andeq	r0, r0, sp, asr #3
    1a14:	00c02702 	sbceq	r2, r0, r2, lsl #14
    1a18:	03100000 	tsteq	r0, #0
    1a1c:	0000009b 	muleq	r0, fp, r0
    1a20:	00c02802 	sbceq	r2, r0, r2, lsl #16
    1a24:	03110000 	tsteq	r1, #0
    1a28:	00000546 	andeq	r0, r0, r6, asr #10
    1a2c:	00b92902 	adcseq	r2, r9, r2, lsl #18
    1a30:	03120000 	tsteq	r2, #0
    1a34:	0000031f 	andeq	r0, r0, pc, lsl r3
    1a38:	00c02a02 	sbceq	r2, r0, r2, lsl #20
    1a3c:	03140000 	tsteq	r4, #0
    1a40:	00000115 	andeq	r0, r0, r5, lsl r1
    1a44:	00c02b02 	sbceq	r2, r0, r2, lsl #22
    1a48:	03150000 	tsteq	r5, #0
    1a4c:	00000455 	andeq	r0, r0, r5, asr r4
    1a50:	00b92c02 	adcseq	r2, r9, r2, lsl #24
    1a54:	00160000 	andseq	r0, r6, r0
    1a58:	df070404 	svcle	0x00070404
    1a5c:	04000000 	streq	r0, [r0], #-0
    1a60:	02480702 	subeq	r0, r8, #524288	; 0x80000
    1a64:	01040000 	mrseq	r0, (UNDEF: 4)
    1a68:	00033408 	andeq	r3, r3, r8, lsl #8
    1a6c:	052e0500 	streq	r0, [lr, #-1280]!	; 0xfffffb00
    1a70:	2d020000 	stccs	0, cr0, [r2, #-0]
    1a74:	00000025 	andeq	r0, r0, r5, lsr #32
    1a78:	00073d06 	andeq	r3, r7, r6, lsl #26
    1a7c:	489a0100 	ldmmi	sl, {r8}
    1a80:	d0200009 	eorle	r0, r0, r9
    1a84:	01000001 	tsteq	r0, r1
    1a88:	0001549c 	muleq	r1, ip, r4
    1a8c:	00780700 	rsbseq	r0, r8, r0, lsl #14
    1a90:	00c09a01 	sbceq	r9, r0, r1, lsl #20
    1a94:	91020000 	mrsls	r0, (UNDEF: 2)
    1a98:	0079075f 	rsbseq	r0, r9, pc, asr r7
    1a9c:	00c09a01 	sbceq	r9, r0, r1, lsl #20
    1aa0:	91020000 	mrsls	r0, (UNDEF: 2)
    1aa4:	6573075e 	ldrbvs	r0, [r3, #-1886]!	; 0xfffff8a2
    1aa8:	9a010074 	bls	41c80 <startup-0x1ffbe380>
    1aac:	000000c0 	andeq	r0, r0, r0, asr #1
    1ab0:	085d9102 	ldmdaeq	sp, {r1, r8, ip, pc}^
    1ab4:	00000892 	muleq	r0, r2, r8
    1ab8:	00c09f01 	sbceq	r9, r0, r1, lsl #30
    1abc:	91020000 	mrsls	r0, (UNDEF: 2)
    1ac0:	08240864 	stmdaeq	r4!, {r2, r5, r6, fp}
    1ac4:	a0010000 	andge	r0, r1, r0
    1ac8:	000000c0 	andeq	r0, r0, r0, asr #1
    1acc:	08679102 	stmdaeq	r7!, {r1, r8, ip, pc}^
    1ad0:	000007bf 			; <UNDEFINED> instruction: 0x000007bf
    1ad4:	00c0a101 	sbceq	sl, r0, r1, lsl #2
    1ad8:	91020000 	mrsls	r0, (UNDEF: 2)
    1adc:	07ca0866 	strbeq	r0, [sl, r6, ror #16]
    1ae0:	a2010000 	andge	r0, r1, #0
    1ae4:	000000c0 	andeq	r0, r0, r0, asr #1
    1ae8:	08659102 	stmdaeq	r5!, {r1, r8, ip, pc}^
    1aec:	000007f3 	strdeq	r0, [r0], -r3
    1af0:	00c0cd01 	sbceq	ip, r0, r1, lsl #26
    1af4:	91020000 	mrsls	r0, (UNDEF: 2)
    1af8:	df060063 	svcle	0x00060063
    1afc:	01000006 	tsteq	r0, r6
    1b00:	0008f090 	muleq	r8, r0, r0
    1b04:	00005820 	andeq	r5, r0, r0, lsr #16
    1b08:	969c0100 	ldrls	r0, [ip], r0, lsl #2
    1b0c:	09000001 	stmdbeq	r0, {r0}
    1b10:	200008f6 	strdcs	r0, [r0], -r6
    1b14:	0000004a 	andeq	r0, r0, sl, asr #32
    1b18:	0100690a 	tsteq	r0, sl, lsl #18
    1b1c:	00019691 	muleq	r1, r1, r6
    1b20:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1b24:	00091a09 	andeq	r1, r9, r9, lsl #20
    1b28:	00001a20 	andeq	r1, r0, r0, lsr #20
    1b2c:	00770a00 	rsbseq	r0, r7, r0, lsl #20
    1b30:	01969401 	orrseq	r9, r6, r1, lsl #8
    1b34:	91020000 	mrsls	r0, (UNDEF: 2)
    1b38:	00000070 	andeq	r0, r0, r0, ror r0
    1b3c:	6905040b 	stmdbvs	r5, {r0, r1, r3, sl}
    1b40:	0600746e 	streq	r7, [r0], -lr, ror #8
    1b44:	00000656 	andeq	r0, r0, r6, asr r6
    1b48:	089a8201 	ldmeq	sl, {r0, r9, pc}
    1b4c:	00562000 	subseq	r2, r6, r0
    1b50:	9c010000 	stcls	0, cr0, [r1], {-0}
    1b54:	000001d1 	ldrdeq	r0, [r0], -r1
    1b58:	0005e00c 	andeq	lr, r5, ip
    1b5c:	96840100 	strls	r0, [r4], r0, lsl #2
    1b60:	c3000001 	movwgt	r0, #1
    1b64:	0d000001 	stceq	0, cr0, [r0, #-4]
    1b68:	05d40e00 	ldrbeq	r0, [r4, #3584]	; 0xe00
    1b6c:	86010000 	strhi	r0, [r1], -r0
    1b70:	00000196 	muleq	r0, r6, r1
    1b74:	0f00000d 	svceq	0x0000000d
    1b78:	000007d3 	ldrdeq	r0, [r0], -r3
    1b7c:	00c07d01 	sbceq	r7, r0, r1, lsl #26
    1b80:	08700000 	ldmdaeq	r0!, {}^	; <UNPREDICTABLE>
    1b84:	002a2000 	eoreq	r2, sl, r0
    1b88:	9c010000 	stcls	0, cr0, [r1], {-0}
    1b8c:	000001f9 	strdeq	r0, [r0], -r9
    1b90:	0007bf10 	andeq	fp, r7, r0, lsl pc
    1b94:	c07d0100 	rsbsgt	r0, sp, r0, lsl #2
    1b98:	02000000 	andeq	r0, r0, #0
    1b9c:	06007791 			; <UNDEFINED> instruction: 0x06007791
    1ba0:	0000086c 	andeq	r0, r0, ip, ror #16
    1ba4:	082a7501 	stmdaeq	sl!, {r0, r8, sl, ip, sp, lr}
    1ba8:	00462000 	subeq	r2, r6, r0
    1bac:	9c010000 	stcls	0, cr0, [r1], {-0}
    1bb0:	0000022b 	andeq	r0, r0, fp, lsr #4
    1bb4:	0007e010 	andeq	lr, r7, r0, lsl r0
    1bb8:	c0750100 	rsbsgt	r0, r5, r0, lsl #2
    1bbc:	02000000 	andeq	r0, r0, #0
    1bc0:	bf107791 	svclt	0x00107791
    1bc4:	01000007 	tsteq	r0, r7
    1bc8:	0000c075 	andeq	ip, r0, r5, ror r0
    1bcc:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    1bd0:	08a50600 	stmiaeq	r5!, {r9, sl}
    1bd4:	6d010000 	stcvs	0, cr0, [r1, #-0]
    1bd8:	200007e4 	andcs	r0, r0, r4, ror #15
    1bdc:	00000046 	andeq	r0, r0, r6, asr #32
    1be0:	025d9c01 	subseq	r9, sp, #256	; 0x100
    1be4:	b3100000 	tstlt	r0, #0
    1be8:	01000008 	tsteq	r0, r8
    1bec:	0000c06d 	andeq	ip, r0, sp, rrx
    1bf0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1bf4:	0007bf10 	andeq	fp, r7, r0, lsl pc
    1bf8:	c06d0100 	rsbgt	r0, sp, r0, lsl #2
    1bfc:	02000000 	andeq	r0, r0, #0
    1c00:	06007691 			; <UNDEFINED> instruction: 0x06007691
    1c04:	000007e5 	andeq	r0, r0, r5, ror #15
    1c08:	07645701 	strbeq	r5, [r4, -r1, lsl #14]!
    1c0c:	00802000 	addeq	r2, r0, r0
    1c10:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c14:	0000029c 	muleq	r0, ip, r2
    1c18:	00043810 	andeq	r3, r4, r0, lsl r8
    1c1c:	c0570100 	subsgt	r0, r7, r0, lsl #2
    1c20:	02000000 	andeq	r0, r0, #0
    1c24:	bf107791 	svclt	0x00107791
    1c28:	01000007 	tsteq	r0, r7
    1c2c:	0000c057 	andeq	ip, r0, r7, asr r0
    1c30:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    1c34:	0005f80e 	andeq	pc, r5, lr, lsl #16
    1c38:	962f0100 	strtls	r0, [pc], -r0, lsl #2
    1c3c:	0d000001 	stceq	0, cr0, [r0, #-4]
    1c40:	980f0000 	stmdals	pc, {}	; <UNPREDICTABLE>
    1c44:	01000008 	tsteq	r0, r8
    1c48:	0000c03e 	andeq	ip, r0, lr, lsr r0
    1c4c:	0006d000 	andeq	sp, r6, r0
    1c50:	00009420 	andeq	r9, r0, r0, lsr #8
    1c54:	e29c0100 	adds	r0, ip, #0, 2
    1c58:	10000002 	andne	r0, r0, r2
    1c5c:	000007bf 			; <UNDEFINED> instruction: 0x000007bf
    1c60:	00c03e01 	sbceq	r3, r0, r1, lsl #28
    1c64:	91020000 	mrsls	r0, (UNDEF: 2)
    1c68:	05f80c6f 	ldrbeq	r0, [r8, #3183]!	; 0xc6f
    1c6c:	2f010000 	svccs	0x00010000
    1c70:	00000196 	muleq	r0, r6, r1
    1c74:	000002d4 	ldrdeq	r0, [r0], -r4
    1c78:	520a000d 	andpl	r0, sl, #13
    1c7c:	48010056 	stmdami	r1, {r1, r2, r4, r6}
    1c80:	000000c0 	andeq	r0, r0, r0, asr #1
    1c84:	00779102 	rsbseq	r9, r7, r2, lsl #2
    1c88:	00087f06 	andeq	r7, r8, r6, lsl #30
    1c8c:	70290100 	eorvc	r0, r9, r0, lsl #2
    1c90:	60200006 	eorvs	r0, r0, r6
    1c94:	01000000 	mrseq	r0, (UNDEF: 0)
    1c98:	0003059c 	muleq	r3, ip, r5
    1c9c:	05f80e00 	ldrbeq	r0, [r8, #3584]!	; 0xe00
    1ca0:	2f010000 	svccs	0x00010000
    1ca4:	00000196 	muleq	r0, r6, r1
    1ca8:	0600000d 	streq	r0, [r0], -sp
    1cac:	000007b8 			; <UNDEFINED> instruction: 0x000007b8
    1cb0:	06100f01 	ldreq	r0, [r0], -r1, lsl #30
    1cb4:	00602000 	rsbeq	r2, r0, r0
    1cb8:	9c010000 	stcls	0, cr0, [r1], {-0}
    1cbc:	00000329 	andeq	r0, r0, r9, lsr #6
    1cc0:	0007bf10 	andeq	fp, r7, r0, lsl pc
    1cc4:	c00f0100 	andgt	r0, pc, r0, lsl #2
    1cc8:	02000000 	andeq	r0, r0, #0
    1ccc:	11007791 			; <UNDEFINED> instruction: 0x11007791
    1cd0:	000007f8 	strdeq	r0, [r0], -r8
    1cd4:	05dc0901 	ldrbeq	r0, [ip, #2305]	; 0x901
    1cd8:	00342000 	eorseq	r2, r4, r0
    1cdc:	9c010000 	stcls	0, cr0, [r1], {-0}
    1ce0:	0000034b 	andeq	r0, r0, fp, asr #6
    1ce4:	01007807 	tsteq	r0, r7, lsl #16
    1ce8:	0000c009 	andeq	ip, r0, r9
    1cec:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1cf0:	080f1200 	stmdaeq	pc, {r9, ip}	; <UNPREDICTABLE>
    1cf4:	03010000 	movweq	r0, #4096	; 0x1000
    1cf8:	200005a4 	andcs	r0, r0, r4, lsr #11
    1cfc:	00000038 	andeq	r0, r0, r8, lsr r0
    1d00:	78079c01 	stmdavc	r7, {r0, sl, fp, ip, pc}
    1d04:	c0030100 	andgt	r0, r3, r0, lsl #2
    1d08:	02000000 	andeq	r0, r0, #0
    1d0c:	00007791 	muleq	r0, r1, r7

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0024 	bleq	2c00ac <startup-0x1fd3ff54>
  18:	0e030b3e 	vmoveq.16	d3[0], r0
  1c:	24030000 	strcs	r0, [r3], #-0
  20:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  24:	0008030b 	andeq	r0, r8, fp, lsl #6
  28:	000f0400 	andeq	r0, pc, r0, lsl #8
  2c:	00000b0b 	andeq	r0, r0, fp, lsl #22
  30:	03001605 	movweq	r1, #1541	; 0x605
  34:	3b0b3a0e 	blcc	2ce874 <startup-0x1fd3178c>
  38:	0013490b 	andseq	r4, r3, fp, lsl #18
  3c:	000f0600 	andeq	r0, pc, r0, lsl #12
  40:	13490b0b 	movtne	r0, #39691	; 0x9b0b
  44:	13070000 	movwne	r0, #28672	; 0x7000
  48:	3c0e0300 	stccc	3, cr0, [lr], {-0}
  4c:	08000019 	stmdaeq	r0, {r0, r3, r4}
  50:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  54:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  58:	00001349 	andeq	r1, r0, r9, asr #6
  5c:	0b011709 	bleq	45c88 <startup-0x1ffba378>
  60:	3b0b3a0b 	blcc	2ce894 <startup-0x1fd3176c>
  64:	0013010b 	andseq	r0, r3, fp, lsl #2
  68:	000d0a00 	andeq	r0, sp, r0, lsl #20
  6c:	0b3a0e03 	bleq	e83880 <startup-0x1f17c780>
  70:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  74:	010b0000 	mrseq	r0, (UNDEF: 11)
  78:	01134901 	tsteq	r3, r1, lsl #18
  7c:	0c000013 	stceq	0, cr0, [r0], {19}
  80:	13490021 	movtne	r0, #36897	; 0x9021
  84:	00000b2f 	andeq	r0, r0, pc, lsr #22
  88:	0b01130d 	bleq	44cc4 <startup-0x1ffbb33c>
  8c:	3b0b3a0b 	blcc	2ce8c0 <startup-0x1fd31740>
  90:	0013010b 	andseq	r0, r3, fp, lsl #2
  94:	000d0e00 	andeq	r0, sp, r0, lsl #28
  98:	0b3a0e03 	bleq	e838ac <startup-0x1f17c754>
  9c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  a0:	00000b38 	andeq	r0, r0, r8, lsr fp
  a4:	0301130f 	movweq	r1, #4879	; 0x130f
  a8:	3a0b0b0e 	bcc	2c2ce8 <startup-0x1fd3d318>
  ac:	010b3b0b 	tsteq	fp, fp, lsl #22
  b0:	10000013 	andne	r0, r0, r3, lsl r0
  b4:	0803000d 	stmdaeq	r3, {r0, r2, r3}
  b8:	0b3b0b3a 	bleq	ec2da8 <startup-0x1f13d258>
  bc:	0b381349 	bleq	e04de8 <startup-0x1f1fb218>
  c0:	13110000 	tstne	r1, #0
  c4:	0b0e0301 	bleq	380cd0 <startup-0x1fc7f330>
  c8:	3b0b3a05 	blcc	2ce8e4 <startup-0x1fd3171c>
  cc:	0013010b 	andseq	r0, r3, fp, lsl #2
  d0:	000d1200 	andeq	r1, sp, r0, lsl #4
  d4:	0b3a0e03 	bleq	e838e8 <startup-0x1f17c718>
  d8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  dc:	00000538 	andeq	r0, r0, r8, lsr r5
  e0:	27001513 	smladcs	r0, r3, r5, r1
  e4:	14000019 	strne	r0, [r0], #-25	; 0xffffffe7
  e8:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
  ec:	13011349 	movwne	r1, #4937	; 0x1349
  f0:	05150000 	ldreq	r0, [r5, #-0]
  f4:	00134900 	andseq	r4, r3, r0, lsl #18
  f8:	00261600 	eoreq	r1, r6, r0, lsl #12
  fc:	00001349 	andeq	r1, r0, r9, asr #6
 100:	03011317 	movweq	r1, #4887	; 0x1317
 104:	3a050b0e 	bcc	142d44 <startup-0x1febd2bc>
 108:	01053b0b 	tsteq	r5, fp, lsl #22
 10c:	18000013 	stmdane	r0, {r0, r1, r4}
 110:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 114:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 118:	0b381349 	bleq	e04e44 <startup-0x1f1fb1bc>
 11c:	0d190000 	ldceq	0, cr0, [r9, #-0]
 120:	3a0e0300 	bcc	380d28 <startup-0x1fc7f2d8>
 124:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 128:	00053813 	andeq	r3, r5, r3, lsl r8
 12c:	01131a00 	tsteq	r3, r0, lsl #20
 130:	0b0b0e03 	bleq	2c3944 <startup-0x1fd3c6bc>
 134:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 138:	00001301 	andeq	r1, r0, r1, lsl #6
 13c:	0b01131b 	bleq	44db0 <startup-0x1ffbb250>
 140:	3b0b3a0b 	blcc	2ce974 <startup-0x1fd3168c>
 144:	00130105 	andseq	r0, r3, r5, lsl #2
 148:	01171c00 	tsteq	r7, r0, lsl #24
 14c:	0b3a0b0b 	bleq	e82d80 <startup-0x1f17d280>
 150:	1301053b 	movwne	r0, #5435	; 0x153b
 154:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
 158:	3a0e0300 	bcc	380d60 <startup-0x1fc7f2a0>
 15c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 160:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
 164:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
 168:	00001301 	andeq	r1, r0, r1, lsl #6
 16c:	0300341f 	movweq	r3, #1055	; 0x41f
 170:	3b0b3a0e 	blcc	2ce9b0 <startup-0x1fd31650>
 174:	3f134905 	svccc	0x00134905
 178:	00193c19 	andseq	r3, r9, r9, lsl ip
 17c:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
 180:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 184:	0b3b0b3a 	bleq	ec2e74 <startup-0x1f13d18c>
 188:	13491927 	movtne	r1, #39207	; 0x9927
 18c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 190:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 194:	00130119 	andseq	r0, r3, r9, lsl r1
 198:	00342100 	eorseq	r2, r4, r0, lsl #2
 19c:	0b3a0803 	bleq	e821b0 <startup-0x1f17de50>
 1a0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 1a4:	00001802 	andeq	r1, r0, r2, lsl #16
 1a8:	3f012e22 	svccc	0x00012e22
 1ac:	3a0e0319 	bcc	380e18 <startup-0x1fc7f1e8>
 1b0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 1b4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 1b8:	97184006 	ldrls	r4, [r8, -r6]
 1bc:	00001942 	andeq	r1, r0, r2, asr #18
 1c0:	03000523 	movweq	r0, #1315	; 0x523
 1c4:	3b0b3a08 	blcc	2ce9ec <startup-0x1fd31614>
 1c8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1cc:	00000018 	andeq	r0, r0, r8, lsl r0
 1d0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 1d4:	030b130e 	movweq	r1, #45838	; 0xb30e
 1d8:	110e1b0e 	tstne	lr, lr, lsl #22
 1dc:	10061201 	andne	r1, r6, r1, lsl #4
 1e0:	02000017 	andeq	r0, r0, #23
 1e4:	0b0b0024 	bleq	2c027c <startup-0x1fd3fd84>
 1e8:	0e030b3e 	vmoveq.16	d3[0], r0
 1ec:	34030000 	strcc	r0, [r3], #-0
 1f0:	3a0e0300 	bcc	380df8 <startup-0x1fc7f208>
 1f4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1f8:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 1fc:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
 200:	0b0b0024 	bleq	2c0298 <startup-0x1fd3fd68>
 204:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 208:	35050000 	strcc	r0, [r5, #-0]
 20c:	00134900 	andseq	r4, r3, r0, lsl #18
 210:	012e0600 			; <UNDEFINED> instruction: 0x012e0600
 214:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 218:	0b3b0b3a 	bleq	ec2f08 <startup-0x1f13d0f8>
 21c:	01111927 	tsteq	r1, r7, lsr #18
 220:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 224:	00194296 	mulseq	r9, r6, r2
 228:	010b0700 	tsteq	fp, r0, lsl #14
 22c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 230:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
 234:	03193f01 	tsteq	r9, #1, 30
 238:	3b0b3a0e 	blcc	2cea78 <startup-0x1fd31588>
 23c:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 240:	09000019 	stmdbeq	r0, {r0, r3, r4}
 244:	00000018 	andeq	r0, r0, r8, lsl r0
 248:	01110100 	tsteq	r1, r0, lsl #2
 24c:	0b130e25 	bleq	4c3ae8 <startup-0x1fb3c518>
 250:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 254:	06120111 			; <UNDEFINED> instruction: 0x06120111
 258:	00001710 	andeq	r1, r0, r0, lsl r7
 25c:	0b002402 	bleq	926c <startup-0x1fff6d94>
 260:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 264:	0300000e 	movweq	r0, #14
 268:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 26c:	0b3b0b3a 	bleq	ec2f5c <startup-0x1f13d0a4>
 270:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 274:	00001802 	andeq	r1, r0, r2, lsl #16
 278:	0b002404 	bleq	9290 <startup-0x1fff6d70>
 27c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 280:	05000008 	streq	r0, [r0, #-8]
 284:	13490035 	movtne	r0, #36917	; 0x9035
 288:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
 28c:	03193f01 	tsteq	r9, #1, 30
 290:	3b0b3a0e 	blcc	2cead0 <startup-0x1fd31530>
 294:	1119270b 	tstne	r9, fp, lsl #14
 298:	40061201 	andmi	r1, r6, r1, lsl #4
 29c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 2a0:	00001301 	andeq	r1, r0, r1, lsl #6
 2a4:	03000507 	movweq	r0, #1287	; 0x507
 2a8:	3b0b3a0e 	blcc	2ceae8 <startup-0x1fd31518>
 2ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 2b0:	08000018 	stmdaeq	r0, {r3, r4}
 2b4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 2b8:	0b3a0e03 	bleq	e83acc <startup-0x1f17c534>
 2bc:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 2c0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 2c4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 2c8:	09000019 	stmdbeq	r0, {r0, r3, r4}
 2cc:	08030005 	stmdaeq	r3, {r0, r2}
 2d0:	0b3b0b3a 	bleq	ec2fc0 <startup-0x1f13d040>
 2d4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 2d8:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
 2dc:	03193f00 	tsteq	r9, #0, 30
 2e0:	3b0b3a0e 	blcc	2ceb20 <startup-0x1fd314e0>
 2e4:	1119270b 	tstne	r9, fp, lsl #14
 2e8:	40061201 	andmi	r1, r6, r1, lsl #4
 2ec:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 2f0:	01000000 	mrseq	r0, (UNDEF: 0)
 2f4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 2f8:	0e030b13 	vmoveq.32	d3[0], r0
 2fc:	17550e1b 	smmlane	r5, fp, lr, r0
 300:	17100111 			; <UNDEFINED> instruction: 0x17100111
 304:	24020000 	strcs	r0, [r2], #-0
 308:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 30c:	000e030b 	andeq	r0, lr, fp, lsl #6
 310:	00240300 	eoreq	r0, r4, r0, lsl #6
 314:	0b3e0b0b 	bleq	f82f48 <startup-0x1f07d0b8>
 318:	00000803 	andeq	r0, r0, r3, lsl #16
 31c:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
 320:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
 324:	0b0b000f 	bleq	2c0368 <startup-0x1fd3fc98>
 328:	16060000 	strne	r0, [r6], -r0
 32c:	3a0e0300 	bcc	380f34 <startup-0x1fc7f0cc>
 330:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 334:	07000013 	smladeq	r0, r3, r0, r0
 338:	0b0b000f 	bleq	2c037c <startup-0x1fd3fc84>
 33c:	00001349 	andeq	r1, r0, r9, asr #6
 340:	03001308 	movweq	r1, #776	; 0x308
 344:	00193c0e 	andseq	r3, r9, lr, lsl #24
 348:	00160900 	andseq	r0, r6, r0, lsl #18
 34c:	0b3a0e03 	bleq	e83b60 <startup-0x1f17c4a0>
 350:	1349053b 	movtne	r0, #38203	; 0x953b
 354:	170a0000 	strne	r0, [sl, -r0]
 358:	3a0b0b01 	bcc	2c2f64 <startup-0x1fd3d09c>
 35c:	010b3b0b 	tsteq	fp, fp, lsl #22
 360:	0b000013 	bleq	3b4 <startup-0x1ffffc4c>
 364:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 368:	0b3b0b3a 	bleq	ec3058 <startup-0x1f13cfa8>
 36c:	00001349 	andeq	r1, r0, r9, asr #6
 370:	4901010c 	stmdbmi	r1, {r2, r3, r8}
 374:	00130113 	andseq	r0, r3, r3, lsl r1
 378:	00210d00 	eoreq	r0, r1, r0, lsl #26
 37c:	0b2f1349 	bleq	bc50a8 <startup-0x1f43af58>
 380:	130e0000 	movwne	r0, #57344	; 0xe000
 384:	3a0b0b01 	bcc	2c2f90 <startup-0x1fd3d070>
 388:	010b3b0b 	tsteq	fp, fp, lsl #22
 38c:	0f000013 	svceq	0x00000013
 390:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 394:	0b3b0b3a 	bleq	ec3084 <startup-0x1f13cf7c>
 398:	0b381349 	bleq	e050c4 <startup-0x1f1faf3c>
 39c:	13100000 	tstne	r0, #0
 3a0:	0b0e0301 	bleq	380fac <startup-0x1fc7f054>
 3a4:	3b0b3a0b 	blcc	2cebd8 <startup-0x1fd31428>
 3a8:	0013010b 	andseq	r0, r3, fp, lsl #2
 3ac:	000d1100 	andeq	r1, sp, r0, lsl #2
 3b0:	0b3a0803 	bleq	e823c4 <startup-0x1f17dc3c>
 3b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 3b8:	00000b38 	andeq	r0, r0, r8, lsr fp
 3bc:	03011312 	movweq	r1, #4882	; 0x1312
 3c0:	3a050b0e 	bcc	143000 <startup-0x1febd000>
 3c4:	010b3b0b 	tsteq	fp, fp, lsl #22
 3c8:	13000013 	movwne	r0, #19
 3cc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 3d0:	0b3b0b3a 	bleq	ec30c0 <startup-0x1f13cf40>
 3d4:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 3d8:	15140000 	ldrne	r0, [r4, #-0]
 3dc:	00192700 	andseq	r2, r9, r0, lsl #14
 3e0:	01151500 	tsteq	r5, r0, lsl #10
 3e4:	13491927 	movtne	r1, #39207	; 0x9927
 3e8:	00001301 	andeq	r1, r0, r1, lsl #6
 3ec:	49000516 	stmdbmi	r0, {r1, r2, r4, r8, sl}
 3f0:	17000013 	smladne	r0, r3, r0, r0
 3f4:	13490026 	movtne	r0, #36902	; 0x9026
 3f8:	13180000 	tstne	r8, #0
 3fc:	0b0e0301 	bleq	381008 <startup-0x1fc7eff8>
 400:	3b0b3a05 	blcc	2cec1c <startup-0x1fd313e4>
 404:	00130105 	andseq	r0, r3, r5, lsl #2
 408:	000d1900 	andeq	r1, sp, r0, lsl #18
 40c:	0b3a0e03 	bleq	e83c20 <startup-0x1f17c3e0>
 410:	1349053b 	movtne	r0, #38203	; 0x953b
 414:	00000b38 	andeq	r0, r0, r8, lsr fp
 418:	03000d1a 	movweq	r0, #3354	; 0xd1a
 41c:	3b0b3a0e 	blcc	2cec5c <startup-0x1fd313a4>
 420:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
 424:	1b000005 	blne	440 <startup-0x1ffffbc0>
 428:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 42c:	0b3a0b0b 	bleq	e83060 <startup-0x1f17cfa0>
 430:	1301053b 	movwne	r0, #5435	; 0x153b
 434:	131c0000 	tstne	ip, #0
 438:	3a0b0b01 	bcc	2c3044 <startup-0x1fd3cfbc>
 43c:	01053b0b 	tsteq	r5, fp, lsl #22
 440:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
 444:	0b0b0117 	bleq	2c08a8 <startup-0x1fd3f758>
 448:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 44c:	00001301 	andeq	r1, r0, r1, lsl #6
 450:	03000d1e 	movweq	r0, #3358	; 0xd1e
 454:	3b0b3a0e 	blcc	2cec94 <startup-0x1fd3136c>
 458:	00134905 	andseq	r4, r3, r5, lsl #18
 45c:	01151f00 	tsteq	r5, r0, lsl #30
 460:	13011927 	movwne	r1, #6439	; 0x1927
 464:	34200000 	strtcc	r0, [r0], #-0
 468:	3a0e0300 	bcc	381070 <startup-0x1fc7ef90>
 46c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 470:	3c193f13 	ldccc	15, cr3, [r9], {19}
 474:	21000019 	tstcs	r0, r9, lsl r0
 478:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 47c:	0b3b0b3a 	bleq	ec316c <startup-0x1f13ce94>
 480:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 484:	00001802 	andeq	r1, r0, r2, lsl #16
 488:	03003422 	movweq	r3, #1058	; 0x422
 48c:	3b0b3a0e 	blcc	2ceccc <startup-0x1fd31334>
 490:	3f13490b 	svccc	0x0013490b
 494:	00193c19 	andseq	r3, r9, r9, lsl ip
 498:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
 49c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 4a0:	0b3b0b3a 	bleq	ec3190 <startup-0x1f13ce70>
 4a4:	01111927 	tsteq	r1, r7, lsr #18
 4a8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 4ac:	01194296 			; <UNDEFINED> instruction: 0x01194296
 4b0:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
 4b4:	08030034 	stmdaeq	r3, {r2, r4, r5}
 4b8:	0b3b0b3a 	bleq	ec31a8 <startup-0x1f13ce58>
 4bc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 4c0:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
 4c4:	03193f01 	tsteq	r9, #1, 30
 4c8:	3b0b3a0e 	blcc	2ced08 <startup-0x1fd312f8>
 4cc:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 4d0:	00130119 	andseq	r0, r3, r9, lsl r1
 4d4:	00182600 	andseq	r2, r8, r0, lsl #12
 4d8:	0b270000 	bleq	9c04e0 <startup-0x1f63fb20>
 4dc:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 4e0:	28000006 	stmdacs	r0, {r1, r2}
 4e4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 4e8:	0b3a0e03 	bleq	e83cfc <startup-0x1f17c304>
 4ec:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 4f0:	0000193c 	andeq	r1, r0, ip, lsr r9
 4f4:	3f002e29 	svccc	0x00002e29
 4f8:	3a0e0319 	bcc	381164 <startup-0x1fc7ee9c>
 4fc:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 500:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 504:	97184006 	ldrls	r4, [r8, -r6]
 508:	00001942 	andeq	r1, r0, r2, asr #18
 50c:	01110100 	tsteq	r1, r0, lsl #2
 510:	0b130e25 	bleq	4c3dac <startup-0x1fb3c254>
 514:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 518:	06120111 			; <UNDEFINED> instruction: 0x06120111
 51c:	00001710 	andeq	r1, r0, r0, lsl r7
 520:	0b002402 	bleq	9530 <startup-0x1fff6ad0>
 524:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 528:	0300000e 	movweq	r0, #14
 52c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 530:	0b3a0b0b 	bleq	e83164 <startup-0x1f17ce9c>
 534:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 538:	0d040000 	stceq	0, cr0, [r4, #-0]
 53c:	3a080300 	bcc	201144 <startup-0x1fdfeebc>
 540:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 544:	000b3813 	andeq	r3, fp, r3, lsl r8
 548:	00160500 	andseq	r0, r6, r0, lsl #10
 54c:	0b3a0e03 	bleq	e83d60 <startup-0x1f17c2a0>
 550:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 554:	0d060000 	stceq	0, cr0, [r6, #-0]
 558:	3a0e0300 	bcc	381160 <startup-0x1fc7eea0>
 55c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 560:	000b3813 	andeq	r3, fp, r3, lsl r8
 564:	00240700 	eoreq	r0, r4, r0, lsl #14
 568:	0b3e0b0b 	bleq	f8319c <startup-0x1f07ce64>
 56c:	00000803 	andeq	r0, r0, r3, lsl #16
 570:	49010108 	stmdbmi	r1, {r3, r8}
 574:	00130113 	andseq	r0, r3, r3, lsl r1
 578:	00210900 	eoreq	r0, r1, r0, lsl #18
 57c:	0b2f1349 	bleq	bc52a8 <startup-0x1f43ad58>
 580:	0f0a0000 	svceq	0x000a0000
 584:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 588:	0b000013 	bleq	5dc <startup-0x1ffffa24>
 58c:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
 590:	00001301 	andeq	r1, r0, r1, lsl #6
 594:	4900050c 	stmdbmi	r0, {r2, r3, r8, sl}
 598:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 59c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 5a0:	0b3b0b3a 	bleq	ec3290 <startup-0x1f13cd70>
 5a4:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 5a8:	00001802 	andeq	r1, r0, r2, lsl #16
 5ac:	3f012e0e 	svccc	0x00012e0e
 5b0:	3a0e0319 	bcc	38121c <startup-0x1fc7ede4>
 5b4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 5b8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 5bc:	96184006 	ldrls	r4, [r8], -r6
 5c0:	13011942 	movwne	r1, #6466	; 0x1942
 5c4:	050f0000 	streq	r0, [pc, #-0]	; 5cc <startup-0x1ffffa34>
 5c8:	3a0e0300 	bcc	3811d0 <startup-0x1fc7ee30>
 5cc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5d0:	00180213 	andseq	r0, r8, r3, lsl r2
 5d4:	00051000 	andeq	r1, r5, r0
 5d8:	0b3a0803 	bleq	e825ec <startup-0x1f17da14>
 5dc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 5e0:	00001802 	andeq	r1, r0, r2, lsl #16
 5e4:	11010b11 	tstne	r1, r1, lsl fp
 5e8:	00061201 	andeq	r1, r6, r1, lsl #4
 5ec:	00341200 	eorseq	r1, r4, r0, lsl #4
 5f0:	0b3a0803 	bleq	e82604 <startup-0x1f17d9fc>
 5f4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 5f8:	00001802 	andeq	r1, r0, r2, lsl #16
 5fc:	3f012e13 	svccc	0x00012e13
 600:	3a0e0319 	bcc	38126c <startup-0x1fc7ed94>
 604:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 608:	00193c13 	andseq	r3, r9, r3, lsl ip
 60c:	00181400 	andseq	r1, r8, r0, lsl #8
 610:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
 614:	03193f01 	tsteq	r9, #1, 30
 618:	3b0b3a0e 	blcc	2cee58 <startup-0x1fd311a8>
 61c:	1119270b 	tstne	r9, fp, lsl #14
 620:	40061201 	andmi	r1, r6, r1, lsl #4
 624:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 628:	01000000 	mrseq	r0, (UNDEF: 0)
 62c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 630:	0e030b13 	vmoveq.32	d3[0], r0
 634:	01110e1b 	tsteq	r1, fp, lsl lr
 638:	17100612 			; <UNDEFINED> instruction: 0x17100612
 63c:	13020000 	movwne	r0, #8192	; 0x2000
 640:	3a0b0b01 	bcc	2c324c <startup-0x1fd3cdb4>
 644:	010b3b0b 	tsteq	fp, fp, lsl #22
 648:	03000013 	movweq	r0, #19
 64c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 650:	0b3b0b3a 	bleq	ec3340 <startup-0x1f13ccc0>
 654:	0b381349 	bleq	e05380 <startup-0x1f1fac80>
 658:	24040000 	strcs	r0, [r4], #-0
 65c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 660:	000e030b 	andeq	r0, lr, fp, lsl #6
 664:	00160500 	andseq	r0, r6, r0, lsl #10
 668:	0b3a0e03 	bleq	e83e7c <startup-0x1f17c184>
 66c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 670:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
 674:	03193f01 	tsteq	r9, #1, 30
 678:	3b0b3a0e 	blcc	2ceeb8 <startup-0x1fd31148>
 67c:	1119270b 	tstne	r9, fp, lsl #14
 680:	40061201 	andmi	r1, r6, r1, lsl #4
 684:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 688:	00001301 	andeq	r1, r0, r1, lsl #6
 68c:	03000507 	movweq	r0, #1287	; 0x507
 690:	3b0b3a08 	blcc	2ceeb8 <startup-0x1fd31148>
 694:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 698:	08000018 	stmdaeq	r0, {r3, r4}
 69c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 6a0:	0b3b0b3a 	bleq	ec3390 <startup-0x1f13cc70>
 6a4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 6a8:	0b090000 	bleq	2406b0 <startup-0x1fdbf950>
 6ac:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 6b0:	0a000006 	beq	6d0 <startup-0x1ffff930>
 6b4:	08030034 	stmdaeq	r3, {r2, r4, r5}
 6b8:	0b3b0b3a 	bleq	ec33a8 <startup-0x1f13cc58>
 6bc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 6c0:	240b0000 	strcs	r0, [fp], #-0
 6c4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 6c8:	0008030b 	andeq	r0, r8, fp, lsl #6
 6cc:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
 6d0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 6d4:	0b3b0b3a 	bleq	ec33c4 <startup-0x1f13cc3c>
 6d8:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
 6dc:	00001301 	andeq	r1, r0, r1, lsl #6
 6e0:	0000180d 	andeq	r1, r0, sp, lsl #16
 6e4:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
 6e8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 6ec:	0b3b0b3a 	bleq	ec33dc <startup-0x1f13cc24>
 6f0:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
 6f4:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
 6f8:	03193f01 	tsteq	r9, #1, 30
 6fc:	3b0b3a0e 	blcc	2cef3c <startup-0x1fd310c4>
 700:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 704:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 708:	96184006 	ldrls	r4, [r8], -r6
 70c:	13011942 	movwne	r1, #6466	; 0x1942
 710:	05100000 	ldreq	r0, [r0, #-0]
 714:	3a0e0300 	bcc	38131c <startup-0x1fc7ece4>
 718:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 71c:	00180213 	andseq	r0, r8, r3, lsl r2
 720:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
 724:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 728:	0b3b0b3a 	bleq	ec3418 <startup-0x1f13cbe8>
 72c:	01111927 	tsteq	r1, r7, lsr #18
 730:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 734:	01194297 			; <UNDEFINED> instruction: 0x01194297
 738:	12000013 	andne	r0, r0, #19
 73c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 740:	0b3a0e03 	bleq	e83f54 <startup-0x1f17c0ac>
 744:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 748:	06120111 			; <UNDEFINED> instruction: 0x06120111
 74c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 750:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000174 	andeq	r0, r0, r4, ror r1
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	09ea0002 	stmibeq	sl!, {r1}^
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	20000184 	andcs	r0, r0, r4, lsl #3
  34:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	0a8d0002 	beq	fe340054 <ball+0xde33f4fc>
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	200001c0 	andcs	r0, r0, r0, asr #3
  54:	00000114 	andeq	r0, r0, r4, lsl r1
	...
  60:	00000024 	andeq	r0, r0, r4, lsr #32
  64:	0ba40002 	bleq	fe900074 <ball+0xde8ff51c>
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	200002d4 	ldrdcs	r0, [r0], -r4
  74:	00000110 	andeq	r0, r0, r0, lsl r1
  78:	20000000 	andcs	r0, r0, r0
  7c:	0000000c 	andeq	r0, r0, ip
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	16f10002 	ldrbtne	r0, [r1], r2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	200003e4 	andcs	r0, r0, r4, ror #7
  9c:	000001c0 	andeq	r0, r0, r0, asr #3
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	19a60002 	stmibne	r6!, {r1}
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	200005a4 	andcs	r0, r0, r4, lsr #11
  bc:	00000574 	andeq	r0, r0, r4, ror r5
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000019d 	muleq	r0, sp, r1
   4:	01460002 	cmpeq	r6, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  20:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
  24:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
  28:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
  2c:	616f6c6e 	cmnvs	pc, lr, ror #24
  30:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
  34:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
  38:	2f737265 	svccs	0x00737265
  3c:	2f504f4d 	svccs	0x00504f4d
  40:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
  44:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
  48:	412f0035 			; <UNDEFINED> instruction: 0x412f0035
  4c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
  50:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
  54:	2f736e6f 	svccs	0x00736e6f
  58:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
  5c:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
  60:	7070612e 	rsbsvc	r6, r0, lr, lsr #2
  64:	6e6f432f 	cdpvs	3, 6, cr4, cr15, cr15, {1}
  68:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
  6c:	68532f73 	ldmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  70:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
  74:	70707553 	rsbsvc	r7, r0, r3, asr r5
  78:	2f74726f 	svccs	0x0074726f
  7c:	6c6f6f74 	stclvs	15, cr6, [pc], #-464	; fffffeb4 <ball+0xdffff35c>
  80:	63672f73 	cmnvs	r7, #460	; 0x1cc
  84:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
  88:	72612f6d 	rsbvc	r2, r1, #436	; 0x1b4
  8c:	6f6e2d6d 	svcvs	0x006e2d6d
  90:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
  94:	2f696261 	svccs	0x00696261
  98:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
  9c:	2f656475 	svccs	0x00656475
  a0:	00737973 	rsbseq	r7, r3, r3, ror r9
  a4:	7070412f 	rsbsvc	r4, r0, pc, lsr #2
  a8:	6163696c 	cmnvs	r3, ip, ror #18
  ac:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  b0:	6f632f73 	svcvs	0x00632f73
  b4:	696c6564 	stmdbvs	ip!, {r2, r5, r6, r8, sl, sp, lr}^
  b8:	612e6574 			; <UNDEFINED> instruction: 0x612e6574
  bc:	432f7070 			; <UNDEFINED> instruction: 0x432f7070
  c0:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
  c4:	2f73746e 	svccs	0x0073746e
  c8:	72616853 	rsbvc	r6, r1, #5439488	; 0x530000
  cc:	75536465 	ldrbvc	r6, [r3, #-1125]	; 0xfffffb9b
  d0:	726f7070 	rsbvc	r7, pc, #112	; 0x70
  d4:	6f742f74 	svcvs	0x00742f74
  d8:	2f736c6f 	svccs	0x00736c6f
  dc:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  e0:	2f6d7261 	svccs	0x006d7261
  e4:	2f62696c 	svccs	0x0062696c
  e8:	2f636367 	svccs	0x00636367
  ec:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  f0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  f4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
  f8:	2e372f69 	cdpcs	15, 3, cr2, cr7, cr9, {3}
  fc:	2f312e32 	svccs	0x00312e32
 100:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 104:	00656475 	rsbeq	r6, r5, r5, ror r4
 108:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 10c:	2e646170 	mcrcs	1, 3, r6, cr4, cr0, {3}
 110:	00010063 	andeq	r0, r1, r3, rrx
 114:	636f6c00 	cmnvs	pc, #0, 24
 118:	00682e6b 	rsbeq	r2, r8, fp, ror #28
 11c:	5f000002 	svcpl	0x00000002
 120:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 124:	00682e73 	rsbeq	r2, r8, r3, ror lr
 128:	73000002 	movwvc	r0, #2
 12c:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
 130:	00682e66 	rsbeq	r2, r8, r6, ror #28
 134:	72000003 	andvc	r0, r0, #3
 138:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
 13c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 140:	65640000 	strbvs	r0, [r4, #-0]!
 144:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 148:	00682e73 	rsbeq	r2, r8, r3, ror lr
 14c:	00000001 	andeq	r0, r0, r1
 150:	10020500 	andne	r0, r2, r0, lsl #10
 154:	16200000 	strtne	r0, [r0], -r0
 158:	4b4bc967 	blmi	12f26fc <startup-0x1ed0d904>
 15c:	6a3f4b4b 	bvs	fd2e90 <startup-0x1f02d170>
 160:	59675a3d 	stmdbpl	r7!, {r0, r2, r3, r4, r5, r9, fp, ip, lr}^
 164:	003e9f68 	eorseq	r9, lr, r8, ror #30
 168:	03020402 	movweq	r0, #9218	; 0x2402
 16c:	0200c87a 	andeq	ip, r0, #7995392	; 0x7a0000
 170:	66060104 	strvs	r0, [r6], -r4, lsl #2
 174:	58090306 	stmdapl	r9, {r1, r2, r8, r9}
 178:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 17c:	3e852101 	rmfccs	f2, f5, f1
 180:	9f685967 	svcls	0x00685967
 184:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
 188:	c87a0302 	ldmdagt	sl!, {r1, r8, r9}^
 18c:	01040200 	mrseq	r0, R12_usr
 190:	03066606 	movweq	r6, #26118	; 0x6606
 194:	003d5809 	eorseq	r5, sp, r9, lsl #16
 198:	21010402 	tstcs	r1, r2, lsl #8
 19c:	01000702 	tsteq	r0, r2, lsl #14
 1a0:	00007201 	andeq	r7, r0, r1, lsl #4
 1a4:	58000200 	stmdapl	r0, {r9}
 1a8:	02000000 	andeq	r0, r0, #0
 1ac:	0d0efb01 	vstreq	d15, [lr, #-4]
 1b0:	01010100 	mrseq	r0, (UNDEF: 17)
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	01000001 	tsteq	r0, r1
 1bc:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 1c0:	6b2f7372 	blvs	bdcf90 <startup-0x1f423070>
 1c4:	61766965 	cmnvs	r6, r5, ror #18
 1c8:	6f442f6e 	svcvs	0x00442f6e
 1cc:	6f6c6e77 	svcvs	0x006c6e77
 1d0:	2f736461 	svccs	0x00736461
 1d4:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 1d8:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 1dc:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 1e0:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 1e4:	616c2f35 	cmnvs	ip, r5, lsr pc
 1e8:	00003562 	andeq	r3, r0, r2, ror #10
 1ec:	2e515249 	cdpcs	2, 5, cr5, cr1, cr9, {2}
 1f0:	00010063 	andeq	r0, r1, r3, rrx
 1f4:	6f6c6700 	svcvs	0x006c6700
 1f8:	736c6162 	cmnvc	ip, #-2147483624	; 0x80000018
 1fc:	0100682e 	tsteq	r0, lr, lsr #16
 200:	00000000 	andeq	r0, r0, r0
 204:	01840205 	orreq	r0, r4, r5, lsl #4
 208:	31162000 	tstcc	r6, r0
 20c:	324b593d 	subcc	r5, fp, #999424	; 0xf4000
 210:	0a023e1e 	beq	8fa90 <startup-0x1ff70570>
 214:	9b010100 	blls	4061c <startup-0x1ffbf9e4>
 218:	02000000 	andeq	r0, r0, #0
 21c:	00005b00 	andeq	r5, r0, r0, lsl #22
 220:	fb010200 	blx	40a2a <startup-0x1ffbf5d6>
 224:	01000d0e 	tsteq	r0, lr, lsl #26
 228:	00010101 	andeq	r0, r1, r1, lsl #2
 22c:	00010000 	andeq	r0, r1, r0
 230:	552f0100 	strpl	r0, [pc, #-256]!	; 138 <startup-0x1ffffec8>
 234:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 238:	69656b2f 	stmdbvs	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 23c:	2f6e6176 	svccs	0x006e6176
 240:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
 244:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
 248:	68432f73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 24c:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 250:	4d2f7372 	stcmi	3, cr7, [pc, #-456]!	; 90 <startup-0x1fffff70>
 254:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; 120 <startup-0x1ffffee0>
 258:	2f356261 	svccs	0x00356261
 25c:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 260:	65640000 	strbvs	r0, [r4, #-0]!
 264:	7379616c 	cmnvc	r9, #108, 2
 268:	0100632e 	tsteq	r0, lr, lsr #6
 26c:	6c670000 	stclvs	0, cr0, [r7], #-0
 270:	6c61626f 	sfmvs	f6, 2, [r1], #-444	; 0xfffffe44
 274:	00682e73 	rsbeq	r2, r8, r3, ror lr
 278:	00000001 	andeq	r0, r0, r1
 27c:	c0020500 	andgt	r0, r2, r0, lsl #10
 280:	15200001 	strne	r0, [r0, #-1]!
 284:	3d3d3d30 	ldccc	13, cr3, [sp, #-192]!	; 0xffffff40
 288:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 28c:	06200601 	strteq	r0, [r0], -r1, lsl #12
 290:	2fa03d67 	svccs	0x00a03d67
 294:	4c3e2f2f 	ldcmi	15, cr2, [lr], #-188	; 0xffffff44
 298:	2f2f2f22 	svccs	0x002f2f22
 29c:	4f4c5f29 	svcmi	0x004c5f29
 2a0:	4c5a5721 	mrrcmi	7, 2, r5, sl, cr1
 2a4:	3d3d3d2f 	ldccc	13, cr3, [sp, #-188]!	; 0xffffff44
 2a8:	4bca3e3d 	blmi	ff28fba4 <ball+0xdf28f04c>
 2ac:	393d3d3e 	ldmdbcc	sp!, {r1, r2, r3, r4, r5, r8, sl, fp, ip, sp}
 2b0:	00070224 	andeq	r0, r7, r4, lsr #4
 2b4:	01ac0101 			; <UNDEFINED> instruction: 0x01ac0101
 2b8:	00020000 	andeq	r0, r2, r0
 2bc:	00000168 	andeq	r0, r0, r8, ror #2
 2c0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 2c4:	0101000d 	tsteq	r1, sp
 2c8:	00000101 	andeq	r0, r0, r1, lsl #2
 2cc:	00000100 	andeq	r0, r0, r0, lsl #2
 2d0:	73552f01 	cmpvc	r5, #1, 30
 2d4:	2f737265 	svccs	0x00737265
 2d8:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 2dc:	442f6e61 	strtmi	r6, [pc], #-3681	; 2e4 <startup-0x1ffffd1c>
 2e0:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 2e4:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 2e8:	6168432f 	cmnvs	r8, pc, lsr #6
 2ec:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 2f0:	4f4d2f73 	svcmi	0x004d2f73
 2f4:	616c2f50 	cmnvs	ip, r0, asr pc
 2f8:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 178 <startup-0x1ffffe88>
 2fc:	00356261 	eorseq	r6, r5, r1, ror #4
 300:	7070412f 	rsbsvc	r4, r0, pc, lsr #2
 304:	6163696c 	cmnvs	r3, ip, ror #18
 308:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 30c:	6f632f73 	svcvs	0x00632f73
 310:	696c6564 	stmdbvs	ip!, {r2, r5, r6, r8, sl, sp, lr}^
 314:	612e6574 			; <UNDEFINED> instruction: 0x612e6574
 318:	432f7070 			; <UNDEFINED> instruction: 0x432f7070
 31c:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 320:	2f73746e 	svccs	0x0073746e
 324:	72616853 	rsbvc	r6, r1, #5439488	; 0x530000
 328:	75536465 	ldrbvc	r6, [r3, #-1125]	; 0xfffffb9b
 32c:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 330:	6f742f74 	svcvs	0x00742f74
 334:	2f736c6f 	svccs	0x00736c6f
 338:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
 33c:	2f6d7261 	svccs	0x006d7261
 340:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 344:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 348:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 34c:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
 350:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 354:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 358:	412f0073 			; <UNDEFINED> instruction: 0x412f0073
 35c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 360:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 364:	2f736e6f 	svccs	0x00736e6f
 368:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 36c:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
 370:	7070612e 	rsbsvc	r6, r0, lr, lsr #2
 374:	6e6f432f 	cdpvs	3, 6, cr4, cr15, cr15, {1}
 378:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 37c:	68532f73 	ldmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 380:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
 384:	70707553 	rsbsvc	r7, r0, r3, asr r5
 388:	2f74726f 	svccs	0x0074726f
 38c:	6c6f6f74 	stclvs	15, cr6, [pc], #-464	; 1c4 <startup-0x1ffffe3c>
 390:	63672f73 	cmnvs	r7, #460	; 0x1cc
 394:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
 398:	696c2f6d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp}^
 39c:	63672f62 	cmnvs	r7, #392	; 0x188
 3a0:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
 3a4:	6f6e2d6d 	svcvs	0x006e2d6d
 3a8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 3ac:	2f696261 	svccs	0x00696261
 3b0:	2e322e37 	mrccs	14, 1, r2, cr2, cr7, {1}
 3b4:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
 3b8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 3bc:	6d000065 	stcvs	0, cr0, [r0, #-404]	; 0xfffffe6c
 3c0:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
 3c4:	00010063 	andeq	r0, r1, r3, rrx
 3c8:	636f6c00 	cmnvs	pc, #0, 24
 3cc:	00682e6b 	rsbeq	r2, r8, fp, ror #28
 3d0:	5f000002 	svcpl	0x00000002
 3d4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 3d8:	00682e73 	rsbeq	r2, r8, r3, ror lr
 3dc:	73000002 	movwvc	r0, #2
 3e0:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
 3e4:	00682e66 	rsbeq	r2, r8, r6, ror #28
 3e8:	72000003 	andvc	r0, r0, #3
 3ec:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
 3f0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 3f4:	65640000 	strbvs	r0, [r4, #-0]!
 3f8:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 3fc:	00682e73 	rsbeq	r2, r8, r3, ror lr
 400:	67000001 	strvs	r0, [r0, -r1]
 404:	61626f6c 	cmnvs	r2, ip, ror #30
 408:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
 40c:	00000100 	andeq	r0, r0, r0, lsl #2
 410:	75727473 	ldrbvc	r7, [r2, #-1139]!	; 0xfffffb8d
 414:	2e737463 	cdpcs	4, 7, cr7, cr3, cr3, {3}
 418:	00010068 	andeq	r0, r1, r8, rrx
 41c:	6c616200 	sfmvs	f6, 2, [r1], #-0
 420:	00682e6c 	rsbeq	r2, r8, ip, ror #28
 424:	00000001 	andeq	r0, r0, r1
 428:	00020500 	andeq	r0, r2, r0, lsl #10
 42c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
 430:	5e130118 	mrcpl	1, 0, r0, cr3, cr8, {0}
 434:	01000302 	tsteq	r0, r2, lsl #6
 438:	02050001 	andeq	r0, r5, #1
 43c:	200002d4 	ldrdcs	r0, [r0], -r4
 440:	30012303 	andcc	r2, r1, r3, lsl #6
 444:	3f3d753d 	svccc	0x003d753d
 448:	3e3d3d3d 	mrccc	13, 1, r3, cr13, cr13, {1}
 44c:	09033d3d 	stmdbeq	r3, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
 450:	2f3ec808 	svccs	0x003ec808
 454:	59312f2f 	ldmdbpl	r1!, {r0, r1, r2, r3, r5, r8, r9, sl, fp, sp}
 458:	75c9593d 	strbvc	r5, [r9, #2365]	; 0x93d
 45c:	78038383 	stmdavc	r3, {r0, r1, r7, r8, r9, pc}
 460:	00030274 	andeq	r0, r3, r4, ror r2
 464:	00bb0101 	adcseq	r0, fp, r1, lsl #2
 468:	00020000 	andeq	r0, r2, r0
 46c:	00000059 	andeq	r0, r0, r9, asr r0
 470:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 474:	0101000d 	tsteq	r1, sp
 478:	00000101 	andeq	r0, r0, r1, lsl #2
 47c:	00000100 	andeq	r0, r0, r0, lsl #2
 480:	73552f01 	cmpvc	r5, #1, 30
 484:	2f737265 	svccs	0x00737265
 488:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 48c:	442f6e61 	strtmi	r6, [pc], #-3681	; 494 <startup-0x1ffffb6c>
 490:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 494:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 498:	6168432f 	cmnvs	r8, pc, lsr #6
 49c:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 4a0:	4f4d2f73 	svcmi	0x004d2f73
 4a4:	616c2f50 	cmnvs	ip, r0, asr pc
 4a8:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 328 <startup-0x1ffffcd8>
 4ac:	00356261 	eorseq	r6, r5, r1, ror #4
 4b0:	6c616200 	sfmvs	f6, 2, [r1], #-0
 4b4:	00632e6c 	rsbeq	r2, r3, ip, ror #28
 4b8:	73000001 	movwvc	r0, #1
 4bc:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
 4c0:	682e7374 	stmdavs	lr!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
 4c4:	00000100 	andeq	r0, r0, r0, lsl #2
 4c8:	02050000 	andeq	r0, r5, #0
 4cc:	200003e4 	andcs	r0, r0, r4, ror #7
 4d0:	67011003 	strvs	r1, [r1, -r3]
 4d4:	4b4c3d3d 	blmi	130f9d0 <startup-0x1ecf0630>
 4d8:	03040200 	movweq	r0, #16896	; 0x4200
 4dc:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 4e0:	008f0803 	addeq	r0, pc, r3, lsl #16
 4e4:	06010402 	streq	r0, [r1], -r2, lsl #8
 4e8:	4c69063c 	stclmi	6, cr0, [r9], #-240	; 0xffffff10
 4ec:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 4f0:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
 4f4:	8f080304 	svchi	0x00080304
 4f8:	01040200 	mrseq	r0, R12_usr
 4fc:	69063c06 	stmdbvs	r6, {r1, r2, sl, fp, ip, sp}
 500:	9f4b4b4d 	svcls	0x004b4b4d
 504:	914b844b 	cmpls	fp, fp, asr #8
 508:	754b924b 	strbvc	r9, [fp, #-587]	; 0xfffffdb5
 50c:	04020076 	streq	r0, [r2], #-118	; 0xffffff8a
 510:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
 514:	02005b83 	andeq	r5, r0, #134144	; 0x20c00
 518:	4a060104 	bmi	180930 <startup-0x1fe7f6d0>
 51c:	4b5a8306 	blmi	16a113c <startup-0x1e95eec4>
 520:	01000402 	tsteq	r0, r2, lsl #8
 524:	00013f01 	andeq	r3, r1, r1, lsl #30
 528:	63000200 	movwvs	r0, #512	; 0x200
 52c:	02000000 	andeq	r0, r0, #0
 530:	0d0efb01 	vstreq	d15, [lr, #-4]
 534:	01010100 	mrseq	r0, (UNDEF: 17)
 538:	00000001 	andeq	r0, r0, r1
 53c:	01000001 	tsteq	r0, r1
 540:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 544:	6b2f7372 	blvs	bdd314 <startup-0x1f422cec>
 548:	61766965 	cmnvs	r6, r5, ror #18
 54c:	6f442f6e 	svcvs	0x00442f6e
 550:	6f6c6e77 	svcvs	0x006c6e77
 554:	2f736461 	svccs	0x00736461
 558:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 55c:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 560:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 564:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 568:	616c2f35 	cmnvs	ip, r5, lsr pc
 56c:	00003562 	andeq	r3, r0, r2, ror #10
 570:	70617267 	rsbvc	r7, r1, r7, ror #4
 574:	64636968 	strbtvs	r6, [r3], #-2408	; 0xfffff698
 578:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 57c:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
 580:	00000100 	andeq	r0, r0, r0, lsl #2
 584:	69666564 	stmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 588:	2e73656e 	cdpcs	5, 7, cr6, cr3, cr14, {3}
 58c:	00010068 	andeq	r0, r1, r8, rrx
 590:	05000000 	streq	r0, [r0, #-0]
 594:	0005a402 	andeq	sl, r5, r2, lsl #8
 598:	e5671420 	strb	r1, [r7, #-1056]!	; 0xfffffbe0
 59c:	6ad76778 	bvs	ff5da384 <ball+0xdf5d982c>
 5a0:	223dca67 	eorscs	ip, sp, #421888	; 0x67000
 5a4:	3d223d3d 	stccc	13, cr3, [r2, #-244]!	; 0xffffff0c
 5a8:	223d223d 	eorscs	r2, sp, #-805306365	; 0xd0000003
 5ac:	3e2f513e 	mcrcc	1, 1, r5, cr15, cr14, {1}
 5b0:	303d3d3d 	eorscc	r3, sp, sp, lsr sp
 5b4:	3d2f3d21 	stccc	13, cr3, [pc, #-132]!	; 538 <startup-0x1ffffac8>
 5b8:	3d3d6d2a 	ldccc	13, cr6, [sp, #-168]!	; 0xffffff58
 5bc:	3d3e6794 	ldccc	7, cr6, [lr, #-592]!	; 0xfffffdb0
 5c0:	2f593d3d 	svccs	0x00593d3d
 5c4:	3d592f3d 	ldclcc	15, cr2, [r9, #-244]	; 0xffffff0c
 5c8:	3d3d4b3e 	vldmdbcc	sp!, {d4-<overflow reg d34>}
 5cc:	3d303d4b 	ldccc	13, cr3, [r0, #-300]!	; 0xfffffed4
 5d0:	594b91af 	stmdbpl	fp, {r0, r1, r2, r3, r5, r7, r8, ip, pc}^
 5d4:	3e2f3d2f 	cdpcc	13, 2, cr3, cr15, cr15, {1}
 5d8:	593d3d59 	ldmdbpl	sp!, {r0, r3, r4, r6, r8, sl, fp, ip, sp}
 5dc:	3d3d313d 	ldfccs	f3, [sp, #-244]!	; 0xffffff0c
 5e0:	3d91693d 	vldrcc.16	s12, [r1, #122]	; 0x7a	; <UNPREDICTABLE>
 5e4:	833d3d59 	teqhi	sp, #5696	; 0x1640
 5e8:	593d914c 	ldmdbpl	sp!, {r2, r3, r6, r8, ip, pc}
 5ec:	4c833d3d 	stcmi	13, cr3, [r3], {61}	; 0x3d
 5f0:	4c675967 			; <UNDEFINED> instruction: 0x4c675967
 5f4:	3d3d3d2f 	ldccc	13, cr3, [sp, #-188]!	; 0xffffff44
 5f8:	4b4b3d3d 	blmi	12cfaf4 <startup-0x1ed3050c>
 5fc:	3d4b4b4b 	vstrcc	d20, [fp, #-300]	; 0xfffffed4
 600:	ad3d3d3e 	ldcge	13, cr3, [sp, #-248]!	; 0xffffff08
 604:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 608:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
 60c:	00490304 	subeq	r0, r9, r4, lsl #6
 610:	06010402 	streq	r0, [r1], -r2, lsl #8
 614:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
 618:	00390602 	eorseq	r0, r9, r2, lsl #12
 61c:	06010402 	streq	r0, [r1], -r2, lsl #8
 620:	4c43063c 	mcrrmi	6, 3, r0, r3, cr12
 624:	040200e5 	streq	r0, [r2], #-229	; 0xffffff1b
 628:	00580601 	subseq	r0, r8, r1, lsl #12
 62c:	58020402 	stmdapl	r2, {r1, sl}
 630:	03040200 	movweq	r0, #16896	; 0x4200
 634:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
 638:	5c065804 	stcpl	8, cr5, [r6], {4}
 63c:	4b2208b1 	blmi	882908 <startup-0x1f77d6f8>
 640:	4b224b22 	blmi	8932d0 <startup-0x1f76cd30>
 644:	4b224b22 	blmi	8932d4 <startup-0x1f76cd2c>
 648:	4b224b22 	blmi	8932d8 <startup-0x1f76cd28>
 64c:	4b234b22 	blmi	8d32dc <startup-0x1f72cd24>
 650:	764b4b69 	strbvc	r4, [fp], -r9, ror #22
 654:	c9c9694b 	stmibgt	r9, {r0, r1, r3, r6, r8, fp, sp, lr}^
 658:	a04baf91 	umaalge	sl, fp, r1, pc	; <UNPREDICTABLE>
 65c:	ac450393 	mcrrge	3, 9, r0, r5, cr3
 660:	02203c03 	eoreq	r3, r0, #768	; 0x300
 664:	01010007 	tsteq	r1, r7

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6f73645f 	svcvs	0x0073645f
   4:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
   8:	00656c64 	rsbeq	r6, r5, r4, ror #24
   c:	7a69735f 	bvc	1a5cd90 <startup-0x1e5a3270>
  10:	4e470065 	cdpmi	0, 4, cr0, cr7, cr5, {3}
  14:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  18:	2e372039 	mrccs	0, 1, r2, cr7, cr9, {1}
  1c:	20312e32 	eorscs	r2, r1, r2, lsr lr
  20:	37313032 			; <UNDEFINED> instruction: 0x37313032
  24:	34303930 	ldrtcc	r3, [r0], #-2352	; 0xfffff6d0
  28:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  2c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  30:	5b202965 	blpl	80a5cc <startup-0x1f7f5a34>
  34:	2f4d5241 	svccs	0x004d5241
  38:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  3c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  40:	622d372d 	eorvs	r3, sp, #11796480	; 0xb40000
  44:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  48:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  4c:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  50:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  54:	30323535 	eorscc	r3, r2, r5, lsr r5
  58:	2d205d34 	stccs	13, cr5, [r0, #-208]!	; 0xffffff30
  5c:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  60:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  64:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  68:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  6c:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  70:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
  74:	616f6c66 	cmnvs	pc, r6, ror #24
  78:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  7c:	6f733d69 	svcvs	0x00733d69
  80:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  84:	4f2d2067 	svcmi	0x002d2067
  88:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
  8c:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
  90:	5f003939 	svcpl	0x00003939
  94:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
  98:	69003834 	stmdbvs	r0, {r2, r4, r5, fp, ip, sp}
  9c:	69487264 	stmdbvs	r8, {r2, r5, r6, r9, ip, sp, lr}^
  a0:	5f006867 	svcpl	0x00006867
  a4:	72656d65 	rsbvc	r6, r5, #6464	; 0x1940
  a8:	636e6567 	cmnvs	lr, #432013312	; 0x19c00000
  ac:	746f0079 	strbtvc	r0, [pc], #-121	; b4 <startup-0x1fffff4c>
  b0:	72657079 	rsbvc	r7, r5, #121	; 0x79
  b4:	63775f00 	cmnvs	r7, #0, 30
  b8:	6d6f7472 	cfstrdvs	mvd7, [pc, #-456]!	; fffffef8 <ball+0xdffff3a0>
  bc:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
  c0:	00657461 	rsbeq	r7, r5, r1, ror #8
  c4:	7363775f 	cmnvc	r3, #24903680	; 0x17c0000
  c8:	6d6f7472 	cfstrdvs	mvd7, [pc, #-456]!	; ffffff08 <ball+0xdffff3b0>
  cc:	735f7362 	cmpvc	pc, #-2013265919	; 0x88000001
  d0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
  d4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
  d8:	6f6c2067 	svcvs	0x006c2067
  dc:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
  e0:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
  e4:	2064656e 	rsbcs	r6, r4, lr, ror #10
  e8:	00746e69 	rsbseq	r6, r4, r9, ror #28
  ec:	66626c5f 			; <UNDEFINED> instruction: 0x66626c5f
  f0:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
  f4:	70757000 	rsbsvc	r7, r5, r0
  f8:	5f007264 	svcpl	0x00007264
  fc:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 100:	5f656c61 	svcpl	0x00656c61
 104:	6d5f0074 	ldclvs	0, cr0, [pc, #-464]	; ffffff3c <ball+0xdffff3e4>
 108:	6f747262 	svcvs	0x00747262
 10c:	735f6377 	cmpvc	pc, #-603979775	; 0xdc000001
 110:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 114:	72646f00 	rsbvc	r6, r4, #0, 30
 118:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
 11c:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 124 <startup-0x1ffffedc>
 120:	65735f6d 	ldrbvs	r5, [r3, #-3949]!	; 0xfffff093
 124:	6f6c0063 	svcvs	0x006c0063
 128:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
 12c:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 130:	00746e69 	rsbseq	r6, r4, r9, ror #28
 134:	7562755f 	strbvc	r7, [r2, #-1375]!	; 0xfffffaa1
 138:	626b0066 	rsbvs	r0, fp, #102	; 0x66
 13c:	74654764 	strbtvc	r4, [r5], #-1892	; 0xfffff89c
 140:	006c6f43 	rsbeq	r6, ip, r3, asr #30
 144:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
 148:	5f5f0065 	svcpl	0x005f0065
 14c:	685f6d74 	ldmdavs	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 150:	0072756f 	rsbseq	r7, r2, pc, ror #10
 154:	66735f5f 	uhsaxvs	r5, r3, pc	; <UNPREDICTABLE>
 158:	6e6f5f00 	cdpvs	15, 6, cr5, cr15, cr0, {0}
 15c:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
 160:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
 164:	5f007367 	svcpl	0x00007367
 168:	6b6f6f63 	blvs	1bdbefc <startup-0x1e424104>
 16c:	5f006569 	svcpl	0x00006569
 170:	6c67735f 	stclvs	3, cr7, [r7], #-380	; 0xfffffe84
 174:	5f006575 	svcpl	0x00006575
 178:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
 17c:	695f0073 	ldmdbvs	pc, {r0, r1, r4, r5, r6}^	; <UNPREDICTABLE>
 180:	78635f73 	stmdavc	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 184:	735f0061 	cmpvc	pc, #97	; 0x61
 188:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 18c:	6c625f00 	stclvs	15, cr5, [r2], #-0
 190:	7a69736b 	bvc	1a5cf44 <startup-0x1e5a30bc>
 194:	635f0065 	cmpvs	pc, #101	; 0x65
 198:	75627476 	strbvc	r7, [r2, #-1142]!	; 0xfffffb8a
 19c:	6f5f0066 	svcvs	0x005f0066
 1a0:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
 1a4:	6d5f0074 	ldclvs	0, cr0, [pc, #-464]	; ffffffdc <ball+0xdffff484>
 1a8:	74727362 	ldrbtvc	r7, [r2], #-866	; 0xfffffc9e
 1ac:	7363776f 	cmnvc	r3, #29097984	; 0x1bc0000
 1b0:	6174735f 	cmnvs	r4, pc, asr r3
 1b4:	5f006574 	svcpl	0x00006574
 1b8:	6c72626d 	lfmvs	f6, 2, [r2], #-436	; 0xfffffe4c
 1bc:	735f6e65 	cmpvc	pc, #1616	; 0x650
 1c0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 1c4:	6e665f00 	cdpvs	15, 6, cr5, cr6, cr0, {0}
 1c8:	73677261 	cmnvc	r7, #268435462	; 0x10000006
 1cc:	72646900 	rsbvc	r6, r4, #0, 18
 1d0:	00776f4c 	rsbseq	r6, r7, ip, asr #30
 1d4:	736e665f 	cmnvc	lr, #99614720	; 0x5f00000
 1d8:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
 1dc:	6d006e67 	stcvs	14, cr6, [r0, #-412]	; 0xfffffe64
 1e0:	7265646f 	rsbvc	r6, r5, #1862270976	; 0x6f000000
 1e4:	6c665f00 	stclvs	15, cr5, [r6], #-0
 1e8:	5f6b636f 	svcpl	0x006b636f
 1ec:	735f0074 	cmpvc	pc, #116	; 0x74
 1f0:	72656474 	rsbvc	r6, r5, #116, 8	; 0x74000000
 1f4:	425f0072 	subsmi	r0, pc, #114	; 0x72
 1f8:	6e696769 	cdpvs	7, 6, cr6, cr9, cr9, {3}
 1fc:	675f0074 			; <UNDEFINED> instruction: 0x675f0074
 200:	616d6d61 	cmnvs	sp, r1, ror #26
 204:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
 208:	6d61676e 	stclvs	7, cr6, [r1, #-440]!	; 0xfffffe48
 20c:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
 210:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
 214:	5f006b5f 	svcpl	0x00006b5f
 218:	006d745f 	rsbeq	r7, sp, pc, asr r4
 21c:	63775f5f 	cmnvs	r7, #380	; 0x17c
 220:	5f006268 	svcpl	0x00006268
 224:	6f647473 	svcvs	0x00647473
 228:	5f007475 	svcpl	0x00007475
 22c:	6c747663 	ldclvs	6, cr7, [r4], #-396	; 0xfffffe74
 230:	5f006e65 	svcpl	0x00006e65
 234:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 238:	70736f00 	rsbsvc	r6, r3, r0, lsl #30
 23c:	72646565 	rsbvc	r6, r4, #423624704	; 0x19400000
 240:	696e5f00 	stmdbvs	lr!, {r8, r9, sl, fp, ip, lr}^
 244:	0073626f 	rsbseq	r6, r3, pc, ror #4
 248:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
 24c:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
 250:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 254:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 258:	5f00746e 	svcpl	0x0000746e
 25c:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 260:	00307469 	eorseq	r7, r0, r9, ror #8
 264:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
 268:	5f6c616e 	svcpl	0x006c616e
 26c:	00667562 	rsbeq	r7, r6, r2, ror #10
 270:	6373615f 	cmnvs	r3, #-1073741801	; 0xc0000017
 274:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 278:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 27c:	73552f00 	cmpvc	r5, #0, 30
 280:	2f737265 	svccs	0x00737265
 284:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 288:	442f6e61 	strtmi	r6, [pc], #-3681	; 290 <startup-0x1ffffd70>
 28c:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 290:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 294:	6168432f 	cmnvs	r8, pc, lsr #6
 298:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 29c:	4f4d2f73 	svcmi	0x004d2f73
 2a0:	616c2f50 	cmnvs	ip, r0, asr pc
 2a4:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 124 <startup-0x1ffffedc>
 2a8:	00356261 	eorseq	r6, r5, r1, ror #4
 2ac:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
 2b0:	00746c75 	rsbseq	r6, r4, r5, ror ip
 2b4:	63775f5f 	cmnvs	r7, #380	; 0x17c
 2b8:	4c5f0068 	mrrcmi	0, 6, r0, pc, cr8	; <UNPREDICTABLE>
 2bc:	5f4b434f 	svcpl	0x004b434f
 2c0:	69770054 	ldmdbvs	r7!, {r2, r4, r6}^
 2c4:	745f746e 	ldrbvc	r7, [pc], #-1134	; 2cc <startup-0x1ffffd34>
 2c8:	6c665f00 	stclvs	15, cr5, [r6], #-0
 2cc:	32736761 	rsbscc	r6, r3, #25427968	; 0x1840000
 2d0:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 2d8 <startup-0x1ffffd28>
 2d4:	65795f6d 	ldrbvs	r5, [r9, #-3949]!	; 0xfffff093
 2d8:	6f007261 	svcvs	0x00007261
 2dc:	73655274 	cmnvc	r5, #116, 4	; 0x40000007
 2e0:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 2e4:	6e5f0064 	cdpvs	0, 5, cr0, cr15, cr4, {3}
 2e8:	66747865 	ldrbtvs	r7, [r4], -r5, ror #16
 2ec:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 2f0:	5f5f0062 	svcpl	0x005f0062
 2f4:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 12c <startup-0x1ffffed4>
 2f8:	5f006e6f 	svcpl	0x00006e6f
 2fc:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 300:	5f007469 	svcpl	0x00007469
 304:	6964735f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
 308:	696e6964 	stmdbvs	lr!, {r2, r5, r6, r8, fp, sp, lr}^
 30c:	6f5f0074 	svcvs	0x005f0074
 310:	745f6666 	ldrbvc	r6, [pc], #-1638	; 318 <startup-0x1ffffce8>
 314:	72665f00 	rsbvc	r5, r6, #0, 30
 318:	696c6565 	stmdbvs	ip!, {r0, r2, r5, r6, r8, sl, sp, lr}^
 31c:	6f007473 	svcvs	0x00007473
 320:	6f4c7264 	svcvs	0x004c7264
 324:	775f0077 			; <UNDEFINED> instruction: 0x775f0077
 328:	6d6f7463 	cfstrdvs	mvd7, [pc, #-396]!	; 1a4 <startup-0x1ffffe5c>
 32c:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
 330:	00657461 	rsbeq	r7, r5, r1, ror #8
 334:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 338:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 33c:	61686320 	cmnvs	r8, r0, lsr #6
 340:	6e5f0072 	mrcvs	0, 2, r0, cr15, cr2, {3}
 344:	5f007765 	svcpl	0x00007765
 348:	72655f68 	rsbvc	r5, r5, #104, 30	; 0x1a0
 34c:	006f6e72 	rsbeq	r6, pc, r2, ror lr	; <UNPREDICTABLE>
 350:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
 354:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
 358:	5f5f0074 	svcpl	0x005f0074
 35c:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 360:	00796164 	rsbseq	r6, r9, r4, ror #2
 364:	62735f5f 	rsbsvs	r5, r3, #380	; 0x17c
 368:	5f006675 	svcpl	0x00006675
 36c:	73626f69 	cmnvc	r2, #420	; 0x1a4
 370:	465f5f00 	ldrbmi	r5, [pc], -r0, lsl #30
 374:	00454c49 	subeq	r4, r5, r9, asr #24
 378:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
 37c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 380:	5f00745f 	svcpl	0x0000745f
 384:	4946735f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
 388:	5f00454c 	svcpl	0x0000454c
 38c:	7473626d 	ldrbtvc	r6, [r3], #-621	; 0xfffffd93
 390:	00657461 	rsbeq	r7, r5, r1, ror #8
 394:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
 398:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
 39c:	5f007478 	svcpl	0x00007478
 3a0:	656c626d 	strbvs	r6, [ip, #-621]!	; 0xfffffd93
 3a4:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
 3a8:	00657461 	rsbeq	r7, r5, r1, ror #8
 3ac:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
 3b0:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
 3b4:	6c5f0064 	mrrcvs	0, 6, r0, pc, cr4	; <UNPREDICTABLE>
 3b8:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 3bc:	5f5f0065 	svcpl	0x005f0065
 3c0:	61656c63 	cmnvs	r5, r3, ror #24
 3c4:	0070756e 	rsbseq	r7, r0, lr, ror #10
 3c8:	736e755f 	cmnvc	lr, #398458880	; 0x17c00000
 3cc:	69636570 	stmdbvs	r3!, {r4, r5, r6, r8, sl, sp, lr}^
 3d0:	64656966 	strbtvs	r6, [r5], #-2406	; 0xfffff69a
 3d4:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 3d8:	5f656c61 	svcpl	0x00656c61
 3dc:	6f666e69 	svcvs	0x00666e69
 3e0:	616d5f00 	cmnvs	sp, r0, lsl #30
 3e4:	73647778 	cmnvc	r4, #120, 14	; 0x1e00000
 3e8:	73552f00 	cmpvc	r5, #0, 30
 3ec:	2f737265 	svccs	0x00737265
 3f0:	7669656b 	strbtvc	r6, [r9], -fp, ror #10
 3f4:	442f6e61 	strtmi	r6, [pc], #-3681	; 3fc <startup-0x1ffffc04>
 3f8:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 3fc:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 400:	6168432f 	cmnvs	r8, pc, lsr #6
 404:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 408:	4f4d2f73 	svcmi	0x004d2f73
 40c:	616c2f50 	cmnvs	ip, r0, asr pc
 410:	6c2f3562 	cfstr32vs	mvfx3, [pc], #-392	; 290 <startup-0x1ffffd70>
 414:	2f356261 	svccs	0x00356261
 418:	7079656b 	rsbsvc	r6, r9, fp, ror #10
 41c:	632e6461 			; <UNDEFINED> instruction: 0x632e6461
 420:	65735f00 	ldrbvs	r5, [r3, #-3840]!	; 0xfffff100
 424:	5f006465 	svcpl	0x00006465
 428:	756f635f 	strbvc	r6, [pc, #-863]!	; d1 <startup-0x1fffff2f>
 42c:	5f00746e 	svcpl	0x0000746e
 430:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 434:	5f5f006b 	svcpl	0x005f006b
 438:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 43c:	735f0065 	cmpvc	pc, #101	; 0x65
 440:	006b6565 	rsbeq	r6, fp, r5, ror #10
 444:	6f70665f 	svcvs	0x0070665f
 448:	00745f73 	rsbseq	r5, r4, r3, ror pc
 44c:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 450:	6e696d5f 	mcrvs	13, 3, r6, cr9, cr15, {2}
 454:	72646f00 	rsbvc	r6, r4, #0, 30
 458:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
 45c:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
 460:	756d5f00 	strbvc	r5, [sp, #-3840]!	; 0xfffff100
 464:	5f00746c 	svcpl	0x0000746c
 468:	74727473 	ldrbtvc	r7, [r2], #-1139	; 0xfffffb8d
 46c:	6c5f6b6f 	mrrcvs	11, 6, r6, pc, cr15	; <UNPREDICTABLE>
 470:	00747361 	rsbseq	r7, r4, r1, ror #6
 474:	746e665f 	strbtvc	r6, [lr], #-1631	; 0xfffff9a1
 478:	73657079 	cmnvc	r5, #121	; 0x79
 47c:	64615f00 	strbtvs	r5, [r1], #-3840	; 0xfffff100
 480:	5f5f0064 	svcpl	0x005f0064
 484:	6e6f4c55 	mcrvs	12, 3, r4, cr15, cr5, {2}
 488:	675f0067 	ldrbvs	r0, [pc, -r7, rrx]
 48c:	61647465 	cmnvs	r4, r5, ror #8
 490:	655f6574 	ldrbvs	r6, [pc, #-1396]	; ffffff24 <ball+0xdffff3cc>
 494:	5f007272 	svcpl	0x00007272
 498:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 49c:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 4a0:	7275706d 	rsbsvc	r7, r5, #109	; 0x6d
 4a4:	74705f65 	ldrbtvc	r5, [r0], #-3941	; 0xfffff09b
 4a8:	755f0072 	ldrbvc	r0, [pc, #-114]	; 43e <startup-0x1ffffbc2>
 4ac:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
 4b0:	61725f64 	cmnvs	r2, r4, ror #30
 4b4:	5f00646e 	svcpl	0x0000646e
 4b8:	00736477 	rsbseq	r6, r3, r7, ror r4
 4bc:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 4c0:	6164775f 	cmnvs	r4, pc, asr r7
 4c4:	675f0079 			; <UNDEFINED> instruction: 0x675f0079
 4c8:	0065756c 	rsbeq	r7, r5, ip, ror #10
 4cc:	616d6e5f 	cmnvs	sp, pc, asr lr
 4d0:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
 4d4:	366c5f00 	strbtcc	r5, [ip], -r0, lsl #30
 4d8:	625f6134 	subsvs	r6, pc, #52, 2
 4dc:	6b006675 	blvs	19eb8 <startup-0x1ffe6148>
 4e0:	63416462 	movtvs	r6, #5218	; 0x1462
 4e4:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
 4e8:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
 4ec:	75665f67 	strbvc	r5, [r6, #-3943]!	; 0xfffff099
 4f0:	5f00636e 	svcpl	0x0000636e
 4f4:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
 4f8:	6e5f0074 	mrcvs	0, 2, r0, cr15, cr4, {3}
 4fc:	00667562 	rsbeq	r7, r6, r2, ror #10
 500:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
 504:	00646573 	rsbeq	r6, r4, r3, ror r5
 508:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
 50c:	6473695f 	ldrbtvs	r6, [r3], #-2399	; 0xfffff6a1
 510:	5f007473 	svcpl	0x00007473
 514:	61636f6c 	cmnvs	r3, ip, ror #30
 518:	6d69746c 	cfstrdvs	mvd7, [r9, #-432]!	; 0xfffffe50
 51c:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
 520:	635f0066 	cmpvs	pc, #102	; 0x66
 524:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
 528:	34725f00 	ldrbtcc	r5, [r2], #-3840	; 0xfffff100
 52c:	50470038 	subpl	r0, r7, r8, lsr r0
 530:	5f004f49 	svcpl	0x00004f49
 534:	6f74626d 	svcvs	0x0074626d
 538:	735f6377 	cmpvc	pc, #-603979775	; 0xdc000001
 53c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 540:	35705f00 	ldrbcc	r5, [r0, #-3840]!	; 0xfffff100
 544:	64690073 	strbtvs	r0, [r9], #-115	; 0xffffff8d
 548:	73655272 	cmnvc	r5, #536870919	; 0x20000007
 54c:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 550:	5f5f0064 	svcpl	0x005f0064
 554:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 38c <startup-0x1ffffc74>
 558:	00796164 	rsbseq	r6, r9, r4, ror #2
 55c:	6f636573 	svcvs	0x00636573
 560:	635f646e 	cmpvs	pc, #1845493760	; 0x6e000000
 564:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 568:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 56c:	635f7961 	cmpvs	pc, #1589248	; 0x184000
 570:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 574:	73797300 	cmnvc	r9, #0, 6
 578:	6b636974 	blvs	18dab50 <startup-0x1e7254b0>
 57c:	616c665f 	cmnvs	ip, pc, asr r6
 580:	65640067 	strbvs	r0, [r4, #-103]!	; 0xffffff99
 584:	5f79616c 	svcpl	0x0079616c
 588:	73007331 	movwvc	r7, #817	; 0x331
 58c:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
 590:	695f6b63 	ldmdbvs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
 594:	685f7172 	ldmdavs	pc, {r1, r4, r5, r6, r8, ip, sp, lr}^	; <UNPREDICTABLE>
 598:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 59c:	2f007265 	svccs	0x00007265
 5a0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 5a4:	656b2f73 	strbvs	r2, [fp, #-3955]!	; 0xfffff08d
 5a8:	6e617669 	cdpvs	6, 6, cr7, cr1, cr9, {3}
 5ac:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 5b0:	616f6c6e 	cmnvs	pc, lr, ror #24
 5b4:	432f7364 			; <UNDEFINED> instruction: 0x432f7364
 5b8:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 5bc:	2f737265 	svccs	0x00737265
 5c0:	2f504f4d 	svccs	0x00504f4d
 5c4:	3562616c 	strbcc	r6, [r2, #-364]!	; 0xfffffe94
 5c8:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 5cc:	52492f35 	subpl	r2, r9, #53, 30	; 0xd4
 5d0:	00632e51 	rsbeq	r2, r3, r1, asr lr
 5d4:	616c6564 	cmnvs	ip, r4, ror #10
 5d8:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 5dc:	00696c6c 	rsbeq	r6, r9, ip, ror #24
 5e0:	616c6564 	cmnvs	ip, r4, ror #10
 5e4:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 5e8:	006f726b 	rsbeq	r7, pc, fp, ror #4
 5ec:	616c6564 	cmnvs	ip, r4, ror #10
 5f0:	35325f79 	ldrcc	r5, [r2, #-3961]!	; 0xfffff087
 5f4:	00736e30 	rsbseq	r6, r3, r0, lsr lr
 5f8:	616c6564 	cmnvs	ip, r4, ror #10
 5fc:	30355f79 	eorscc	r5, r5, r9, ror pc
 600:	00736e30 	rsbseq	r6, r3, r0, lsr lr
 604:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 608:	6b2f7372 	blvs	bdd3d8 <startup-0x1f422c28>
 60c:	61766965 	cmnvs	r6, r5, ror #18
 610:	6f442f6e 	svcvs	0x00442f6e
 614:	6f6c6e77 	svcvs	0x006c6e77
 618:	2f736461 	svccs	0x00736461
 61c:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 620:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 624:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 628:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 62c:	616c2f35 	cmnvs	ip, r5, lsr pc
 630:	642f3562 	strtvs	r3, [pc], #-1378	; 638 <startup-0x1ffff9c8>
 634:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 638:	00632e73 	rsbeq	r2, r3, r3, ror lr
 63c:	616c6564 	cmnvs	ip, r4, ror #10
 640:	47740079 			; <UNDEFINED> instruction: 0x47740079
 644:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
 648:	00797274 	rsbseq	r7, r9, r4, ror r2
 64c:	5f746573 	svcpl	0x00746573
 650:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 654:	72670064 	rsbvc	r0, r7, #100	; 0x64
 658:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 65c:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
 660:	61697469 	cmnvs	r9, r9, ror #8
 664:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
 668:	766f6d00 	strbtvc	r6, [pc], -r0, lsl #26
 66c:	4f500065 	svcmi	0x00500065
 670:	00544e49 	subseq	r4, r4, r9, asr #28
 674:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 678:	6b2f7372 	blvs	bdd448 <startup-0x1f422bb8>
 67c:	61766965 	cmnvs	r6, r5, ror #18
 680:	6f442f6e 	svcvs	0x00442f6e
 684:	6f6c6e77 	svcvs	0x006c6e77
 688:	2f736461 	svccs	0x00736461
 68c:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 690:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 694:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 698:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 69c:	616c2f35 	cmnvs	ip, r5, lsr pc
 6a0:	6d2f3562 	cfstr32vs	mvfx3, [pc, #-392]!	; 520 <startup-0x1ffffae0>
 6a4:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
 6a8:	6f700063 	svcvs	0x00700063
 6ac:	70005873 	andvc	r5, r0, r3, ror r8
 6b0:	0059736f 	subseq	r7, r9, pc, ror #6
 6b4:	506d756e 	rsbpl	r7, sp, lr, ror #10
 6b8:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
 6bc:	4f500073 	svcmi	0x00500073
 6c0:	43454a42 	movtmi	r4, #23106	; 0x5a42
 6c4:	47500054 			; <UNDEFINED> instruction: 0x47500054
 6c8:	454d4f45 	strbmi	r4, [sp, #-3909]	; 0xfffff0bb
 6cc:	00595254 	subseq	r5, r9, r4, asr r2
 6d0:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
 6d4:	72696400 	rsbvc	r6, r9, #0, 8
 6d8:	69640058 	stmdbvs	r4!, {r3, r4, r6}^
 6dc:	67005972 	smlsdxvs	r0, r2, r9, r5
 6e0:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 6e4:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 6e8:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 6ec:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 6f0:	006e6565 	rsbeq	r6, lr, r5, ror #10
 6f4:	6a624f74 	bvs	18944cc <startup-0x1e76bb34>
 6f8:	00746365 	rsbseq	r6, r4, r5, ror #6
 6fc:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 700:	00707574 	rsbseq	r7, r0, r4, ror r5
 704:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 708:	7070615f 	rsbsvc	r6, r0, pc, asr r1
 70c:	61726400 	cmnvs	r2, r0, lsl #8
 710:	69730077 	ldmdbvs	r3!, {r0, r1, r2, r4, r5, r6}^
 714:	0058657a 	subseq	r6, r8, sl, ror r5
 718:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 71c:	50740059 	rsbspl	r0, r4, r9, asr r0
 720:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
 724:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 728:	6f6d006e 	svcvs	0x006d006e
 72c:	6f5f6576 	svcvs	0x005f6576
 730:	63656a62 	cmnvs	r5, #401408	; 0x62000
 734:	70730074 	rsbsvc	r0, r3, r4, ror r0
 738:	59646565 	stmdbpl	r4!, {r0, r2, r5, r6, r8, sl, sp, lr}^
 73c:	78697000 	stmdavc	r9!, {ip, sp, lr}^
 740:	62006c65 	andvs	r6, r0, #25856	; 0x6500
 744:	5f6c6c61 	svcpl	0x006c6c61
 748:	6d6f6567 	cfstr64vs	mvdx6, [pc, #-412]!	; 5b4 <startup-0x1ffffa4c>
 74c:	79727465 	ldmdbvc	r2!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 750:	65707300 	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
 754:	00586465 	subseq	r6, r8, r5, ror #8
 758:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 75c:	6b2f7372 	blvs	bdd52c <startup-0x1f422ad4>
 760:	61766965 	cmnvs	r6, r5, ror #18
 764:	6f442f6e 	svcvs	0x00442f6e
 768:	6f6c6e77 	svcvs	0x006c6e77
 76c:	2f736461 	svccs	0x00736461
 770:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 774:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 778:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 77c:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 780:	616c2f35 	cmnvs	ip, r5, lsr pc
 784:	622f3562 	eorvs	r3, pc, #411041792	; 0x18800000
 788:	2e6c6c61 	cdpcs	12, 6, cr6, cr12, cr1, {3}
 78c:	65730063 	ldrbvs	r0, [r3, #-99]!	; 0xffffff9d
 790:	626f5f74 	rsbvs	r5, pc, #116, 30	; 0x1d0
 794:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 798:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 79c:	63006465 	movwvs	r6, #1125	; 0x465
 7a0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 7a4:	6a626f5f 	bvs	189c528 <startup-0x1e763ad8>
 7a8:	00746365 	rsbseq	r6, r4, r5, ror #6
 7ac:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 7b0:	6a626f5f 	bvs	189c534 <startup-0x1e763acc>
 7b4:	00746365 	rsbseq	r6, r4, r5, ror #6
 7b8:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 7bc:	635f7463 	cmpvs	pc, #1660944384	; 0x63000000
 7c0:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 7c4:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 7c8:	5f780072 	svcpl	0x00780072
 7cc:	69737966 	ldmdbvs	r3!, {r1, r2, r5, r6, r8, fp, ip, sp, lr}^
 7d0:	67006b73 	smlsdxvs	r0, r3, fp, r6
 7d4:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 7d8:	725f6369 	subsvc	r6, pc, #-1543503871	; 0xa4000001
 7dc:	5f646165 	svcpl	0x00646165
 7e0:	61746164 	cmnvs	r4, r4, ror #2
 7e4:	61726700 	cmnvs	r2, r0, lsl #14
 7e8:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 7ec:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 7f0:	74006574 	strvc	r6, [r0], #-1396	; 0xfffffa8c
 7f4:	00706d65 	rsbseq	r6, r0, r5, ror #26
 7f8:	70617267 	rsbvc	r7, r1, r7, ror #4
 7fc:	5f636968 	svcpl	0x00636968
 800:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
 804:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 808:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 80c:	67007261 	strvs	r7, [r0, -r1, ror #4]
 810:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 814:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 818:	5f6c7274 	svcpl	0x006c7274
 81c:	5f746962 	svcpl	0x00746962
 820:	00746573 	rsbseq	r6, r4, r3, ror r5
 824:	6d746962 			; <UNDEFINED> instruction: 0x6d746962
 828:	006b7361 	rsbeq	r7, fp, r1, ror #6
 82c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 830:	6b2f7372 	blvs	bdd600 <startup-0x1f422a00>
 834:	61766965 	cmnvs	r6, r5, ror #18
 838:	6f442f6e 	svcvs	0x00442f6e
 83c:	6f6c6e77 	svcvs	0x006c6e77
 840:	2f736461 	svccs	0x00736461
 844:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 848:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 84c:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 850:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 854:	616c2f35 	cmnvs	ip, r5, lsr pc
 858:	672f3562 	strvs	r3, [pc, -r2, ror #10]!
 85c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 860:	69646369 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 864:	616c7073 	smcvs	50947	; 0xc703
 868:	00632e79 	rsbeq	r2, r3, r9, ror lr
 86c:	70617267 	rsbvc	r7, r1, r7, ror #4
 870:	5f636968 	svcpl	0x00636968
 874:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 878:	61645f65 	cmnvs	r4, r5, ror #30
 87c:	67006174 	smlsdxvs	r0, r4, r1, r6
 880:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 884:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
 888:	5f746961 	svcpl	0x00746961
 88c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 890:	6e690079 	mcrvs	0, 3, r0, cr9, cr9, {3}
 894:	00786564 	rsbseq	r6, r8, r4, ror #10
 898:	70617267 	rsbvc	r7, r1, r7, ror #4
 89c:	5f636968 	svcpl	0x00636968
 8a0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 8a4:	61726700 	cmnvs	r2, r0, lsl #14
 8a8:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 8ac:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 8b0:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 8b4:	616d6d6f 	cmnvs	sp, pc, ror #26
 8b8:	Address 0x00000000000008b8 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <ball+0xdfffe7b6>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x000000000000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	00000058 	andeq	r0, r0, r8, asr r0
  20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  24:	41018e02 	tstmi	r1, r2, lsl #28
  28:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  2c:	00000007 	andeq	r0, r0, r7
  30:	00000020 	andeq	r0, r0, r0, lsr #32
  34:	00000000 	andeq	r0, r0, r0
  38:	20000068 	andcs	r0, r0, r8, rrx
  3c:	00000094 	muleq	r0, r4, r0
  40:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
  44:	87038504 	strhi	r8, [r3, -r4, lsl #10]
  48:	41018e02 	tstmi	r1, r2, lsl #28
  4c:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
  50:	00000007 	andeq	r0, r0, r7
  54:	00000020 	andeq	r0, r0, r0, lsr #32
  58:	00000000 	andeq	r0, r0, r0
  5c:	200000fc 	strdcs	r0, [r0], -ip
  60:	00000088 	andeq	r0, r0, r8, lsl #1
  64:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
  68:	87038504 	strhi	r8, [r3, -r4, lsl #10]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
  70:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
  74:	00000007 	andeq	r0, r0, r7
  78:	0000000c 	andeq	r0, r0, ip
  7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  80:	7c020001 	stcvc	0, cr0, [r2], {1}
  84:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  88:	00000018 	andeq	r0, r0, r8, lsl r0
  8c:	00000078 	andeq	r0, r0, r8, ror r0
  90:	20000184 	andcs	r0, r0, r4, lsl #3
  94:	0000003c 	andeq	r0, r0, ip, lsr r0
  98:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  9c:	41018e02 	tstmi	r1, r2, lsl #28
  a0:	0000070d 	andeq	r0, r0, sp, lsl #14
  a4:	0000000c 	andeq	r0, r0, ip
  a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  ac:	7c020001 	stcvc	0, cr0, [r2], {1}
  b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  b4:	00000018 	andeq	r0, r0, r8, lsl r0
  b8:	000000a4 	andeq	r0, r0, r4, lsr #1
  bc:	200001c0 	andcs	r0, r0, r0, asr #3
  c0:	00000044 	andeq	r0, r0, r4, asr #32
  c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  c8:	41018e02 	tstmi	r1, r2, lsl #28
  cc:	0000070d 	andeq	r0, r0, sp, lsl #14
  d0:	00000018 	andeq	r0, r0, r8, lsl r0
  d4:	000000a4 	andeq	r0, r0, r4, lsr #1
  d8:	20000204 	andcs	r0, r0, r4, lsl #4
  dc:	00000012 	andeq	r0, r0, r2, lsl r0
  e0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  e4:	41018e02 	tstmi	r1, r2, lsl #28
  e8:	0000070d 	andeq	r0, r0, sp, lsl #14
  ec:	0000001c 	andeq	r0, r0, ip, lsl r0
  f0:	000000a4 	andeq	r0, r0, r4, lsr #1
  f4:	20000216 	andcs	r0, r0, r6, lsl r2
  f8:	0000002c 	andeq	r0, r0, ip, lsr #32
  fc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 100:	41018e02 	tstmi	r1, r2, lsl #28
 104:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 108:	00000007 	andeq	r0, r0, r7
 10c:	0000001c 	andeq	r0, r0, ip, lsl r0
 110:	000000a4 	andeq	r0, r0, r4, lsr #1
 114:	20000242 	andcs	r0, r0, r2, asr #4
 118:	00000026 	andeq	r0, r0, r6, lsr #32
 11c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 120:	41018e02 	tstmi	r1, r2, lsl #28
 124:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 128:	00000007 	andeq	r0, r0, r7
 12c:	00000018 	andeq	r0, r0, r8, lsl r0
 130:	000000a4 	andeq	r0, r0, r4, lsr #1
 134:	20000268 	andcs	r0, r0, r8, ror #4
 138:	0000003c 	andeq	r0, r0, ip, lsr r0
 13c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 140:	41018e02 	tstmi	r1, r2, lsl #28
 144:	0000070d 	andeq	r0, r0, sp, lsl #14
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	000000a4 	andeq	r0, r0, r4, lsr #1
 150:	200002a4 	andcs	r0, r0, r4, lsr #5
 154:	00000030 	andeq	r0, r0, r0, lsr r0
 158:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 15c:	41018e02 	tstmi	r1, r2, lsl #28
 160:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 164:	00000007 	andeq	r0, r0, r7
 168:	0000000c 	andeq	r0, r0, ip
 16c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 170:	7c020001 	stcvc	0, cr0, [r2], {1}
 174:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 178:	0000000c 	andeq	r0, r0, ip
 17c:	00000168 	andeq	r0, r0, r8, ror #2
 180:	20000000 	andcs	r0, r0, r0
 184:	0000000c 	andeq	r0, r0, ip
 188:	00000018 	andeq	r0, r0, r8, lsl r0
 18c:	00000168 	andeq	r0, r0, r8, ror #2
 190:	200002d4 	ldrdcs	r0, [r0], -r4
 194:	00000084 	andeq	r0, r0, r4, lsl #1
 198:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 19c:	41018e02 	tstmi	r1, r2, lsl #28
 1a0:	0000070d 	andeq	r0, r0, sp, lsl #14
 1a4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a8:	00000168 	andeq	r0, r0, r8, ror #2
 1ac:	20000358 	andcs	r0, r0, r8, asr r3
 1b0:	0000008c 	andeq	r0, r0, ip, lsl #1
 1b4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1b8:	41018e02 	tstmi	r1, r2, lsl #28
 1bc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1c0:	00000007 	andeq	r0, r0, r7
 1c4:	0000000c 	andeq	r0, r0, ip
 1c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1cc:	7c020001 	stcvc	0, cr0, [r2], {1}
 1d0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d8:	000001c4 	andeq	r0, r0, r4, asr #3
 1dc:	200003e4 	andcs	r0, r0, r4, ror #7
 1e0:	00000020 	andeq	r0, r0, r0, lsr #32
 1e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1e8:	41018e02 	tstmi	r1, r2, lsl #28
 1ec:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 1f0:	00000007 	andeq	r0, r0, r7
 1f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1f8:	000001c4 	andeq	r0, r0, r4, asr #3
 1fc:	20000404 	andcs	r0, r0, r4, lsl #8
 200:	0000005c 	andeq	r0, r0, ip, asr r0
 204:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 208:	41018e02 	tstmi	r1, r2, lsl #28
 20c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 210:	00000007 	andeq	r0, r0, r7
 214:	0000001c 	andeq	r0, r0, ip, lsl r0
 218:	000001c4 	andeq	r0, r0, r4, asr #3
 21c:	20000460 	andcs	r0, r0, r0, ror #8
 220:	0000005c 	andeq	r0, r0, ip, asr r0
 224:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 228:	41018e02 	tstmi	r1, r2, lsl #28
 22c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 230:	00000007 	andeq	r0, r0, r7
 234:	0000001c 	andeq	r0, r0, ip, lsl r0
 238:	000001c4 	andeq	r0, r0, r4, asr #3
 23c:	200004bc 			; <UNDEFINED> instruction: 0x200004bc
 240:	000000e8 	andeq	r0, r0, r8, ror #1
 244:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 248:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 24c:	180e4101 	stmdane	lr, {r0, r8, lr}
 250:	00070d41 	andeq	r0, r7, r1, asr #26
 254:	0000000c 	andeq	r0, r0, ip
 258:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 25c:	7c020001 	stcvc	0, cr0, [r2], {1}
 260:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 264:	0000001c 	andeq	r0, r0, ip, lsl r0
 268:	00000254 	andeq	r0, r0, r4, asr r2
 26c:	200005a4 	andcs	r0, r0, r4, lsr #11
 270:	00000038 	andeq	r0, r0, r8, lsr r0
 274:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 278:	41018e02 	tstmi	r1, r2, lsl #28
 27c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 280:	00000007 	andeq	r0, r0, r7
 284:	0000001c 	andeq	r0, r0, ip, lsl r0
 288:	00000254 	andeq	r0, r0, r4, asr r2
 28c:	200005dc 	ldrdcs	r0, [r0], -ip
 290:	00000034 	andeq	r0, r0, r4, lsr r0
 294:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 298:	41018e02 	tstmi	r1, r2, lsl #28
 29c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 2a0:	00000007 	andeq	r0, r0, r7
 2a4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2a8:	00000254 	andeq	r0, r0, r4, asr r2
 2ac:	20000610 	andcs	r0, r0, r0, lsl r6
 2b0:	00000060 	andeq	r0, r0, r0, rrx
 2b4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2b8:	41018e02 	tstmi	r1, r2, lsl #28
 2bc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 2c0:	00000007 	andeq	r0, r0, r7
 2c4:	00000018 	andeq	r0, r0, r8, lsl r0
 2c8:	00000254 	andeq	r0, r0, r4, asr r2
 2cc:	20000670 	andcs	r0, r0, r0, ror r6
 2d0:	00000060 	andeq	r0, r0, r0, rrx
 2d4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2d8:	41018e02 	tstmi	r1, r2, lsl #28
 2dc:	0000070d 	andeq	r0, r0, sp, lsl #14
 2e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2e4:	00000254 	andeq	r0, r0, r4, asr r2
 2e8:	200006d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 2ec:	00000094 	muleq	r0, r4, r0
 2f0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2f4:	41018e02 	tstmi	r1, r2, lsl #28
 2f8:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 2fc:	00000007 	andeq	r0, r0, r7
 300:	0000001c 	andeq	r0, r0, ip, lsl r0
 304:	00000254 	andeq	r0, r0, r4, asr r2
 308:	20000764 	andcs	r0, r0, r4, ror #14
 30c:	00000080 	andeq	r0, r0, r0, lsl #1
 310:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 314:	41018e02 	tstmi	r1, r2, lsl #28
 318:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 31c:	00000007 	andeq	r0, r0, r7
 320:	0000001c 	andeq	r0, r0, ip, lsl r0
 324:	00000254 	andeq	r0, r0, r4, asr r2
 328:	200007e4 	andcs	r0, r0, r4, ror #15
 32c:	00000046 	andeq	r0, r0, r6, asr #32
 330:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 334:	41018e02 	tstmi	r1, r2, lsl #28
 338:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 33c:	00000007 	andeq	r0, r0, r7
 340:	0000001c 	andeq	r0, r0, ip, lsl r0
 344:	00000254 	andeq	r0, r0, r4, asr r2
 348:	2000082a 	andcs	r0, r0, sl, lsr #16
 34c:	00000046 	andeq	r0, r0, r6, asr #32
 350:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 354:	41018e02 	tstmi	r1, r2, lsl #28
 358:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 35c:	00000007 	andeq	r0, r0, r7
 360:	0000001c 	andeq	r0, r0, ip, lsl r0
 364:	00000254 	andeq	r0, r0, r4, asr r2
 368:	20000870 	andcs	r0, r0, r0, ror r8
 36c:	0000002a 	andeq	r0, r0, sl, lsr #32
 370:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 374:	41018e02 	tstmi	r1, r2, lsl #28
 378:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 37c:	00000007 	andeq	r0, r0, r7
 380:	00000018 	andeq	r0, r0, r8, lsl r0
 384:	00000254 	andeq	r0, r0, r4, asr r2
 388:	2000089a 	mulcs	r0, sl, r8
 38c:	00000056 	andeq	r0, r0, r6, asr r0
 390:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 394:	41018e02 	tstmi	r1, r2, lsl #28
 398:	0000070d 	andeq	r0, r0, sp, lsl #14
 39c:	0000001c 	andeq	r0, r0, ip, lsl r0
 3a0:	00000254 	andeq	r0, r0, r4, asr r2
 3a4:	200008f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 3a8:	00000058 	andeq	r0, r0, r8, asr r0
 3ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 3b0:	41018e02 	tstmi	r1, r2, lsl #28
 3b4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 3b8:	00000007 	andeq	r0, r0, r7
 3bc:	00000020 	andeq	r0, r0, r0, lsr #32
 3c0:	00000254 	andeq	r0, r0, r4, asr r2
 3c4:	20000948 	andcs	r0, r0, r8, asr #18
 3c8:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 3cc:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 3d0:	86048505 	strhi	r8, [r4], -r5, lsl #10
 3d4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 3d8:	280e4101 	stmdacs	lr, {r0, r8, lr}
 3dc:	00070d41 	andeq	r0, r7, r1, asr #26

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	200002d4 	ldrdcs	r0, [r0], -r4
   4:	200003e4 	andcs	r0, r0, r4, ror #7
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
